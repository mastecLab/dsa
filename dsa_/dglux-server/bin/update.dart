import "dart:async";import "dart:io";import "dart:io" as VR;import "dart:typed_data";import "dart:convert";import "dart:collection";import "dart:isolate";import "dart:math";import "dart:math" as UI;Uint8List fR(List<int> A){if(A is Uint8List){if(A.offsetInBytes==0){return A;}else{return A.toList();}}return new Uint8List.fromList(A);}class SG extends IterableBase<BC>{List<BC> iD=[] ;String DL;void NX(BC A){iD.add(A);}int get length=>iD.length;BC operator[](int A)=>iD[A];BC get first=>iD.first;BC get last=>iD.last;bool get isEmpty=>iD.isEmpty;bool get isNotEmpty=>iD.isNotEmpty;Iterator<BC> get iterator=>iD.iterator;}class BC{static const int YI=0;static const int bR=8;String name;int size;int mode;int hZ=0;int fZ=0;int gZ;bool wX=true;int gD;String DL;bool eZ=true;BC(this.name,this.size,A,[this.lZ=YI]){if(A is List<int>){mZ=A;nZ=new u(mZ);}else if(A is u){nZ=new u.yY(A);}}List<int> get EL{if(mZ==null){gP();}return mZ;}void gP(){if(mZ==null){if(lZ==bR){var A=nZ.OF();mZ=gR.decode(A);}else{mZ=nZ.OF();}lZ=YI;}}bool get vX=>lZ!=YI;String toString()=>name;int lZ;u nZ;List<int> mZ;static final ZLibCodec gR=new ZLibCodec(raw:true);}class QC implements Exception{final String message;QC(this.message);String toString()=>"ArchiveException: ${message}";}const int GM=0;const int XI=1;int dR(List<int> B,[int A=0]){int D=B.length;A=A^0xffffffff;int C=0;while(D>=8){A=LD[(A^B[C++ ])&0xff]^(A>>8);A=LD[(A^B[C++ ])&0xff]^(A>>8);A=LD[(A^B[C++ ])&0xff]^(A>>8);A=LD[(A^B[C++ ])&0xff]^(A>>8);A=LD[(A^B[C++ ])&0xff]^(A>>8);A=LD[(A^B[C++ ])&0xff]^(A>>8);A=LD[(A^B[C++ ])&0xff]^(A>>8);A=LD[(A^B[C++ ])&0xff]^(A>>8);D-= 8;}if(D>0)do{A=LD[(A^B[C++ ])&0xff]^(A>>8);}while( --D>0);return A^0xffffffff;}const List<int> LD=const[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918000,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];class u{List<int> oZ;List<int> get buffer=>oZ;int offset;int pZ;int get start=>pZ;int qZ;int get byteOrder=>qZ;u(A,{int byteOrder,int start,int length}){if(byteOrder==null){byteOrder=GM;}qZ=byteOrder;if(start==null){if(A is TypedData){pZ=A.offsetInBytes;}else{pZ=0;}}else{pZ=start;}if(length!=null){rZ=length;}else{if(A is TypedData){rZ=A.lengthInBytes;}else if(A is List<int>){rZ=A.length;}else{throw "Invalid data input.";}}if(A is TypedData){oZ=A.buffer.asUint8List();}else if(A is List<int>){oZ=A;}else{throw "Invalid data input.";}offset=pZ;}u.yY(u A){this.oZ=A.buffer;this.offset=A.offset;this.pZ=A.pZ;this.rZ=A.rZ;this.qZ=A.byteOrder;}int get position=>offset-start;int get length=>rZ-(offset-start);bool get CG=>offset>=(start+rZ);void reset(){offset=start;}int operator[](int A)=>buffer[offset+A];u gE([int A,int B]){if(A==null){A=this.offset;}else{A+= start;}if(B==null||B<0){B=rZ-(A-start);}return new u(buffer,byteOrder:byteOrder,start:A,length:B);}int indexOf(int B,[int C=0]){for(int A=this.offset+C,D=this.offset+length;A<D; ++A){if(buffer[A]==B){return A-this.start;}}return -1;}void skip(int A){offset+= A;}int readByte(){return buffer[offset++ ];}u LG(int B){u A=gE(this.offset-start,B);offset+= A.length;return A;}String GI([int A]){if(A==null){List<int> B=[] ;while(!CG){int C=readByte();if(C==0){return new String.fromCharCodes(B);}B.add(C);}throw new QC('EOF reached without finding string terminator');}u D=LG(A);Uint8List G=D.OF();String I=new String.fromCharCodes(G);return I;}int CB(){int A=buffer[offset++ ]&0xff;int B=buffer[offset++ ]&0xff;if(byteOrder==XI){return (A<<8)|B;}return (B<<8)|A;}int JB(){int A=buffer[offset++ ]&0xff;int B=buffer[offset++ ]&0xff;int C=buffer[offset++ ]&0xff;int D=buffer[offset++ ]&0xff;if(byteOrder==XI){return (A<<24)|(B<<16)|(C<<8)|D;}return (D<<24)|(C<<16)|(B<<8)|A;}int nD(){int A=buffer[offset++ ]&0xff;int B=buffer[offset++ ]&0xff;int C=buffer[offset++ ]&0xff;int D=buffer[offset++ ]&0xff;int G=buffer[offset++ ]&0xff;int I=buffer[offset++ ]&0xff;int J=buffer[offset++ ]&0xff;int K=buffer[offset++ ]&0xff;if(byteOrder==XI){return (A<<56)|(B<<48)|(C<<40)|(D<<32)|(G<<24)|(I<<16)|(J<<8)|K;}return (K<<56)|(J<<48)|(I<<40)|(G<<32)|(D<<24)|(C<<16)|(B<<8)|A;}Uint8List OF(){int A=length;if(buffer is Uint8List){Uint8List B=buffer;Uint8List C=new Uint8List.view(B.buffer,offset,A);return C;}return new Uint8List.fromList(buffer.sublist(offset,offset+A));}int rZ;}class VI{int length;final int byteOrder;VI({int size: TG,this.byteOrder: GM}):oZ=new Uint8List(size==null?TG:size),length=0;List<int> RL(){return new Uint8List.view(oZ.buffer,0,length);}void clear(){oZ=new Uint8List(TG);length=0;}void reset(){rZ=0;}void writeByte(int A){if(length==oZ.length){sZ();}oZ[length++ ]=A&0xff;}void wL(List<int> B,[int A]){if(A==null){A=B.length;}while(length+A>oZ.length){sZ((length+A)-oZ.length);}oZ.setRange(length,length+A,B);length+= A;}void YY(u A){while(length+A.length>oZ.length){sZ((length+A.length)-oZ.length);}oZ.setRange(length,length+A.length,A.buffer,A.offset);length+= A.length;}List<int> gE(int B,[int A]){if(B<0){B=(length)+B;}if(A==null){A=length;}else if(A<0){A=length+A;}return new Uint8List.view(oZ.buffer,B,A-B);}void sZ([int A]){int B=TG;if(A!=null){if(A>B){B=A;}}Uint8List C=new Uint8List(oZ.length+B);C.setRange(0,oZ.length,oZ);oZ=C;}static const int TG=0x8000;Uint8List oZ;}class WI{static const int aR=0x06054b50;static const int cR=0x07064b50;static const int IM=20;static const int eR=0x06064b50;int PL=-1;int bQ=0;int lP=0;int AR=0;int zQ=0;int BL;int AL;String ZY='';List<kE> AQ=[] ;WI.xY(u A){PL=tZ(A);A.offset=PL;int G=A.JB();bQ=A.CB();lP=A.CB();AR=A.CB();zQ=A.CB();BL=A.JB();AL=A.JB();int C=A.CB();if(C>0){ZY=A.GI(C);}uZ(A);u B=A.gE(AL,BL);while(!B.CG){int D=B.JB();if(D!=kE.XR){break;}AQ.add(new kE(B,A));}}void uZ(u A){int C=A.offset;int G=PL-IM;u B=A.gE(G,IM);int D=B.JB();if(D!=cR){A.offset=C;return;}int l=B.JB();int I=B.nD();int t=B.JB();A.offset=I;D=A.JB();if(D!=eR){A.offset=C;return;}int OB=A.nD();int VB=A.CB();int AC=A.CB();int J=A.JB();int K=A.JB();int N=A.nD();int S=A.nD();int U=A.nD();int a=A.nD();bQ=J;lP=K;AR=N;zQ=S;BL=U;AL=a;A.offset=C;}int tZ(u A){int C=A.offset;int D=A.length;for(int B=D-4;B>0; --B){A.offset=B;int G=A.JB();if(G==aR){A.offset=C;return B;}}throw new QC('Could not find End of Central Directory Record');}}class RG{static const int WR=0;static const int YR=8;static const int HM=0x04034b50;int qQ=HM;int version=0;int BQ=0;int HF=0;int BY=0;int AY=0;int gD;int GF;int iE;String KF='';List<int> OL=[] ;kE JQ;RG([u A,this.JQ]){if(A!=null){qQ=A.JB();if(qQ!=HM){throw new QC('Invalid Zip Signature');}version=A.CB();BQ=A.CB();HF=A.CB();BY=A.CB();AY=A.CB();gD=A.JB();GF=A.JB();iE=A.JB();int C=A.CB();int D=A.CB();KF=A.GI(C);OL=A.LG(D).OF();nZ=A.LG(JQ.GF);if(BQ&0x08!=0){int B=A.JB();if(B==0x08074b50){gD=A.JB();}else{gD=B;}GF=A.JB();iE=A.JB();}}}List<int> get EL{if(mZ==null){if(HF==YR){mZ=new FM.wY(nZ,iE).RL();HF=WR;}else{mZ=nZ.OF();}}return mZ;}String toString()=>KF;u nZ;List<int> mZ;int vZ;}class kE{static const int XR=0x02014b50;int WY=0;int XY=0;int lX=0;int HF=0;int DY=0;int CY=0;int gD;int GF;int iE;int kP;int tX;int fX;int bL;String KF='';List<int> OL=[] ;String gX='';RG file;kE([u A,u D]){if(A!=null){WY=A.CB();XY=A.CB();lX=A.CB();HF=A.CB();DY=A.CB();CY=A.CB();gD=A.JB();GF=A.JB();iE=A.JB();int G=A.CB();int I=A.CB();int J=A.CB();kP=A.CB();tX=A.CB();fX=A.JB();bL=A.JB();if(G>0){KF=A.GI(G);}if(I>0){u B=A.LG(I);OL=B.OF();int K=B.CB();int C=B.CB();if(K==1){if(C>=8){iE=B.nD();}if(C>=16){GF=B.nD();}if(C>=24){bL=B.nD();}if(C>=28){kP=B.JB();}}}if(J>0){gX=A.GI(J);}if(D!=null){D.offset=bL;file=new RG(D,this);}}}String toString()=>KF;}class ZR{WI iP;SG VX(List<int> A,{bool verify: false}){return UX(new u(fR(A)),verify:verify);}SG UX(u D,{bool verify: false}){iP=new WI.xY(D);SG B=new SG();for(kE G in iP.AQ){RG A=G.file;if(verify){int I=dR(A.EL);if(I!=A.gD){throw new QC('Invalid CRC for file in archive.');}}var J=A.mZ!=null?A.mZ:A.nZ;BC C=new BC(A.KF,A.iE,J,A.HF);C.gD=A.gD;B.NX(C);}return B;}}class HC{Uint32List hE;int FG=0;int YQ=0x7fffffff;HC(List<int> B){int J=B.length;for(int A=0;A<J; ++A){if(B[A]>FG){FG=B[A];}if(B[A]<YQ){YQ=B[A];}}int K=1<<FG;hE=new Uint32List(K);for(int D=1,G=0,N=2;D<=FG;){for(int A=0;A<J; ++A){if(B[A]==D){int I=0;int S=G;for(int C=0;C<D; ++C){I=(I<<1)|(S&1);S>>= 1;}for(int C=I;C<K;C+= N){hE[C]=(D<<16)|A;} ++G;}} ++D;G<<= 1;N<<= 1;}}}class FM{u input;final VI iB;FM.wY(u A,[int B]):input=A,iB=new VI(size:B){wZ();}List<int> RL(){return iB.RL();}void wZ(){xZ=0;yZ=0;while(zZ());}bool zZ(){if(input.CG){return false;}int A=Aa(3);bool C=(A&0x1)!=0;int B=A>>1;switch (B){case hR:Ba();break;case iR:Ca();break;case jR:Da();break;default:throw new QC('unknown BTYPE: ${B}');}return !C;}int Aa(int A){if(A==0){return 0;}while(yZ<A){if(input.CG){throw new QC('input buffer is broken');}int B=input.readByte();xZ|= B<<yZ;yZ+= 8;}int B=xZ&((1<<A)-1);xZ>>= A;yZ-= A;return B;}int Ea(HC A){List<int> G=A.hE;int B=A.FG;while(yZ<B){if(input.CG){break;}int I=input.readByte();xZ|= I<<yZ;yZ+= 8;}int C=G[xZ&((1<<B)-1)];int D=C>>16;xZ>>= D;yZ-= D;return C&0xffff;}void Ba(){xZ=0;yZ=0;int A=Aa(16);int B=Aa(16);if(A==~B){throw new QC('Invalid uncompressed block header');}if(A>input.length){throw new QC('Input buffer is broken');}iB.YY(input.LG(A));}void Ca(){Fa(Ga,Ha);}void Da(){int B=Aa(5)+257;int C=Aa(5)+1;int I=Aa(4)+4;Uint8List D=new Uint8List(JM.length);for(int A=0;A<I; ++A){D[JM[A]]=Aa(3);}HC G=new HC(D);Uint8List J=new Uint8List(B);Uint8List K=new Uint8List(C);List<int> N=Ia(B,G,J);List<int> S=Ia(C,G,K);Fa(new HC(N),new HC(S));}void Fa(HC I,HC J){while(true){int A=Ea(I);if(A<0||A>285){throw new QC('Invalid Huffman Code ${A}');}if(A==256){break;}if(A<256){iB.writeByte(A&0xff);continue;}int G=A-257;int C=mR[G]+Aa(nR[G]);int D=Ea(J);if(D>=0&&D<=29){int B=oR[D]+Aa(pR[D]);while(C>B){iB.wL(iB.gE(-B));C-= B;}if(C==B){iB.wL(iB.gE(-B));}else{iB.wL(iB.gE(-B,C-B));}}else{throw new QC('Illegal unused distance symbol');}}while(yZ>=8){yZ-= 8;input.offset-- ;}}List<int> Ia(int I,HC J,List<int> B){int G=0;int C=0;while(C<I){int A=Ea(J);switch (A){case 16:int D=3+Aa(2);while(D-- >0){B[C++ ]=G;}break;case 17:int D=3+Aa(3);while(D-- >0){B[C++ ]=0;}G=0;break;case 18:int D=11+Aa(7);while(D-- >0){B[C++ ]=0;}G=0;break;default:if(A<0||A>15){throw new QC('Invalid Huffman Code: ${A}');}B[C++ ]=A;G=A;break;}}return B;}int xZ=0;int yZ=0;int Ja=0;static const int hR=0;static const int iR=1;static const int jR=2;static const List<int> kR=const[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8];final HC Ga=new HC(kR);static const List<int> lR=const[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];final HC Ha=new HC(lR);static const List<int> JM=const[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];static const List<int> mR=const[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];static const List<int> nR=const[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0];static const List<int> oR=const[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];static const List<int> pR=const[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];}const JC=0x2e;const aC=0x2f;const LJ=0x3a;const yM=0x41;const zM=0x5a;const AN=0x61;const BN=0x7a;const sE=0x5c;const int KM=0x09;const int ZI=0x0A;const int LM=0x0D;const int qR=0x20;const int aI=0x2B;const int bI=0x2D;const int UG=0x2E;const int lE=0x30;const int VG=0x39;const int rR=0x46;const int sR=0x4E;const int tR=0x54;const int uR=0x66;const int vR=0x6E;const int wR=0x6F;const int xR=0x74;const int yR=0x78;const int zR=0x7E;abstract class jM{}abstract class PT{}class iG extends VT{static const kM=16;bool Ka;List<List<int>> La;int Ma;int Na;int Oa;int Pa;int Qa;int get blockSize=>kM;void reset(){Ma=0;Na=Oa=Pa=Qa=0;Ka=false;La=null;}void init(bool K,jM N){var I=(N as XF).key;int B=(I.lengthInBytes/4).floor();if(((B!=4)&&(B!=6)&&(B!=8))||((B*4)!=I.lengthInBytes)){throw new ArgumentError("Key length must be 128/192/256 bits");}this.Ka=K;Ma=B+6;La=new List.generate(Ma+1,(int A)=>new List<int>(4));var S=new ByteData.view((N as XF).key.buffer);for(var A=0,J=0;A<I.lengthInBytes;A+= 4,J++ ){var C=ZF(S,A,Endianness.LITTLE_ENDIAN);La[J>>2][J&3]=C;}int U=(Ma+1)<<2;for(int A=B;A<U;A++ ){int D=La[(A-1)>>2][(A-1)&3].toInt();if((A%B)==0){D=lM(jG(D,8))^UT[((A/B)-1).floor()];}else if((B>6)&&((A%B)==4)){D=lM(D);}var C=La[(A-B)>>2][(A-B)&3]^D;La[A>>2][A&3]=C;}if(!K){for(var G=1;G<Ma;G++ ){for(var A=0;A<4;A++ ){var C=TT(La[G][A].toInt());La[G][A]=C;}}}}int hQ(Uint8List C,int A,Uint8List D,int B){if(La==null){throw new StateError("AES engine not initialised");}if((A+(32/2))>C.lengthInBytes){throw new ArgumentError("Input buffer too short");}if((B+(32/2))>D.lengthInBytes){throw new ArgumentError("Output buffer too short");}var G=new ByteData.view(C.buffer);var I=new ByteData.view(D.buffer);if(Ka){Ra(G,A);Sa(La);Ta(I,B);}else{Ra(G,A);Ua(La);Ta(I,B);}return kM;}void Sa(List<List<int>> B){int A,C,D,G,I;Na^= B[0][0].toInt();Oa^= B[0][1].toInt();Pa^= B[0][2].toInt();Qa^= B[0][3].toInt();A=1;while(A<Ma-1){C=SC[Na&255]^TC[(Oa>>8)&255]^UC[(Pa>>16)&255]^VC[(Qa>>24)&255]^B[A][0].toInt();D=SC[Oa&255]^TC[(Pa>>8)&255]^UC[(Qa>>16)&255]^VC[(Na>>24)&255]^B[A][1].toInt();G=SC[Pa&255]^TC[(Qa>>8)&255]^UC[(Na>>16)&255]^VC[(Oa>>24)&255]^B[A][2].toInt();I=SC[Qa&255]^TC[(Na>>8)&255]^UC[(Oa>>16)&255]^VC[(Pa>>24)&255]^B[A][3].toInt();A++ ;Na=SC[C&255]^TC[(D>>8)&255]^UC[(G>>16)&255]^VC[(I>>24)&255]^B[A][0].toInt();Oa=SC[D&255]^TC[(G>>8)&255]^UC[(I>>16)&255]^VC[(C>>24)&255]^B[A][1].toInt();Pa=SC[G&255]^TC[(I>>8)&255]^UC[(C>>16)&255]^VC[(D>>24)&255]^B[A][2].toInt();Qa=SC[I&255]^TC[(C>>8)&255]^UC[(D>>16)&255]^VC[(G>>24)&255]^B[A][3].toInt();A++ ;}C=SC[Na&255]^TC[(Oa>>8)&255]^UC[(Pa>>16)&255]^VC[(Qa>>24)&255]^B[A][0].toInt();D=SC[Oa&255]^TC[(Pa>>8)&255]^UC[(Qa>>16)&255]^VC[(Na>>24)&255]^B[A][1].toInt();G=SC[Pa&255]^TC[(Qa>>8)&255]^UC[(Na>>16)&255]^VC[(Oa>>24)&255]^B[A][2].toInt();I=SC[Qa&255]^TC[(Na>>8)&255]^UC[(Oa>>16)&255]^VC[(Pa>>24)&255]^B[A][3].toInt();A++ ;Na=(RB[C&255]&255)^((RB[(D>>8)&255]&255)<<8)^((RB[(G>>16)&255]&255)<<16)^(RB[(I>>24)&255]<<24)^B[A][0].toInt();Oa=(RB[D&255]&255)^((RB[(G>>8)&255]&255)<<8)^((RB[(I>>16)&255]&255)<<16)^(RB[(C>>24)&255]<<24)^B[A][1].toInt();Pa=(RB[G&255]&255)^((RB[(I>>8)&255]&255)<<8)^((RB[(C>>16)&255]&255)<<16)^(RB[(D>>24)&255]<<24)^B[A][2].toInt();Qa=(RB[I&255]&255)^((RB[(C>>8)&255]&255)<<8)^((RB[(D>>16)&255]&255)<<16)^(RB[(G>>24)&255]<<24)^B[A][3].toInt();}void Ua(List<List<int>> A){int B,C,D,G,I;Na^= A[Ma][0].toInt();Oa^= A[Ma][1].toInt();Pa^= A[Ma][2].toInt();Qa^= A[Ma][3].toInt();B=Ma-1;while(B>1){C=WC[Na&255]^XC[(Qa>>8)&255]^YC[(Pa>>16)&255]^ZC[(Oa>>24)&255]^A[B][0].toInt();D=WC[Oa&255]^XC[(Na>>8)&255]^YC[(Qa>>16)&255]^ZC[(Pa>>24)&255]^A[B][1].toInt();G=WC[Pa&255]^XC[(Oa>>8)&255]^YC[(Na>>16)&255]^ZC[(Qa>>24)&255]^A[B][2].toInt();I=WC[Qa&255]^XC[(Pa>>8)&255]^YC[(Oa>>16)&255]^ZC[(Na>>24)&255]^A[B][3].toInt();B-- ;Na=WC[C&255]^XC[(I>>8)&255]^YC[(G>>16)&255]^ZC[(D>>24)&255]^A[B][0].toInt();Oa=WC[D&255]^XC[(C>>8)&255]^YC[(I>>16)&255]^ZC[(G>>24)&255]^A[B][1].toInt();Pa=WC[G&255]^XC[(D>>8)&255]^YC[(C>>16)&255]^ZC[(I>>24)&255]^A[B][2].toInt();Qa=WC[I&255]^XC[(G>>8)&255]^YC[(D>>16)&255]^ZC[(C>>24)&255]^A[B][3].toInt();B-- ;}C=WC[Na&255]^XC[(Qa>>8)&255]^YC[(Pa>>16)&255]^ZC[(Oa>>24)&255]^A[B][0].toInt();D=WC[Oa&255]^XC[(Na>>8)&255]^YC[(Qa>>16)&255]^ZC[(Pa>>24)&255]^A[B][1].toInt();G=WC[Pa&255]^XC[(Oa>>8)&255]^YC[(Na>>16)&255]^ZC[(Qa>>24)&255]^A[B][2].toInt();I=WC[Qa&255]^XC[(Pa>>8)&255]^YC[(Oa>>16)&255]^ZC[(Na>>24)&255]^A[B][3].toInt();Na=(pB[C&255]&255)^((pB[(I>>8)&255]&255)<<8)^((pB[(G>>16)&255]&255)<<16)^(pB[(D>>24)&255]<<24)^A[0][0].toInt();Oa=(pB[D&255]&255)^((pB[(C>>8)&255]&255)<<8)^((pB[(I>>16)&255]&255)<<16)^(pB[(G>>24)&255]<<24)^A[0][1].toInt();Pa=(pB[G&255]&255)^((pB[(D>>8)&255]&255)<<8)^((pB[(C>>16)&255]&255)<<16)^(pB[(I>>24)&255]<<24)^A[0][2].toInt();Qa=(pB[I&255]&255)^((pB[(G>>8)&255]&255)<<8)^((pB[(D>>16)&255]&255)<<16)^(pB[(C>>24)&255]<<24)^A[0][3].toInt();}void Ra(ByteData A,int B){Na=ZF(A,B,Endianness.LITTLE_ENDIAN);Oa=ZF(A,B+4,Endianness.LITTLE_ENDIAN);Pa=ZF(A,B+8,Endianness.LITTLE_ENDIAN);Qa=ZF(A,B+12,Endianness.LITTLE_ENDIAN);}void Ta(ByteData A,int B){kG(Na,A,B,Endianness.LITTLE_ENDIAN);kG(Oa,A,B+4,Endianness.LITTLE_ENDIAN);kG(Pa,A,B+8,Endianness.LITTLE_ENDIAN);kG(Qa,A,B+12,Endianness.LITTLE_ENDIAN);}}int jG(int A,int B)=>ZT(A,B);const int QT=0x80808080;const int RT=0x7f7f7f7f;const int ST=0x0000001b;int vI(int A){var B=YT((A&QT),7);return (((A&RT)<<1)^B*ST);}int TT(int D){int A=vI(D);int B=vI(A);int G=vI(B);int C=D^G;return A^B^G^jG(A^C,8)^jG(B^C,16)^jG(C,24);}int lM(int A){return (RB[A&255]&255|((RB[(A>>8)&255]&255)<<8)|((RB[(A>>16)&255]&255)<<16)|RB[(A>>24)&255]<<24);}final RB=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22];final pB=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125];final UT=[0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36,0x6c,0xd8,0xab,0x4d,0x9a,0x2f,0x5e,0xbc,0x63,0xc6,0x97,0x35,0x6a,0xd4,0xb3,0x7d,0xfa,0xef,0xc5,0x91];final SC=[0xa56363c6,0x847c7cf8,0x997777ee,0x8d7b7bf6,0x0df2f2ff,0xbd6b6bd6,0xb16f6fde,0x54c5c591,0x50303060,0x03010102,0xa96767ce,0x7d2b2b56,0x19fefee7,0x62d7d7b5,0xe6abab4d,0x9a7676ec,0x45caca8f,0x9d82821f,0x40c9c989,0x877d7dfa,0x15fafaef,0xeb5959b2,0xc947478e,0x0bf0f0fb,0xecadad41,0x67d4d4b3,0xfda2a25f,0xeaafaf45,0xbf9c9c23,0xf7a4a453,0x967272e4,0x5bc0c09b,0xc2b7b775,0x1cfdfde1,0xae93933d,0x6a26264c,0x5a36366c,0x413f3f7e,0x02f7f7f5,0x4fcccc83,0x5c343468,0xf4a5a551,0x34e5e5d1,0x08f1f1f9,0x937171e2,0x73d8d8ab,0x53313162,0x3f15152a,0x0c040408,0x52c7c795,0x65232346,0x5ec3c39d,0x28181830,0xa1969637,0x0f05050a,0xb59a9a2f,0x0907070e,0x36121224,0x9b80801b,0x3de2e2df,0x26ebebcd,0x6927274e,0xcdb2b27f,0x9f7575ea,0x1b090912,0x9e83831d,0x742c2c58,0x2e1a1a34,0x2d1b1b36,0xb26e6edc,0xee5a5ab4,0xfba0a05b,0xf65252a4,0x4d3b3b76,0x61d6d6b7,0xceb3b37d,0x7b292952,0x3ee3e3dd,0x712f2f5e,0x97848413,0xf55353a6,0x68d1d1b9,0x00000000,0x2cededc1,0x60202040,0x1ffcfce3,0xc8b1b179,0xed5b5bb6,0xbe6a6ad4,0x46cbcb8d,0xd9bebe67,0x4b393972,0xde4a4a94,0xd44c4c98,0xe85858b0,0x4acfcf85,0x6bd0d0bb,0x2aefefc5,0xe5aaaa4f,0x16fbfbed,0xc5434386,0xd74d4d9a,0x55333366,0x94858511,0xcf45458a,0x10f9f9e9,0x06020204,0x817f7ffe,0xf05050a0,0x443c3c78,0xba9f9f25,0xe3a8a84b,0xf35151a2,0xfea3a35d,0xc0404080,0x8a8f8f05,0xad92923f,0xbc9d9d21,0x48383870,0x04f5f5f1,0xdfbcbc63,0xc1b6b677,0x75dadaaf,0x63212142,0x30101020,0x1affffe5,0x0ef3f3fd,0x6dd2d2bf,0x4ccdcd81,0x140c0c18,0x35131326,0x2fececc3,0xe15f5fbe,0xa2979735,0xcc444488,0x3917172e,0x57c4c493,0xf2a7a755,0x827e7efc,0x473d3d7a,0xac6464c8,0xe75d5dba,0x2b191932,0x957373e6,0xa06060c0,0x98818119,0xd14f4f9e,0x7fdcdca3,0x66222244,0x7e2a2a54,0xab90903b,0x8388880b,0xca46468c,0x29eeeec7,0xd3b8b86b,0x3c141428,0x79dedea7,0xe25e5ebc,0x1d0b0b16,0x76dbdbad,0x3be0e0db,0x56323264,0x4e3a3a74,0x1e0a0a14,0xdb494992,0x0a06060c,0x6c242448,0xe45c5cb8,0x5dc2c29f,0x6ed3d3bd,0xefacac43,0xa66262c4,0xa8919139,0xa4959531,0x37e4e4d3,0x8b7979f2,0x32e7e7d5,0x43c8c88b,0x5937376e,0xb76d6dda,0x8c8d8d01,0x64d5d5b1,0xd24e4e9c,0xe0a9a949,0xb46c6cd8,0xfa5656ac,0x07f4f4f3,0x25eaeacf,0xaf6565ca,0x8e7a7af4,0xe9aeae47,0x18080810,0xd5baba6f,0x887878f0,0x6f25254a,0x722e2e5c,0x241c1c38,0xf1a6a657,0xc7b4b473,0x51c6c697,0x23e8e8cb,0x7cdddda1,0x9c7474e8,0x211f1f3e,0xdd4b4b96,0xdcbdbd61,0x868b8b0d,0x858a8a0f,0x907070e0,0x423e3e7c,0xc4b5b571,0xaa6666cc,0xd8484890,0x05030306,0x01f6f6f7,0x120e0e1c,0xa36161c2,0x5f35356a,0xf95757ae,0xd0b9b969,0x91868617,0x58c1c199,0x271d1d3a,0xb99e9e27,0x38e1e1d9,0x13f8f8eb,0xb398982b,0x33111122,0xbb6969d2,0x70d9d9a9,0x898e8e07,0xa7949433,0xb69b9b2d,0x221e1e3c,0x92878715,0x20e9e9c9,0x49cece87,0xff5555aa,0x78282850,0x7adfdfa5,0x8f8c8c03,0xf8a1a159,0x80898909,0x170d0d1a,0xdabfbf65,0x31e6e6d7,0xc6424284,0xb86868d0,0xc3414182,0xb0999929,0x772d2d5a,0x110f0f1e,0xcbb0b07b,0xfc5454a8,0xd6bbbb6d,0x3a16162c];final TC=[0x6363c6a5,0x7c7cf884,0x7777ee99,0x7b7bf68d,0xf2f2ff0d,0x6b6bd6bd,0x6f6fdeb1,0xc5c59154,0x30306050,0x01010203,0x6767cea9,0x2b2b567d,0xfefee719,0xd7d7b562,0xabab4de6,0x7676ec9a,0xcaca8f45,0x82821f9d,0xc9c98940,0x7d7dfa87,0xfafaef15,0x5959b2eb,0x47478ec9,0xf0f0fb0b,0xadad41ec,0xd4d4b367,0xa2a25ffd,0xafaf45ea,0x9c9c23bf,0xa4a453f7,0x7272e496,0xc0c09b5b,0xb7b775c2,0xfdfde11c,0x93933dae,0x26264c6a,0x36366c5a,0x3f3f7e41,0xf7f7f502,0xcccc834f,0x3434685c,0xa5a551f4,0xe5e5d134,0xf1f1f908,0x7171e293,0xd8d8ab73,0x31316253,0x15152a3f,0x0404080c,0xc7c79552,0x23234665,0xc3c39d5e,0x18183028,0x969637a1,0x05050a0f,0x9a9a2fb5,0x07070e09,0x12122436,0x80801b9b,0xe2e2df3d,0xebebcd26,0x27274e69,0xb2b27fcd,0x7575ea9f,0x0909121b,0x83831d9e,0x2c2c5874,0x1a1a342e,0x1b1b362d,0x6e6edcb2,0x5a5ab4ee,0xa0a05bfb,0x5252a4f6,0x3b3b764d,0xd6d6b761,0xb3b37dce,0x2929527b,0xe3e3dd3e,0x2f2f5e71,0x84841397,0x5353a6f5,0xd1d1b968,0x00000000,0xededc12c,0x20204060,0xfcfce31f,0xb1b179c8,0x5b5bb6ed,0x6a6ad4be,0xcbcb8d46,0xbebe67d9,0x3939724b,0x4a4a94de,0x4c4c98d4,0x5858b0e8,0xcfcf854a,0xd0d0bb6b,0xefefc52a,0xaaaa4fe5,0xfbfbed16,0x434386c5,0x4d4d9ad7,0x33336655,0x85851194,0x45458acf,0xf9f9e910,0x02020406,0x7f7ffe81,0x5050a0f0,0x3c3c7844,0x9f9f25ba,0xa8a84be3,0x5151a2f3,0xa3a35dfe,0x404080c0,0x8f8f058a,0x92923fad,0x9d9d21bc,0x38387048,0xf5f5f104,0xbcbc63df,0xb6b677c1,0xdadaaf75,0x21214263,0x10102030,0xffffe51a,0xf3f3fd0e,0xd2d2bf6d,0xcdcd814c,0x0c0c1814,0x13132635,0xececc32f,0x5f5fbee1,0x979735a2,0x444488cc,0x17172e39,0xc4c49357,0xa7a755f2,0x7e7efc82,0x3d3d7a47,0x6464c8ac,0x5d5dbae7,0x1919322b,0x7373e695,0x6060c0a0,0x81811998,0x4f4f9ed1,0xdcdca37f,0x22224466,0x2a2a547e,0x90903bab,0x88880b83,0x46468cca,0xeeeec729,0xb8b86bd3,0x1414283c,0xdedea779,0x5e5ebce2,0x0b0b161d,0xdbdbad76,0xe0e0db3b,0x32326456,0x3a3a744e,0x0a0a141e,0x494992db,0x06060c0a,0x2424486c,0x5c5cb8e4,0xc2c29f5d,0xd3d3bd6e,0xacac43ef,0x6262c4a6,0x919139a8,0x959531a4,0xe4e4d337,0x7979f28b,0xe7e7d532,0xc8c88b43,0x37376e59,0x6d6ddab7,0x8d8d018c,0xd5d5b164,0x4e4e9cd2,0xa9a949e0,0x6c6cd8b4,0x5656acfa,0xf4f4f307,0xeaeacf25,0x6565caaf,0x7a7af48e,0xaeae47e9,0x08081018,0xbaba6fd5,0x7878f088,0x25254a6f,0x2e2e5c72,0x1c1c3824,0xa6a657f1,0xb4b473c7,0xc6c69751,0xe8e8cb23,0xdddda17c,0x7474e89c,0x1f1f3e21,0x4b4b96dd,0xbdbd61dc,0x8b8b0d86,0x8a8a0f85,0x7070e090,0x3e3e7c42,0xb5b571c4,0x6666ccaa,0x484890d8,0x03030605,0xf6f6f701,0x0e0e1c12,0x6161c2a3,0x35356a5f,0x5757aef9,0xb9b969d0,0x86861791,0xc1c19958,0x1d1d3a27,0x9e9e27b9,0xe1e1d938,0xf8f8eb13,0x98982bb3,0x11112233,0x6969d2bb,0xd9d9a970,0x8e8e0789,0x949433a7,0x9b9b2db6,0x1e1e3c22,0x87871592,0xe9e9c920,0xcece8749,0x5555aaff,0x28285078,0xdfdfa57a,0x8c8c038f,0xa1a159f8,0x89890980,0x0d0d1a17,0xbfbf65da,0xe6e6d731,0x424284c6,0x6868d0b8,0x414182c3,0x999929b0,0x2d2d5a77,0x0f0f1e11,0xb0b07bcb,0x5454a8fc,0xbbbb6dd6,0x16162c3a];final UC=[0x63c6a563,0x7cf8847c,0x77ee9977,0x7bf68d7b,0xf2ff0df2,0x6bd6bd6b,0x6fdeb16f,0xc59154c5,0x30605030,0x01020301,0x67cea967,0x2b567d2b,0xfee719fe,0xd7b562d7,0xab4de6ab,0x76ec9a76,0xca8f45ca,0x821f9d82,0xc98940c9,0x7dfa877d,0xfaef15fa,0x59b2eb59,0x478ec947,0xf0fb0bf0,0xad41ecad,0xd4b367d4,0xa25ffda2,0xaf45eaaf,0x9c23bf9c,0xa453f7a4,0x72e49672,0xc09b5bc0,0xb775c2b7,0xfde11cfd,0x933dae93,0x264c6a26,0x366c5a36,0x3f7e413f,0xf7f502f7,0xcc834fcc,0x34685c34,0xa551f4a5,0xe5d134e5,0xf1f908f1,0x71e29371,0xd8ab73d8,0x31625331,0x152a3f15,0x04080c04,0xc79552c7,0x23466523,0xc39d5ec3,0x18302818,0x9637a196,0x050a0f05,0x9a2fb59a,0x070e0907,0x12243612,0x801b9b80,0xe2df3de2,0xebcd26eb,0x274e6927,0xb27fcdb2,0x75ea9f75,0x09121b09,0x831d9e83,0x2c58742c,0x1a342e1a,0x1b362d1b,0x6edcb26e,0x5ab4ee5a,0xa05bfba0,0x52a4f652,0x3b764d3b,0xd6b761d6,0xb37dceb3,0x29527b29,0xe3dd3ee3,0x2f5e712f,0x84139784,0x53a6f553,0xd1b968d1,0x00000000,0xedc12ced,0x20406020,0xfce31ffc,0xb179c8b1,0x5bb6ed5b,0x6ad4be6a,0xcb8d46cb,0xbe67d9be,0x39724b39,0x4a94de4a,0x4c98d44c,0x58b0e858,0xcf854acf,0xd0bb6bd0,0xefc52aef,0xaa4fe5aa,0xfbed16fb,0x4386c543,0x4d9ad74d,0x33665533,0x85119485,0x458acf45,0xf9e910f9,0x02040602,0x7ffe817f,0x50a0f050,0x3c78443c,0x9f25ba9f,0xa84be3a8,0x51a2f351,0xa35dfea3,0x4080c040,0x8f058a8f,0x923fad92,0x9d21bc9d,0x38704838,0xf5f104f5,0xbc63dfbc,0xb677c1b6,0xdaaf75da,0x21426321,0x10203010,0xffe51aff,0xf3fd0ef3,0xd2bf6dd2,0xcd814ccd,0x0c18140c,0x13263513,0xecc32fec,0x5fbee15f,0x9735a297,0x4488cc44,0x172e3917,0xc49357c4,0xa755f2a7,0x7efc827e,0x3d7a473d,0x64c8ac64,0x5dbae75d,0x19322b19,0x73e69573,0x60c0a060,0x81199881,0x4f9ed14f,0xdca37fdc,0x22446622,0x2a547e2a,0x903bab90,0x880b8388,0x468cca46,0xeec729ee,0xb86bd3b8,0x14283c14,0xdea779de,0x5ebce25e,0x0b161d0b,0xdbad76db,0xe0db3be0,0x32645632,0x3a744e3a,0x0a141e0a,0x4992db49,0x060c0a06,0x24486c24,0x5cb8e45c,0xc29f5dc2,0xd3bd6ed3,0xac43efac,0x62c4a662,0x9139a891,0x9531a495,0xe4d337e4,0x79f28b79,0xe7d532e7,0xc88b43c8,0x376e5937,0x6ddab76d,0x8d018c8d,0xd5b164d5,0x4e9cd24e,0xa949e0a9,0x6cd8b46c,0x56acfa56,0xf4f307f4,0xeacf25ea,0x65caaf65,0x7af48e7a,0xae47e9ae,0x08101808,0xba6fd5ba,0x78f08878,0x254a6f25,0x2e5c722e,0x1c38241c,0xa657f1a6,0xb473c7b4,0xc69751c6,0xe8cb23e8,0xdda17cdd,0x74e89c74,0x1f3e211f,0x4b96dd4b,0xbd61dcbd,0x8b0d868b,0x8a0f858a,0x70e09070,0x3e7c423e,0xb571c4b5,0x66ccaa66,0x4890d848,0x03060503,0xf6f701f6,0x0e1c120e,0x61c2a361,0x356a5f35,0x57aef957,0xb969d0b9,0x86179186,0xc19958c1,0x1d3a271d,0x9e27b99e,0xe1d938e1,0xf8eb13f8,0x982bb398,0x11223311,0x69d2bb69,0xd9a970d9,0x8e07898e,0x9433a794,0x9b2db69b,0x1e3c221e,0x87159287,0xe9c920e9,0xce8749ce,0x55aaff55,0x28507828,0xdfa57adf,0x8c038f8c,0xa159f8a1,0x89098089,0x0d1a170d,0xbf65dabf,0xe6d731e6,0x4284c642,0x68d0b868,0x4182c341,0x9929b099,0x2d5a772d,0x0f1e110f,0xb07bcbb0,0x54a8fc54,0xbb6dd6bb,0x162c3a16];final VC=[0xc6a56363,0xf8847c7c,0xee997777,0xf68d7b7b,0xff0df2f2,0xd6bd6b6b,0xdeb16f6f,0x9154c5c5,0x60503030,0x02030101,0xcea96767,0x567d2b2b,0xe719fefe,0xb562d7d7,0x4de6abab,0xec9a7676,0x8f45caca,0x1f9d8282,0x8940c9c9,0xfa877d7d,0xef15fafa,0xb2eb5959,0x8ec94747,0xfb0bf0f0,0x41ecadad,0xb367d4d4,0x5ffda2a2,0x45eaafaf,0x23bf9c9c,0x53f7a4a4,0xe4967272,0x9b5bc0c0,0x75c2b7b7,0xe11cfdfd,0x3dae9393,0x4c6a2626,0x6c5a3636,0x7e413f3f,0xf502f7f7,0x834fcccc,0x685c3434,0x51f4a5a5,0xd134e5e5,0xf908f1f1,0xe2937171,0xab73d8d8,0x62533131,0x2a3f1515,0x080c0404,0x9552c7c7,0x46652323,0x9d5ec3c3,0x30281818,0x37a19696,0x0a0f0505,0x2fb59a9a,0x0e090707,0x24361212,0x1b9b8080,0xdf3de2e2,0xcd26ebeb,0x4e692727,0x7fcdb2b2,0xea9f7575,0x121b0909,0x1d9e8383,0x58742c2c,0x342e1a1a,0x362d1b1b,0xdcb26e6e,0xb4ee5a5a,0x5bfba0a0,0xa4f65252,0x764d3b3b,0xb761d6d6,0x7dceb3b3,0x527b2929,0xdd3ee3e3,0x5e712f2f,0x13978484,0xa6f55353,0xb968d1d1,0x00000000,0xc12ceded,0x40602020,0xe31ffcfc,0x79c8b1b1,0xb6ed5b5b,0xd4be6a6a,0x8d46cbcb,0x67d9bebe,0x724b3939,0x94de4a4a,0x98d44c4c,0xb0e85858,0x854acfcf,0xbb6bd0d0,0xc52aefef,0x4fe5aaaa,0xed16fbfb,0x86c54343,0x9ad74d4d,0x66553333,0x11948585,0x8acf4545,0xe910f9f9,0x04060202,0xfe817f7f,0xa0f05050,0x78443c3c,0x25ba9f9f,0x4be3a8a8,0xa2f35151,0x5dfea3a3,0x80c04040,0x058a8f8f,0x3fad9292,0x21bc9d9d,0x70483838,0xf104f5f5,0x63dfbcbc,0x77c1b6b6,0xaf75dada,0x42632121,0x20301010,0xe51affff,0xfd0ef3f3,0xbf6dd2d2,0x814ccdcd,0x18140c0c,0x26351313,0xc32fecec,0xbee15f5f,0x35a29797,0x88cc4444,0x2e391717,0x9357c4c4,0x55f2a7a7,0xfc827e7e,0x7a473d3d,0xc8ac6464,0xbae75d5d,0x322b1919,0xe6957373,0xc0a06060,0x19988181,0x9ed14f4f,0xa37fdcdc,0x44662222,0x547e2a2a,0x3bab9090,0x0b838888,0x8cca4646,0xc729eeee,0x6bd3b8b8,0x283c1414,0xa779dede,0xbce25e5e,0x161d0b0b,0xad76dbdb,0xdb3be0e0,0x64563232,0x744e3a3a,0x141e0a0a,0x92db4949,0x0c0a0606,0x486c2424,0xb8e45c5c,0x9f5dc2c2,0xbd6ed3d3,0x43efacac,0xc4a66262,0x39a89191,0x31a49595,0xd337e4e4,0xf28b7979,0xd532e7e7,0x8b43c8c8,0x6e593737,0xdab76d6d,0x018c8d8d,0xb164d5d5,0x9cd24e4e,0x49e0a9a9,0xd8b46c6c,0xacfa5656,0xf307f4f4,0xcf25eaea,0xcaaf6565,0xf48e7a7a,0x47e9aeae,0x10180808,0x6fd5baba,0xf0887878,0x4a6f2525,0x5c722e2e,0x38241c1c,0x57f1a6a6,0x73c7b4b4,0x9751c6c6,0xcb23e8e8,0xa17cdddd,0xe89c7474,0x3e211f1f,0x96dd4b4b,0x61dcbdbd,0x0d868b8b,0x0f858a8a,0xe0907070,0x7c423e3e,0x71c4b5b5,0xccaa6666,0x90d84848,0x06050303,0xf701f6f6,0x1c120e0e,0xc2a36161,0x6a5f3535,0xaef95757,0x69d0b9b9,0x17918686,0x9958c1c1,0x3a271d1d,0x27b99e9e,0xd938e1e1,0xeb13f8f8,0x2bb39898,0x22331111,0xd2bb6969,0xa970d9d9,0x07898e8e,0x33a79494,0x2db69b9b,0x3c221e1e,0x15928787,0xc920e9e9,0x8749cece,0xaaff5555,0x50782828,0xa57adfdf,0x038f8c8c,0x59f8a1a1,0x09808989,0x1a170d0d,0x65dabfbf,0xd731e6e6,0x84c64242,0xd0b86868,0x82c34141,0x29b09999,0x5a772d2d,0x1e110f0f,0x7bcbb0b0,0xa8fc5454,0x6dd6bbbb,0x2c3a1616];final WC=[0x50a7f451,0x5365417e,0xc3a4171a,0x965e273a,0xcb6bab3b,0xf1459d1f,0xab58faac,0x9303e34b,0x55fa3020,0xf66d76ad,0x9176cc88,0x254c02f5,0xfcd7e54f,0xd7cb2ac5,0x80443526,0x8fa362b5,0x495ab1de,0x671bba25,0x980eea45,0xe1c0fe5d,0x02752fc3,0x12f04c81,0xa397468d,0xc6f9d36b,0xe75f8f03,0x959c9215,0xeb7a6dbf,0xda595295,0x2d83bed4,0xd3217458,0x2969e049,0x44c8c98e,0x6a89c275,0x78798ef4,0x6b3e5899,0xdd71b927,0xb64fe1be,0x17ad88f0,0x66ac20c9,0xb43ace7d,0x184adf63,0x82311ae5,0x60335197,0x457f5362,0xe07764b1,0x84ae6bbb,0x1ca081fe,0x942b08f9,0x58684870,0x19fd458f,0x876cde94,0xb7f87b52,0x23d373ab,0xe2024b72,0x578f1fe3,0x2aab5566,0x0728ebb2,0x03c2b52f,0x9a7bc586,0xa50837d3,0xf2872830,0xb2a5bf23,0xba6a0302,0x5c8216ed,0x2b1ccf8a,0x92b479a7,0xf0f207f3,0xa1e2694e,0xcdf4da65,0xd5be0506,0x1f6234d1,0x8afea6c4,0x9d532e34,0xa055f3a2,0x32e18a05,0x75ebf6a4,0x39ec830b,0xaaef6040,0x069f715e,0x51106ebd,0xf98a213e,0x3d06dd96,0xae053edd,0x46bde64d,0xb58d5491,0x055dc471,0x6fd40604,0xff155060,0x24fb9819,0x97e9bdd6,0xcc434089,0x779ed967,0xbd42e8b0,0x888b8907,0x385b19e7,0xdbeec879,0x470a7ca1,0xe90f427c,0xc91e84f8,0x00000000,0x83868009,0x48ed2b32,0xac70111e,0x4e725a6c,0xfbff0efd,0x5638850f,0x1ed5ae3d,0x27392d36,0x64d90f0a,0x21a65c68,0xd1545b9b,0x3a2e3624,0xb1670a0c,0x0fe75793,0xd296eeb4,0x9e919b1b,0x4fc5c080,0xa220dc61,0x694b775a,0x161a121c,0x0aba93e2,0xe52aa0c0,0x43e0223c,0x1d171b12,0x0b0d090e,0xadc78bf2,0xb9a8b62d,0xc8a91e14,0x8519f157,0x4c0775af,0xbbdd99ee,0xfd607fa3,0x9f2601f7,0xbcf5725c,0xc53b6644,0x347efb5b,0x7629438b,0xdcc623cb,0x68fcedb6,0x63f1e4b8,0xcadc31d7,0x10856342,0x40229713,0x2011c684,0x7d244a85,0xf83dbbd2,0x1132f9ae,0x6da129c7,0x4b2f9e1d,0xf330b2dc,0xec52860d,0xd0e3c177,0x6c16b32b,0x99b970a9,0xfa489411,0x2264e947,0xc48cfca8,0x1a3ff0a0,0xd82c7d56,0xef903322,0xc74e4987,0xc1d138d9,0xfea2ca8c,0x360bd498,0xcf81f5a6,0x28de7aa5,0x268eb7da,0xa4bfad3f,0xe49d3a2c,0x0d927850,0x9bcc5f6a,0x62467e54,0xc2138df6,0xe8b8d890,0x5ef7392e,0xf5afc382,0xbe805d9f,0x7c93d069,0xa92dd56f,0xb31225cf,0x3b99acc8,0xa77d1810,0x6e639ce8,0x7bbb3bdb,0x097826cd,0xf418596e,0x01b79aec,0xa89a4f83,0x656e95e6,0x7ee6ffaa,0x08cfbc21,0xe6e815ef,0xd99be7ba,0xce366f4a,0xd4099fea,0xd67cb029,0xafb2a431,0x31233f2a,0x3094a5c6,0xc066a235,0x37bc4e74,0xa6ca82fc,0xb0d090e0,0x15d8a733,0x4a9804f1,0xf7daec41,0x0e50cd7f,0x2ff69117,0x8dd64d76,0x4db0ef43,0x544daacc,0xdf0496e4,0xe3b5d19e,0x1b886a4c,0xb81f2cc1,0x7f516546,0x04ea5e9d,0x5d358c01,0x737487fa,0x2e410bfb,0x5a1d67b3,0x52d2db92,0x335610e9,0x1347d66d,0x8c61d79a,0x7a0ca137,0x8e14f859,0x893c13eb,0xee27a9ce,0x35c961b7,0xede51ce1,0x3cb1477a,0x59dfd29c,0x3f73f255,0x79ce1418,0xbf37c773,0xeacdf753,0x5baafd5f,0x146f3ddf,0x86db4478,0x81f3afca,0x3ec468b9,0x2c342438,0x5f40a3c2,0x72c31d16,0x0c25e2bc,0x8b493c28,0x41950dff,0x7101a839,0xdeb30c08,0x9ce4b4d8,0x90c15664,0x6184cb7b,0x70b632d5,0x745c6c48,0x4257b8d0];final XC=[0xa7f45150,0x65417e53,0xa4171ac3,0x5e273a96,0x6bab3bcb,0x459d1ff1,0x58faacab,0x03e34b93,0xfa302055,0x6d76adf6,0x76cc8891,0x4c02f525,0xd7e54ffc,0xcb2ac5d7,0x44352680,0xa362b58f,0x5ab1de49,0x1bba2567,0x0eea4598,0xc0fe5de1,0x752fc302,0xf04c8112,0x97468da3,0xf9d36bc6,0x5f8f03e7,0x9c921595,0x7a6dbfeb,0x595295da,0x83bed42d,0x217458d3,0x69e04929,0xc8c98e44,0x89c2756a,0x798ef478,0x3e58996b,0x71b927dd,0x4fe1beb6,0xad88f017,0xac20c966,0x3ace7db4,0x4adf6318,0x311ae582,0x33519760,0x7f536245,0x7764b1e0,0xae6bbb84,0xa081fe1c,0x2b08f994,0x68487058,0xfd458f19,0x6cde9487,0xf87b52b7,0xd373ab23,0x024b72e2,0x8f1fe357,0xab55662a,0x28ebb207,0xc2b52f03,0x7bc5869a,0x0837d3a5,0x872830f2,0xa5bf23b2,0x6a0302ba,0x8216ed5c,0x1ccf8a2b,0xb479a792,0xf207f3f0,0xe2694ea1,0xf4da65cd,0xbe0506d5,0x6234d11f,0xfea6c48a,0x532e349d,0x55f3a2a0,0xe18a0532,0xebf6a475,0xec830b39,0xef6040aa,0x9f715e06,0x106ebd51,0x8a213ef9,0x06dd963d,0x053eddae,0xbde64d46,0x8d5491b5,0x5dc47105,0xd406046f,0x155060ff,0xfb981924,0xe9bdd697,0x434089cc,0x9ed96777,0x42e8b0bd,0x8b890788,0x5b19e738,0xeec879db,0x0a7ca147,0x0f427ce9,0x1e84f8c9,0x00000000,0x86800983,0xed2b3248,0x70111eac,0x725a6c4e,0xff0efdfb,0x38850f56,0xd5ae3d1e,0x392d3627,0xd90f0a64,0xa65c6821,0x545b9bd1,0x2e36243a,0x670a0cb1,0xe757930f,0x96eeb4d2,0x919b1b9e,0xc5c0804f,0x20dc61a2,0x4b775a69,0x1a121c16,0xba93e20a,0x2aa0c0e5,0xe0223c43,0x171b121d,0x0d090e0b,0xc78bf2ad,0xa8b62db9,0xa91e14c8,0x19f15785,0x0775af4c,0xdd99eebb,0x607fa3fd,0x2601f79f,0xf5725cbc,0x3b6644c5,0x7efb5b34,0x29438b76,0xc623cbdc,0xfcedb668,0xf1e4b863,0xdc31d7ca,0x85634210,0x22971340,0x11c68420,0x244a857d,0x3dbbd2f8,0x32f9ae11,0xa129c76d,0x2f9e1d4b,0x30b2dcf3,0x52860dec,0xe3c177d0,0x16b32b6c,0xb970a999,0x489411fa,0x64e94722,0x8cfca8c4,0x3ff0a01a,0x2c7d56d8,0x903322ef,0x4e4987c7,0xd138d9c1,0xa2ca8cfe,0x0bd49836,0x81f5a6cf,0xde7aa528,0x8eb7da26,0xbfad3fa4,0x9d3a2ce4,0x9278500d,0xcc5f6a9b,0x467e5462,0x138df6c2,0xb8d890e8,0xf7392e5e,0xafc382f5,0x805d9fbe,0x93d0697c,0x2dd56fa9,0x1225cfb3,0x99acc83b,0x7d1810a7,0x639ce86e,0xbb3bdb7b,0x7826cd09,0x18596ef4,0xb79aec01,0x9a4f83a8,0x6e95e665,0xe6ffaa7e,0xcfbc2108,0xe815efe6,0x9be7bad9,0x366f4ace,0x099fead4,0x7cb029d6,0xb2a431af,0x233f2a31,0x94a5c630,0x66a235c0,0xbc4e7437,0xca82fca6,0xd090e0b0,0xd8a73315,0x9804f14a,0xdaec41f7,0x50cd7f0e,0xf691172f,0xd64d768d,0xb0ef434d,0x4daacc54,0x0496e4df,0xb5d19ee3,0x886a4c1b,0x1f2cc1b8,0x5165467f,0xea5e9d04,0x358c015d,0x7487fa73,0x410bfb2e,0x1d67b35a,0xd2db9252,0x5610e933,0x47d66d13,0x61d79a8c,0x0ca1377a,0x14f8598e,0x3c13eb89,0x27a9ceee,0xc961b735,0xe51ce1ed,0xb1477a3c,0xdfd29c59,0x73f2553f,0xce141879,0x37c773bf,0xcdf753ea,0xaafd5f5b,0x6f3ddf14,0xdb447886,0xf3afca81,0xc468b93e,0x3424382c,0x40a3c25f,0xc31d1672,0x25e2bc0c,0x493c288b,0x950dff41,0x01a83971,0xb30c08de,0xe4b4d89c,0xc1566490,0x84cb7b61,0xb632d570,0x5c6c4874,0x57b8d042];final YC=[0xf45150a7,0x417e5365,0x171ac3a4,0x273a965e,0xab3bcb6b,0x9d1ff145,0xfaacab58,0xe34b9303,0x302055fa,0x76adf66d,0xcc889176,0x02f5254c,0xe54ffcd7,0x2ac5d7cb,0x35268044,0x62b58fa3,0xb1de495a,0xba25671b,0xea45980e,0xfe5de1c0,0x2fc30275,0x4c8112f0,0x468da397,0xd36bc6f9,0x8f03e75f,0x9215959c,0x6dbfeb7a,0x5295da59,0xbed42d83,0x7458d321,0xe0492969,0xc98e44c8,0xc2756a89,0x8ef47879,0x58996b3e,0xb927dd71,0xe1beb64f,0x88f017ad,0x20c966ac,0xce7db43a,0xdf63184a,0x1ae58231,0x51976033,0x5362457f,0x64b1e077,0x6bbb84ae,0x81fe1ca0,0x08f9942b,0x48705868,0x458f19fd,0xde94876c,0x7b52b7f8,0x73ab23d3,0x4b72e202,0x1fe3578f,0x55662aab,0xebb20728,0xb52f03c2,0xc5869a7b,0x37d3a508,0x2830f287,0xbf23b2a5,0x0302ba6a,0x16ed5c82,0xcf8a2b1c,0x79a792b4,0x07f3f0f2,0x694ea1e2,0xda65cdf4,0x0506d5be,0x34d11f62,0xa6c48afe,0x2e349d53,0xf3a2a055,0x8a0532e1,0xf6a475eb,0x830b39ec,0x6040aaef,0x715e069f,0x6ebd5110,0x213ef98a,0xdd963d06,0x3eddae05,0xe64d46bd,0x5491b58d,0xc471055d,0x06046fd4,0x5060ff15,0x981924fb,0xbdd697e9,0x4089cc43,0xd967779e,0xe8b0bd42,0x8907888b,0x19e7385b,0xc879dbee,0x7ca1470a,0x427ce90f,0x84f8c91e,0x00000000,0x80098386,0x2b3248ed,0x111eac70,0x5a6c4e72,0x0efdfbff,0x850f5638,0xae3d1ed5,0x2d362739,0x0f0a64d9,0x5c6821a6,0x5b9bd154,0x36243a2e,0x0a0cb167,0x57930fe7,0xeeb4d296,0x9b1b9e91,0xc0804fc5,0xdc61a220,0x775a694b,0x121c161a,0x93e20aba,0xa0c0e52a,0x223c43e0,0x1b121d17,0x090e0b0d,0x8bf2adc7,0xb62db9a8,0x1e14c8a9,0xf1578519,0x75af4c07,0x99eebbdd,0x7fa3fd60,0x01f79f26,0x725cbcf5,0x6644c53b,0xfb5b347e,0x438b7629,0x23cbdcc6,0xedb668fc,0xe4b863f1,0x31d7cadc,0x63421085,0x97134022,0xc6842011,0x4a857d24,0xbbd2f83d,0xf9ae1132,0x29c76da1,0x9e1d4b2f,0xb2dcf330,0x860dec52,0xc177d0e3,0xb32b6c16,0x70a999b9,0x9411fa48,0xe9472264,0xfca8c48c,0xf0a01a3f,0x7d56d82c,0x3322ef90,0x4987c74e,0x38d9c1d1,0xca8cfea2,0xd498360b,0xf5a6cf81,0x7aa528de,0xb7da268e,0xad3fa4bf,0x3a2ce49d,0x78500d92,0x5f6a9bcc,0x7e546246,0x8df6c213,0xd890e8b8,0x392e5ef7,0xc382f5af,0x5d9fbe80,0xd0697c93,0xd56fa92d,0x25cfb312,0xacc83b99,0x1810a77d,0x9ce86e63,0x3bdb7bbb,0x26cd0978,0x596ef418,0x9aec01b7,0x4f83a89a,0x95e6656e,0xffaa7ee6,0xbc2108cf,0x15efe6e8,0xe7bad99b,0x6f4ace36,0x9fead409,0xb029d67c,0xa431afb2,0x3f2a3123,0xa5c63094,0xa235c066,0x4e7437bc,0x82fca6ca,0x90e0b0d0,0xa73315d8,0x04f14a98,0xec41f7da,0xcd7f0e50,0x91172ff6,0x4d768dd6,0xef434db0,0xaacc544d,0x96e4df04,0xd19ee3b5,0x6a4c1b88,0x2cc1b81f,0x65467f51,0x5e9d04ea,0x8c015d35,0x87fa7374,0x0bfb2e41,0x67b35a1d,0xdb9252d2,0x10e93356,0xd66d1347,0xd79a8c61,0xa1377a0c,0xf8598e14,0x13eb893c,0xa9ceee27,0x61b735c9,0x1ce1ede5,0x477a3cb1,0xd29c59df,0xf2553f73,0x141879ce,0xc773bf37,0xf753eacd,0xfd5f5baa,0x3ddf146f,0x447886db,0xafca81f3,0x68b93ec4,0x24382c34,0xa3c25f40,0x1d1672c3,0xe2bc0c25,0x3c288b49,0x0dff4195,0xa8397101,0x0c08deb3,0xb4d89ce4,0x566490c1,0xcb7b6184,0x32d570b6,0x6c48745c,0xb8d04257];final ZC=[0x5150a7f4,0x7e536541,0x1ac3a417,0x3a965e27,0x3bcb6bab,0x1ff1459d,0xacab58fa,0x4b9303e3,0x2055fa30,0xadf66d76,0x889176cc,0xf5254c02,0x4ffcd7e5,0xc5d7cb2a,0x26804435,0xb58fa362,0xde495ab1,0x25671bba,0x45980eea,0x5de1c0fe,0xc302752f,0x8112f04c,0x8da39746,0x6bc6f9d3,0x03e75f8f,0x15959c92,0xbfeb7a6d,0x95da5952,0xd42d83be,0x58d32174,0x492969e0,0x8e44c8c9,0x756a89c2,0xf478798e,0x996b3e58,0x27dd71b9,0xbeb64fe1,0xf017ad88,0xc966ac20,0x7db43ace,0x63184adf,0xe582311a,0x97603351,0x62457f53,0xb1e07764,0xbb84ae6b,0xfe1ca081,0xf9942b08,0x70586848,0x8f19fd45,0x94876cde,0x52b7f87b,0xab23d373,0x72e2024b,0xe3578f1f,0x662aab55,0xb20728eb,0x2f03c2b5,0x869a7bc5,0xd3a50837,0x30f28728,0x23b2a5bf,0x02ba6a03,0xed5c8216,0x8a2b1ccf,0xa792b479,0xf3f0f207,0x4ea1e269,0x65cdf4da,0x06d5be05,0xd11f6234,0xc48afea6,0x349d532e,0xa2a055f3,0x0532e18a,0xa475ebf6,0x0b39ec83,0x40aaef60,0x5e069f71,0xbd51106e,0x3ef98a21,0x963d06dd,0xddae053e,0x4d46bde6,0x91b58d54,0x71055dc4,0x046fd406,0x60ff1550,0x1924fb98,0xd697e9bd,0x89cc4340,0x67779ed9,0xb0bd42e8,0x07888b89,0xe7385b19,0x79dbeec8,0xa1470a7c,0x7ce90f42,0xf8c91e84,0x00000000,0x09838680,0x3248ed2b,0x1eac7011,0x6c4e725a,0xfdfbff0e,0x0f563885,0x3d1ed5ae,0x3627392d,0x0a64d90f,0x6821a65c,0x9bd1545b,0x243a2e36,0x0cb1670a,0x930fe757,0xb4d296ee,0x1b9e919b,0x804fc5c0,0x61a220dc,0x5a694b77,0x1c161a12,0xe20aba93,0xc0e52aa0,0x3c43e022,0x121d171b,0x0e0b0d09,0xf2adc78b,0x2db9a8b6,0x14c8a91e,0x578519f1,0xaf4c0775,0xeebbdd99,0xa3fd607f,0xf79f2601,0x5cbcf572,0x44c53b66,0x5b347efb,0x8b762943,0xcbdcc623,0xb668fced,0xb863f1e4,0xd7cadc31,0x42108563,0x13402297,0x842011c6,0x857d244a,0xd2f83dbb,0xae1132f9,0xc76da129,0x1d4b2f9e,0xdcf330b2,0x0dec5286,0x77d0e3c1,0x2b6c16b3,0xa999b970,0x11fa4894,0x472264e9,0xa8c48cfc,0xa01a3ff0,0x56d82c7d,0x22ef9033,0x87c74e49,0xd9c1d138,0x8cfea2ca,0x98360bd4,0xa6cf81f5,0xa528de7a,0xda268eb7,0x3fa4bfad,0x2ce49d3a,0x500d9278,0x6a9bcc5f,0x5462467e,0xf6c2138d,0x90e8b8d8,0x2e5ef739,0x82f5afc3,0x9fbe805d,0x697c93d0,0x6fa92dd5,0xcfb31225,0xc83b99ac,0x10a77d18,0xe86e639c,0xdb7bbb3b,0xcd097826,0x6ef41859,0xec01b79a,0x83a89a4f,0xe6656e95,0xaa7ee6ff,0x2108cfbc,0xefe6e815,0xbad99be7,0x4ace366f,0xead4099f,0x29d67cb0,0x31afb2a4,0x2a31233f,0xc63094a5,0x35c066a2,0x7437bc4e,0xfca6ca82,0xe0b0d090,0x3315d8a7,0xf14a9804,0x41f7daec,0x7f0e50cd,0x172ff691,0x768dd64d,0x434db0ef,0xcc544daa,0xe4df0496,0x9ee3b5d1,0x4c1b886a,0xc1b81f2c,0x467f5165,0x9d04ea5e,0x015d358c,0xfa737487,0xfb2e410b,0xb35a1d67,0x9252d2db,0xe9335610,0x6d1347d6,0x9a8c61d7,0x377a0ca1,0x598e14f8,0xeb893c13,0xceee27a9,0xb735c961,0xe1ede51c,0x7a3cb147,0x9c59dfd2,0x553f73f2,0x1879ce14,0x73bf37c7,0x53eacdf7,0x5f5baafd,0xdf146f3d,0x7886db44,0xca81f3af,0xb93ec468,0x382c3424,0xc25f40a3,0x1672c31d,0xbc0c25e2,0x288b493c,0xff41950d,0x397101a8,0x08deb30c,0xd89ce4b4,0x6490c156,0x7b6184cb,0xd570b632,0x48745c6c,0xd04257b8];abstract class VT implements PT{Uint8List process(Uint8List B){var A=new Uint8List(blockSize);var C=hQ(B,0,A,0);return A.sublist(0,C);}}class XF extends jM{final Uint8List key;XF(this.key);}const wI=0x1F;const YF=0xFFFFFFFF;final WT=[0xFFFFFFFF,0x7FFFFFFF,0x3FFFFFFF,0x1FFFFFFF,0x0FFFFFFF,0x07FFFFFF,0x03FFFFFF,0x01FFFFFF,0x00FFFFFF,0x007FFFFF,0x003FFFFF,0x001FFFFF,0x000FFFFF,0x0007FFFF,0x0003FFFF,0x0001FFFF,0x0000FFFF,0x00007FFF,0x00003FFF,0x00001FFF,0x00000FFF,0x000007FF,0x000003FF,0x000001FF,0x000000FF,0x0000007F,0x0000003F,0x0000001F,0x0000000F,0x00000007,0x00000003,0x00000001,0x00000000];int XT(int A,int B){assert((A>=0)&&(A<=YF));B&= wI;A&= WT[B];return ((A<<B)&YF);}int YT(int A,int B){assert((A>=0)&&(A<=YF));B&= wI;return (A>>B);}int ZT(int A,int B){assert(B>=0);assert((A>=0)&&(A<=YF));B&= wI;return (A>>B)|XT(A,(32-B));}void kG(int B,dynamic A,int C,Endianness D){assert((B>=0)&&(B<=YF));if(A is!ByteData){A=new ByteData.view(A.buffer);}(A as ByteData).setUint32(C,B,D);}int ZF(dynamic A,int B,Endianness C){if(A is!ByteData){A=new ByteData.view(A.buffer);}return (A as ByteData).getUint32(B,C);}const String QU='\u001b[31m';const String bN='\u001b[0m';eB EU()=>new eB.HZ();class eB{factory eB({s style,String current}){if(current==null){if(style==null){current=vM;}else{current=".";}}if(style==null){style=s.PJ;}else if(style is!RD){throw new ArgumentError("Only styles defined by the path package are " "allowed.");}return new eB.IZ(style as RD,current);}eB.HZ():O=s.PJ as RD,Va=null;eB.IZ(this.O,this.Va);final RD O;final String Va;String get current=>Va!=null?Va:vM;String get kC=>O.kC;String absolute(String A,[String B,String C,String D,String G,String I,String J]){DN("absolute",[A,B,C,D,G,I,J]);if(B==null&&isAbsolute(A)&&!dB(A)){return A;}return join(current,A,B,C,D,G,I,J);}String vK(String A)=>Wa(A).vK;String wK(String A)=>Wa(A).wK;String WX(String B){var A=Wa(B);A.MG();if(A.g.isEmpty)return A.p==null?'.':A.p;if(A.g.length==1){return A.p==null?'.':A.p;}A.g.removeLast();A.bB.removeLast();A.MG();return A.toString();}String NL(String A)=>Wa(A).NL;bool isAbsolute(String A)=>O.wC(A)>0;bool DG(String A)=>!this.isAbsolute(A);bool dB(String A)=>O.dB(A);String join(String B,[String C,String D,String G,String I,String J,String K,String N]){var A=<String>[B,C,D,G,I,J,K,N];DN("join",A);return yX(A.where((S)=>S!=null));}String yX(Iterable<String> J){var B=new StringBuffer();var D=false;var G=false;for(var A in J.where((A)=>A!='')){if(this.dB(A)&&G){var C=Wa(A);var I=B.toString();C.p=I.substring(0,O.wC(I,withDrive:true));if(O.NF(C.p)){C.bB[0]=O.kC;}B.clear();B.write(C.toString());}else if(this.isAbsolute(A)){G=!this.dB(A);B.clear();B.write(A);}else{if(A.length>0&&O.pH(A[0])){}else if(D){B.write(kC);}B.write(A);}D=O.NF(A);}return B.toString();}List<String> split(String B){var A=Wa(B);A.g=A.g.where((C)=>!C.isEmpty).toList();if(A.p!=null)A.g.insert(0,A.p);return A.g;}String ID(String A){if(!Xa(A))return A;var B=Wa(A);B.ID();return B.toString();}bool Xa(String J){var K=0;var D=J.codeUnits;int B;int A;var G=O.wC(J);if(G!=0){K=G;A=aC;if(O==s.SD){for(var C=0;C<G;C++ ){if(D[C]==aC)return true;}}}for(var C=K;C<D.length;C++ ){var I=D[C];if(O.f(I)){if(O==s.SD&&I==aC)return true;if(A!=null&&O.f(A))return true;if(A==JC&&(B==null||B==JC||O.f(B))){return true;}}B=A;A=I;}if(A==null)return true;if(O.f(A))return true;if(A==JC&&(B==null||O.f(B)||B==JC)){return true;}return false;}String gL(String C,{String from}){if(from==null&&this.DG(C))return this.ID(C);from=from==null?current:absolute(from);if(this.DG(from)&&this.isAbsolute(C)){return this.ID(C);}if(this.DG(C)||this.dB(C)){C=this.absolute(C);}if(this.DG(C)&&this.isAbsolute(from)){throw new nG('Unable to find a path to "${C}" from "${from}".');}var B=Wa(from)..ID();var A=Wa(C)..ID();if(B.g.length>0&&B.g[0]=='.'){return A.toString();}if(B.p!=A.p&&((B.p==null||A.p==null)||!O.fL(B.p,A.p))){return A.toString();}while(B.g.length>0&&A.g.length>0&&O.fL(B.g[0],A.g[0])){B.g.removeAt(0);B.bB.removeAt(1);A.g.removeAt(0);A.bB.removeAt(1);}if(B.g.length>0&&B.g[0]=='..'){throw new nG('Unable to find a path to "${C}" from "${from}".');}A.g.insertAll(0,new List.filled(B.g.length,'..'));A.bB[0]='';A.bB.insertAll(1,new List.filled(B.g.length,O.kC));if(A.g.length==0)return '.';if(A.g.length>1&&A.g.last=='.'){A.g.removeLast();A.bB..removeLast()..removeLast()..add('');}A.p='';A.MG();return A.toString();}bool iC(String A,String B)=>Ya(A,B)==r.mG;r Ya(String A,String B){var D=isAbsolute(A);var G=isAbsolute(B);if(D&&!G){B=absolute(B);if(O.dB(A))A=absolute(A);}else if(G&&!D){A=absolute(A);if(O.dB(B))B=absolute(B);}else if(G&&D){var I=O.dB(B);var J=O.dB(A);if(I&&!J){B=absolute(B);}else if(J&&!I){A=absolute(A);}}var K=Za(A,B);if(K!=r.HE)return K;String C;try {C=this.gL(B,from:A);}on nG catch (N){return r.QD;}if(!this.DG(C))return r.QD;if(C=='.')return r.mG;if(C=='..')return r.QD;return (C.length>=3&&C.startsWith('..')&&O.f(C.codeUnitAt(2)))?r.QD:r.EN;}r Za(String C,String D){if(C=='.')C='';var N=O.wC(C);var a=O.wC(D);if(N!=a)return r.QD;for(var U=0;U<N;U++ ){var G=C.codeUnitAt(U);var I=D.codeUnitAt(U);if(!O.oH(G,I)){return r.QD;}}var J=aC;int K;var A=N;var B=a;while(A<C.length&&B<D.length){var G=C.codeUnitAt(A);var I=D.codeUnitAt(B);if(O.oH(G,I)){if(O.f(G)){K=A;}J=G;A++ ;B++ ;continue;}if(O.f(G)&&O.f(J)){K=A;A++ ;continue;}else if(O.f(I)&&O.f(J)){B++ ;continue;}if(G==JC&&O.f(J)){A++ ;if(A==C.length)break;G=C.codeUnitAt(A);if(O.f(G)){K=A;A++ ;continue;}if(G==JC){A++ ;if(A==C.length||O.f(C.codeUnitAt(A))){return r.HE;}}}if(I==JC&&O.f(J)){B++ ;if(B==D.length)break;I=D.codeUnitAt(B);if(O.f(I)){B++ ;continue;}if(I==JC){B++ ;if(B==D.length||O.f(D.codeUnitAt(B))){return r.HE;}}}var l=aa(D,B);if(l!=rB.OJ){return r.HE;}var t=aa(C,A);if(t!=rB.OJ){return r.HE;}return r.QD;}if(B==D.length){if(A==C.length||O.f(C.codeUnitAt(A))){K=A;}else{K??= UI.max(0,N-1);}var S=aa(C,K??N-1);if(S==rB.NJ)return r.mG;return S==rB.MJ?r.HE:r.QD;}var S=aa(D,B);if(S==rB.NJ)return r.mG;if(S==rB.MJ){return r.HE;}return (O.f(D.codeUnitAt(B))||O.f(J))?r.EN:r.QD;}rB aa(String B,int I){var C=0;var G=false;var A=I;while(A<B.length){while(A<B.length&&O.f(B.codeUnitAt(A))){A++ ;}if(A==B.length)break;var D=A;while(A<B.length&&!O.f(B.codeUnitAt(A))){A++ ;}if(A-D==1&&B.codeUnitAt(D)==JC){}else if(A-D==2&&B.codeUnitAt(D)==JC&&B.codeUnitAt(D+1)==JC){C-- ;if(C<0)break;if(C==0)G=true;}else{C++ ;}if(A==B.length)break;A++ ;}if(C<0)return rB.MJ;if(C==0)return rB.NJ;if(G)return rB.FU;return rB.OJ;}int jC(String A){A=absolute(A);var B=ba(A);if(B!=null)return B;var C=Wa(A);C.ID();return ba(C.toString());}int ba(String B){var C=4603;var I=true;var D=true;for(var A=0;A<B.length;A++ ){var G=O.ZP(B.codeUnitAt(A));if(O.f(G)){D=true;continue;}if(G==JC&&D){if(A+1==B.length)break;var J=B.codeUnitAt(A+1);if(O.f(J))continue;if(!I&&J==JC&&(A+2==B.length||O.f(B.codeUnitAt(A+2)))){return null;}}C&= 0x3FFFFFF;C*= 33;C^= G;D=false;I=false;}return C;}String iX(A)=>O.KG(CN(A));String OY(D){var A=CN(D);if(A.scheme=='file'&&O==s.JE){return A.toString();}else if(A.scheme!='file'&&A.scheme!=''&&O!=s.JE){return A.toString();}var B=ID(iX(A));var C=gL(B);return split(C).length>split(B).length?B:C;}IE Wa(String A)=>new IE.JZ(A,O);}Uri CN(A){if(A is String)return Uri.parse(A);if(A is Uri)return A;throw new ArgumentError.value(A,'uri','Value must be a String or a Uri');}void DN(String I,List<String> A){for(var B=1;B<A.length;B++ ){if(A[B]==null||A[B-1]!=null)continue;int C;for(C=A.length;C>=1;C-- ){if(A[C-1]!=null)break;}var D=new StringBuffer();D.write("${I}(");D.write(A.take(C).map((G)=>G==null?"null":'"${G}"').join(", "));D.write("): part ${B-1} was null, but part ${B} was not.");throw new ArgumentError(D.toString());}}class rB{static const MJ=const rB("above root");static const NJ=const rB("at root");static const FU=const rB("reaches root");static const OJ=const rB("below root");final String name;const rB(this.name);String toString()=>name;}class r{static const EN=const r("within");static const mG=const r("equal");static const QD=const r("different");static const HE=const r("inconclusive");final String name;const r(this.name);String toString()=>name;}String BS(List<int> A){return const QM().convert(A);}List<int> CS(String A){return const RM().convert(A);}class QM extends Converter<List<int>,String>{final bool GR;final bool tK;const QM([bool this.GR=false,bool this.tK=false]);static const int eI=61;static const int DS=13;static const int ES=10;static const int FS=76;static const String GS="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";static const String HS="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";String convert(List<int> G){int J=G.length;if(J==0){return "";}final String D=GR?HS:GS;final int K=J.remainder(3);final int a=J-K;int N=((J~/3)*4)+((K>0)?4:0);if(tK){N+= ((N-1)~/FS)<<1;}List<int> A=new List<int>(N);int B=0,I=0,S=0;while(I<a){int C=((G[I++ ]<<16)&0xFFFFFF)|((G[I++ ]<<8)&0xFFFFFF)|G[I++ ];A[B++ ]=D.codeUnitAt(C>>18);A[B++ ]=D.codeUnitAt((C>>12)&0x3F);A[B++ ]=D.codeUnitAt((C>>6)&0x3F);A[B++ ]=D.codeUnitAt(C&0x3f);if(tK&& ++S==19&&B<N-2){A[B++ ]=DS;A[B++ ]=ES;S=0;}}if(K==1){int C=G[I];A[B++ ]=D.codeUnitAt(C>>2);A[B++ ]=D.codeUnitAt((C<<4)&0x3F);A[B++ ]=eI;A[B++ ]=eI;}else if(K==2){int C=G[I];int U=G[I+1];A[B++ ]=D.codeUnitAt(C>>2);A[B++ ]=D.codeUnitAt(((C<<4)|(U>>4))&0x3F);A[B++ ]=D.codeUnitAt((U<<2)&0x3F);A[B++ ]=eI;}return new String.fromCharCodes(A);}}class RM extends Converter<String,List<int>>{const RM();static const List<int> fI=const[-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-2,-2,-1,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,62,-2,62,-2,63,52,53,54,55,56,57,58,59,60,61,-2,-2,-2,0,-2,-2,-2,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-2,-2,-2,-2,63,-2,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2];static const int IS=61;List<int> convert(String B){int D=B.length;if(D==0){return new List<int>(0);}int N=0;for(int A=0;A<D;A++ ){int G=fI[B.codeUnitAt(A)];if(G<0){N++ ;if(G==-2){throw new FormatException('Invalid character: ${B[A]}');}}}if((D-N)%4!=0){throw new FormatException('''Size of Base 64 characters in Input
          must be a multiple of 4. Input: ${B}''');}int S=0;for(int A=D-1;A>=0;A-- ){int U=B.codeUnitAt(A);if(fI[U]>0)break;if(U==IS)S++ ;}int J=(((D-N)*6)>>3)-S;List<int> K=new Uint8List(J);for(int A=0,C=0;C<J;){int I=0;for(int a=4;a>0;){int G=fI[B.codeUnitAt(A++ )];if(G>=0){I=((I<<6)&0xFFFFFF)|G;a-- ;}}K[C++ ]=I>>16;if(C<J){K[C++ ]=(I>>8)&0xFF;if(C<J)K[C++ ]=I&0xFF;}}return K;}}class gI{bool fP;int port;int NQ;String HL;String nH;String cP;String bP;bool sP;bool pP;bool jP;bool XP;int IR;String host;int DR;String xK;String zK;Map<String,String> II;Map<String,Map<String,dynamic>> EG;Map<String,Map<String,dynamic>> ER;bool wQ;String yK;bool iL;List<String> wD;String FR;bool iQ;bool OP;void set IL(List A){if(A!=null){var B=(List D)=>D[0]=='default';var C=A.firstWhere(B,orElse:()=>null);if(C!=null){A.removeWhere(B);A.add(C);}}ca=A;}List get IL=>ca;List ca;bool RI;int eQ;int fQ;int dL;int eL;String TQ;String IQ;String UP;String BR;String aL;String KL;bool rL;bool sL;String nP;bool lQ;bool vP;String oQ;bool IF;int QQ;List<String> BI;Map<String,String> proxies;Map<String,List<String>> LQ;List<String> pQ;List<String> GL;List<String> XL;int HR;bool PP;bool tP;bool QP;int dQ;bool YL;Map<String,String> cE;bool yQ;String EQ;bool qP;String WE;Map<String,List<String>> MQ;bool VL;String dP;bool rP;bool uP;int XQ;String RP;String SQ;bool RQ;int VQ;int UQ;bool WP;String eP;Map TP;RegExp da=null;String uQ;dynamic CI;String rQ;bool CQ;dynamic get(A,[B]){if(A is!List){A=[A];}for(var C in A){if(map[C]!=null){return map[C];}}if(B is Function){return B();}else{return B;}}dynamic map;void load(Map B){this.map=B;fP=get("debug",false);port=get("port",ea);NQ=get(["httpsPort","httpsport"],fa);cP=get("certName","");nH=get("certPassword");ga(nH);bP=get("certKeyName","");sP=get("enableHSTS",false);pP=get("enableCSRFProtection",false);jP=get("disableFileSecurity",false);XP=get("broadcast",false);xK=get("broadcastUrl");IR=get("workers",Platform.numberOfProcessors==1?1:2);DR=get("updateInterval",200);var A=<String,String>{"/.well-known":"${Directory.current.absolute.path}/.well-known"};II=get("static",A);if(!II.containsKey("/.well-known")){II.addAll(A);}EG=get("linkConfig",{});zK=get("brokerUrl");yK=get("brokerName","broker-");wD=get("disabledLinks",[] );iL=get("runBrokerInMain",Platform.numberOfProcessors==1?true:false);vP=get("enableUptimeChecker",true);FR=get("uptimeCheckUrl");ER=get("upstream",{});wQ=get("strictTls",false);iQ=get("quarantine",false);OP=get("allowAllLinks",true);IL=get("defaultPermission",null);RI=get("useRuntimeManager",false);rL=get("useDartRuntimeManager",false);sL=get("useJavaRuntimeManager",false);eQ=get("passwordHasherIterations",1000);fQ=get("passwordHasherKeyLength",32);dL=get('old_passwordHasherIterations',null);eL=get('old_passwordHasherKeyLength',null);TQ=get("loginRedirectPath","/");UP=get("authType","file");BR=get("twoFactorAuth","none");nP=get("downstreamName","conns");lQ=get("runPortChecks",true);uQ=get("storageDriver",'simple');CI=get("observe",false);host=get("host","0.0.0.0");BI=get("loggers",[] );proxies=get("proxies",{});LQ=get("hooks",{});KL=get("distributionUrl",KS);aL=get("linkRepositoryUrl",JS);pQ=get("serverVmFlags",[] );GL=get("dartRuntimeManagerVmFlags",[] );XL=get("javaRuntimeManagerVmFlags",[] );HR=get("userTimeout",525600);PP=get("allowBrowserCaching",false);oQ=get("serverLogLevel","INFO");IF=get("enableLogCompression",true);QQ=get("logRotationInterval",0);tP=get("enableIPv6",false);IQ=get("guestLoginRedirectPath",null);QP=get("allowPasswordChanges",true);dQ=get("passwordExpireAfterDays",0);YL=get("keepCustomAssets",false);cE=get("linkManagerEnvironment",{});yQ=get("timeHttpRequests",false);EQ=get("generatedCertificateSubject","/C=US/ST=California/L=Oakland/O=Acuity Brands Inc./OU=Customers/CN=*");qP=get("enableCertificateGeneration",true);WE=get("alternativeBrokerUrl",null);MQ=get("httpPathClassification",{});VL=get("isAlwaysOffline",false);dP=get("corsProxyRules","");rP=get("enableGit",false);uP=get("enableSingleSignOnServer",false);XQ=get("maxQueueSize",256);rQ=get("ssoProviderUrl",null);CQ=get("formatDg5",false);RP=get("allowedCorsRegexString",null);SQ=get("loginAuditFileName","audit.log");RQ=get("loginAudit",false);VQ=get("loginThrottleDuration",60);UQ=get("loginThrottleAttempts",5);WP=get("blockOutsideGuests",false);eP=get("customLogo",null);TP=get("audit",null);}Future<bool> FY([String A="server"])async{if(await WF.uI.TL(".docker").exists()){ea=80;fa=443;}var B=await SM(A);if(!(await B.exists())){load({"downstreamName":"downstream","corsProxyRules":""});await eE(A);return true;}var C=await PS(B);load(C);var D=jL();if(const JsonEncoder().convert(C)!=const JsonEncoder().convert(D)){await eE(A);}return false;}int fa=8443;int ea=8080;Map jL(){var A={"debug":fP,"host":host,"port":port,"httpsPort":NQ,"certName":cP,"certKeyName":bP,"certPassword":nH,"enableHSTS":sP,"enableCSRFProtection":pP,"strictFileUpload":{"enabled":false,"useClamAV":false,"extensions":const["dg5","dgi","crt","key","woff","ttf","gif","svg","png","jpg","xml","json","sql","csv"]},"disableFileSecurity":jP,"isAlwaysOffline":VL,"broadcast":XP,"workers":IR,"updateInterval":DR,"static":II,"linkConfig":EG,"disabledLinks":wD,"enableUptimeChecker":vP,"uptimeCheckUrl":FR,"upstream":ER,"strictTls":wQ,"quarantine":iQ,"allowAllLinks":OP,"defaultPermission":IL,"useRuntimeManager":RI,"useDartRuntimeManager":rL,"useJavaRuntimeManager":sL,"passwordHasherIterations":eQ,"passwordHasherKeyLength":fQ,"loginRedirectPath":TQ,"guestLoginRedirectPath":IQ,"authType":UP,"twoFactorAuth":BR,"runPortChecks":lQ,"storageDriver":uQ,"downstreamName":nP,"loggers":BI,"proxies":proxies,"hooks":LQ,"distributionUrl":KL,"linkRepositoryUrl":aL,"serverVmFlags":pQ,"userTimeout":HR,"allowBrowserCaching":PP,"serverLogLevel":oQ,"enableLogCompression":IF,"logRotationInterval":QQ,"enableIPv6":tP,"dartRuntimeManagerVmFlags":GL,"javaRuntimeManagerVmFlags":XL,"allowPasswordChanges":QP,"passwordExpireAfterDays":dQ,"keepCustomAssets":YL,"linkManagerEnvironment":cE,"timeHttpRequests":yQ,"generatedCertificateSubject":EQ,"enableCertificateGeneration":qP,"alternativeBrokerUrl":WE,"httpPathClassification":MQ,"corsProxyRules":dP,"enableGit":rP,"enableSingleSignOnServer":uP,"maxQueueSize":XQ,"ssoProviderUrl":rQ,"formatDg5":CQ,"allowedCorsRegexString":RP,"loginAuditFileName":SQ,"loginAudit":RQ,"loginThrottleDuration":VQ,"loginThrottleAttempts":UQ,"blockOutsideGuests":WP,"customLogo":eP,"audit":TP};if(xK!=null){A["broadcastUrl"]=xK;}if(yK!=null){A["brokerName"]=yK;}if(zK!=null){A["brokerUrl"]=zK;}if(iL!=null){A["runBrokerInMain"]=iL;}if(map["ldap"]!=null){A["ldap"]=map["ldap"];}if(map["ldap2"]!=null){A["ldap2"]=map["ldap2"];}if(map["duo"]!=null){A["duo"]=map["duo"];}if(map["strictFileUpload"]!=null){A["strictFileUpload"]=map["strictFileUpload"];}if(map["externalAuth"]!=null){A["externalAuth"]=map["externalAuth"];}if(map["authServer"]!=null){A["authServer"]=map["authServer"];}if(map['openId']!=null){A['openId']=map['openId'];}if(map['proxy']!=null){A['proxy']=map['proxy'];}if(dL!=null){A['old_passwordHasherIterations']=dL;}if(eL!=null){A["old_passwordHasherKeyLength"]=eL;}if(CI==true||CI is String){A["observe"]=CI;}if(map['smtp']!=null){A['smtp']=map['smtp'];}return A;}bool ha=false;Future eE([String A="server"])async{if(ha){return;}ha=true;var B=await SM(A);await QS(B,jL());ha=false;}void ga(String A){if(A==null||A.isEmpty){HL=A;return;}var B=US(A);if(B==null||B.isEmpty){HL=A;ia(A);return;}HL=B;}void ia(String B){var A=VS(B);if(A==null||A.isEmpty){return;}nH=A;eE();}}const String hI="dglux_server";const String JS="https://dsa.s3.amazonaws.com/links/links.json";const String KS="https://dsa.s3.amazonaws.com/dists/dists.json";const int LS=1024;const int MS=LS*1024;const int NS=MS*1024;gI b;LB X;OS(){if(X==null){rE=true;X=new LB("DGServer");X.cQ.listen((A){List<String> B=A.message.split("\n");for(String C in B){print("[${A.level.name}] ${C}");}if(A.error!=null){print(A.error);}if(A.stackTrace!=null&&X.PQ(Z.HJ)){print(A.stackTrace);}});}}Future<pE> SM(String A)async{var B=["${A}.json","${A}.toml","${A}.yaml"];for(var D in B){var C=WF.uI.TL(D);if(await C.exists()){return C;}}return WF.uI.TL(B.first);}Future<dynamic> PS(pE B)async{if(!(await B.exists())){return null;}var A=await B.readAsString();var C=xM(B.path);if(C==".toml"){var D=new iN();return nE(D.wB(A).value);}else if(C==".yaml"){return nE(YV(A));}else{if(A.trim().isEmpty||A==" "){A="{}";}return nE(mE.convert(A));}}Future QS(pE B,dynamic D)async{if(!(await B.exists())){await B.create();}var A="";var C=xM(B.path);if(C==".toml"){var G=new WU();A=G.encode(D);}else if(C==".yaml"){A=bV(D);}else{A=RS.convert(D);}if(!A.endsWith("\n")){A=A+"\n";}final I=C!='.toml'&&C!='.yaml';await B.writeAsString(A,verifyJson:I);}JsonEncoder RS=const JsonEncoder.withIndent("  ");JsonEncoder SS=const JsonEncoder();JsonDecoder mE=const JsonDecoder();Utf8Decoder ZG=const Utf8Decoder(allowMalformed:true);dynamic nE(A){if(A is Map){var B={};for(var C in A.keys){B[nE(C)]=nE(A[C]);}return B;}else if(A is List){return A.map((D)=>nE(D)).toList();}else{return A;}}final TS=new Uint8List.fromList([0x00,0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x88,0x99,0x88,0x77,0x66,0x55,0x44,0xFF,0xFF,0x44,0x55,0x66,0x77,0x88,0x99,0x88,0x77,0x66,0x55,0x44,0x33,0x22,0x11,0xAA]);final XF TM=new XF(TS);iG aG;iG get bG{if(aG!=null)return aG;aG=new iG();return aG;}String US(String A){if(A==null||A.isEmpty)return null;bG..reset()..init(false,TM);String B;try {var D=CS(A);var G=UM(bG,D);var C=UTF8.decode(G);var I=int.parse(C.substring(0,2),radix:10);B=C.substring(2,2+I);}catch (J){return null;}return B;}String VS(String B){if(B==null||B.isEmpty)return null;String G;bG..reset()..init(true,TM);var J=B.length.toString().padLeft(2,'0');var A=J+B;var D=UTF8.encode(A);var I=16-(D.length%16);if(I!=16){var C=A.length+I;C=(C<16?16:C);A=A.padRight(C,'.');D=UTF8.encode(A);}try {var K=UM(bG,D);G=BS(K);}catch (N){X.oD("Error encoding password",N);return null;}return G;}Uint8List UM(iG D,Uint8List B){var C=new Uint8List(B.length);for(var A=0;A<B.lengthInBytes;){var G=D.hQ(B,A,C,A);A+= G;}return C;}typedef dynamic gS<DC>(DC _0);typedef void hS(Process _0);typedef void nI(String _0);class ND extends ProcessResult{final iB;ND(int A,int B,C,D,this.iB):super(A,B,C,D);}class iS{}bool jS=false;Future<ND> CC(String D,{List<String> args: const[] ,String workingDirectory,Map<String,String> environment,bool includeParentEnvironment: true,bool runInShell: true,stdin,hS handler,nI stdoutHandler,nI stderrHandler,nI outputHandler,iS controller,File outputFile,bool logCompression: true,gS<int> exitHandler,bool inherit: false,bool writeToBuffer: false,bool binary: false,bool capture: true,bool inheritStdin: false,Duration timeout,bool sudo: false})async{if(sudo&&(Platform.isLinux||Platform.isMacOS)&&(await WB("sudo"))!=null){var OB=D;D=await WB("sudo");args=new List<String>.from(args);args.insert(0,OB);}rI B;if(outputFile!=null){B=new rI(outputFile,logCompression:logCompression);await B.start();}if(workingDirectory==null){workingDirectory=Directory.current.path;}var N=new Map.from(environment is Map?environment:{});if(includeParentEnvironment){N["PATH"]=cM();}try {if(jS){X.FC("Execute '${D} ${args.join(' ')}' in ${workingDirectory}");}Process A=await Process.start(D,args,workingDirectory:workingDirectory,environment:N,includeParentEnvironment:includeParentEnvironment,runInShell:runInShell);if(controller!=null){controller.ja=A;controller.ka.complete();}if(B!=null){var VB="[${UF}] ==" " Executing ${D} with arguments" " ${args} (pid: ${A.pid}) ==";B.write(VB);}var I=new StringBuffer();var S=new StringBuffer();var U=new StringBuffer();var J=<int>[] ;var a=<int>[] ;var l=<int>[] ;if(capture){if(!binary){A.stdout.transform(const Utf8Decoder(allowMalformed:true)).transform(const LineSplitter()).listen((C)async{if(writeToBuffer){S.writeln(C);I.writeln(C);}if(stdoutHandler!=null){stdoutHandler(C);}if(outputHandler!=null){outputHandler(C);}if(inherit){VR.stdout.writeln(C);}if(B!=null){B.write("[${UF}] ${C}");}});A.stderr.transform(const Utf8Decoder(allowMalformed:true)).transform(const LineSplitter()).listen((C)async{if(writeToBuffer){U.writeln(C);I.writeln(C);}if(stderrHandler!=null){stderrHandler(C);}if(outputHandler!=null){outputHandler(C);}if(inherit){VR.stderr.writeln(C);}if(B!=null){B.write("[${UF}] ${C}");}});}else{A.stdout.listen((G){if(writeToBuffer){J.addAll(G);l.addAll(G);}});A.stderr.listen((G){if(writeToBuffer){J.addAll(G);a.addAll(G);}});}}if(handler!=null){handler(A);}if(stdin!=null){if(stdin is File){stdin=await stdin.openRead();}if(stdin is Stream){stdin.listen(A.stdin.add,onDone:A.stdin.close);}else if(stdin is List){A.stdin.add(stdin);}else{A.stdin.write(stdin);await A.stdin.close();}}else if(inherit&&inheritStdin){stdin.listen(A.stdin.add,onDone:A.stdin.close);}var t=false;if(timeout!=null){new Future.delayed(timeout,(){if(!t){A.kill(ProcessSignal.SIGKILL);}});}var K=await A.exitCode;t=true;var AC=A.pid;await new Future.delayed(const Duration(milliseconds:5));if(B!=null){B.write("[${UF}] == Exited with status ${K} ==");}if(exitHandler!=null){exitHandler(K);}if(B!=null){await B.stop();}return new ND(AC,K,binary?l:S.toString(),binary?a:U.toString(),binary?J:I.toString());}finally {if(B!=null){await B.stop();}}}Map<String,String> TF={};String cM(){var A=Platform.environment["PATH"].split(Platform.isWindows?";":":");if(Platform.isMacOS&&!A.contains("/usr/local/bin")){A.add("/usr/local/bin");}return A.join(Platform.isWindows?";":":");}Future<String> WB(String B)async{if(TF.containsKey(B)){var A=new File(TF[B]);if(await A.exists()){return A.path;}}if(const["dart","pub"].contains(B)){try {var J=new File(Platform.resolvedExecutable);var K=J.parent;var A=new File(i(K.path,B));if(await A.exists()){return TF[B]=A.absolute.path;}}catch (l){}}if(const["openssl"].contains(B)&&Platform.isWindows){var N=<String>[i(Directory.current.path,"bin","tools","openssl","openssl.exe")];for(var S in N){var A=new File(S);if(await A.exists()){return TF[B]=A.absolute.path;}}}var U=cM().split(Platform.isWindows?";":":");var G=[B];if(Platform.isWindows){G.addAll(["${B}.exe","${B}.bat"]);}for(var C in U){if(C.startsWith('"')&&C.endsWith('"')){C=C.substring(1,C.length-1);}if(Platform.environment.containsKey("HOME")){var D=Platform.environment["HOME"];if(!D.endsWith("/")){D+= "/";}C=C.replaceAll("~/",D);}var I=new Directory(CU(C)).absolute;if(!(await I.exists())){continue;}for(var a in G){var A=new File(i(I.path,a)).absolute;if(await A.exists()){TF[B]=A.path;return A.path;}}}return null;}Future<bool> kS()async{var A=await WB("node");return A!=null;}Future<bool> lS()async{var A=await WB("ruby");return A!=null;}Future<bool> dM()async{var A=await WB("python");return A!=null;}Future<bool> mS()async{var A=await WB("virtualenv");return A!=null;}Future<bool> nS()async{var B=await WB("java");if(B!=null){return true;}String A=Platform.environment["JAVA_HOME"];if(A!=null){var C=await oS([i(A,"bin","java"),i(A,"bin","java.exe"),i(A,"java"),i(A,"java.exe")]);if(C!=null){return true;}}return false;}Future<File> oS(List<String> B)async{for(var C in B){var A=new File(C);if(await A.exists()){return A;}}return null;}bool dG;Future<bool> eM()async{if(dG!=null){return dG;}dG=(Platform.isLinux||Platform.isMacOS)&&(await WB("bsdtar")!=null);return dG;}Future<Directory> pS([String B])async{var C=await xS();if(C>=(NS)*2){return await Directory.systemTemp.createTemp(B);}else{Directory A=new Directory("tmp");if(!(await A.exists())){await A.create(recursive:true);}return await A.createTemp(B);}}Future fM(String N,Directory B,{bool handleSingleDirectory: false,List<String> exclude,bool allowSmartDownload: true,bool allowSmartExtract: true})async{if(allowSmartDownload&&allowSmartExtract&&await eM()){var D=await pS("dgserver-fetch");var C=new File(i(D.path,"file.tmp"));await C.create(recursive:true);var a=await pI.getUrl(Uri.parse(N));var l=await a.close();IOSink G=C.openWrite();await l.listen((t){G.add(t);}).asFuture();await G.flush();await G.close();await new Future.delayed(const Duration(milliseconds:250));var S=await WB("bsdtar");if(!(await B.exists())){await B.create(recursive:true);}var I=["-C",B.path,"-xvf${C.path}"];List<String> J=[] ;if(exclude!=null){J.addAll(exclude.map((A)=>"--exclude=${A}"));}I.addAll(J);if(handleSingleDirectory){ND OB=await CC(S,args:["-tf${C.path}"]..addAll(J),writeToBuffer:true);List<String> U=OB.iB.split("\n");U.removeWhere((A)=>A==null||A.isEmpty||A.endsWith("/"));if(U.every((VB)=>VB.contains("/"))){I.addAll(["--strip-components","1"]);}}var K=await CC(S,args:I,writeToBuffer:true);if(K.exitCode!=0){await D.delete(recursive:true);throw new Exception("Failed to extract archive." " (Exit Code: ${K.exitCode})\n${K.iB}");}await D.delete(recursive:true);}else{var AC=await oI(N);await qS(AC,B,handleSingleDirectory:handleSingleDirectory,exclude:exclude,allowSmartExtract:allowSmartExtract);}}Future qS(List<int> D,Directory C,{bool handleSingleDirectory: false,List<String> exclude,bool allowSmartExtract: true})async{if(allowSmartExtract&&await eM()){var N=await WB("bsdtar");if(!(await C.exists())){await C.create(recursive:true);}var G=["-C",C.path,"-xvf-"];List<String> I=[] ;if(exclude!=null){I.addAll(exclude.map((A)=>"--exclude=${A}"));}G.addAll(I);if(handleSingleDirectory){ND U=await CC(N,args:["-tf-"]..addAll(I),handler:(Process B){B.stdin.add(D);B.stdin.close();},writeToBuffer:true);List<String> S=U.iB.split("\n");S.removeWhere((A)=>A==null||A.isEmpty||A.endsWith("/"));if(S.every((a)=>a.contains("/"))){G.addAll(["--strip-components","1"]);}}var J=await CC(N,args:G,handler:(Process B){B.stdin.add(D);B.stdin.close();});if(J.exitCode!=0){throw new Exception("Failed to extract archive. (Exit Code: ${J.exitCode})\n" "${J.iB}");}}else{List<cF> K=[] ;if(exclude!=null){for(String A in exclude){K.add(new cF(A,recursive:true));}}var l=await sS(D).where((BC t){if(K.isEmpty){return true;}else{for(cF OB in K){if(OB.NB(t.name)){return false;}}return true;}});await rS(l,C,handleSingleDirectory:handleSingleDirectory);}}Future rS(Stream<BC> G,Directory I,{bool handleSingleDirectory: false})async{var C=await G.toList();if(handleSingleDirectory&&C.every((A)=>A.name.split("/").length>=2)){C.forEach((B){B.name=B.name.split("/").skip(1).join("/");});C.removeWhere((D)=>D.name==""||D.name=="/");}for(BC A in C){if(!A.wX||A.name.endsWith("/"))continue;var B=new File(i(I.path,A.name));if(!(await B.exists())){await B.create(recursive:true);}await B.writeAsBytes(A.EL);}}Stream<BC> sS(List<int> B)async*{var C=new ZR();var D=C.VX(B);for(var A in D.iD){if(A.vX){A.gP();}yield A;}}String tS(){String A;try {A=Platform.resolvedExecutable;}catch (B){try {A=Platform.executable.isNotEmpty?Platform.executable:"dart";}catch (B){A="dart";}}return A;}Future<List<int>> oI(String C,{retry: false,retryCallback(int count)})async{if(C==null||C.isEmpty){return <int>[] ;}int D=0;int B=0;if(retry==true){B=5;}else if(retry is int){B=retry;}G()async{try {var I=await pI.getUrl(Uri.parse(C));var A=await I.close();if(A.isRedirect){A=await A.redirect();}if(A.statusCode!=200){throw new Exception("Failed to fetch url: got status code ${A.statusCode}");}return await A.fold([] ,(List J,List K){return J..addAll(K);});}catch (N){if(B>0&&D<B){D++ ;if(retryCallback!=null){retryCallback(D);}await new Future.delayed(const Duration(milliseconds:250));return await G();}else{rethrow;}}}return await G();}HttpClient pI=new HttpClient()..badCertificateCallback=(A,B,C)=>true;void uS([bool A=false]){pI.close(force:A);}String get UF{return new DateTime.now().toString();}Future<FileSystemEntity> vS(String A,{bool dir: false})async{var B=await FileSystemEntity.type(A);if(B==FileSystemEntityType.FILE){return new File(A).absolute;}else if(B==FileSystemEntityType.DIRECTORY){return new Directory(A).absolute;}else{if(dir){return new Directory(A).absolute;}else{return new File(A).absolute;}}}final File wS=new File("/proc/meminfo");int EE;bool qI;Future<int> xS()async{if(EE!=null){return EE;}if(Platform.isMacOS){var C=await Process.run("sysctl",const["-n","hw.memsize"]);EE=int.parse(C.stdout);}else if(Platform.isLinux||Platform.isAndroid){if(qI==null){qI=Platform.isAndroid?false:(await WB("free"))!=null;}if(qI){var C=await Process.run("free",const["-b"]);List<String> D=C.stdout.split("\n");var A=D[1];var G=A.split(" ");G.removeWhere((I)=>I.trim().isEmpty);var J=num.parse(G[1]);EE=J;}else{var D=await wS.readAsLines();var A=D.firstWhere((A){return A.startsWith("MemFree:");});var B=A.replaceAll(" ","").split(":")[1];if(B.endsWith("kB")){B=B.substring(0,B.length-2);}EE=(num.parse(B)*1024).toInt();}}else{EE=await yS("ComputerSystem get TotalPhysicalMemory");}return EE;}Future<int> yS(String A)async{try {var B=await Process.run("wmic",A.split(" "));var C=B.stdout.split("\n").where((String D)=>D.isNotEmpty).skip(1).toList();return int.parse(C[0]);}catch (G){return 0;}}GZipCodec zS=new GZipCodec();Future AT(File A,File B,{bool clearOld: false})async{var G=await WB("gzip");if(!(await B.parent.exists())){await B.parent.create(recursive:true);}if(G!=null){await B.create(recursive:true);var D=await B.openWrite();var C=await CC(G,stdin:A,handler:(Process I)async{I.stderr.drain();await D.addStream(I.stdout);},capture:false);if(C.exitCode!=0){await D.close();await B.delete();throw new Exception("Failed to GZIP Compress File ${A.path} to ${B.path}");}await new Future.delayed(const Duration(milliseconds:5));await D.close();if(clearOld){if(Platform.isWindows){await A.delete();await A.create(recursive:true);}else{await A.writeAsBytes([] ,flush:true);}}}else{var K=zS.encoder;var J=await A.readAsBytes();var C=K.convert(J);await B.writeAsBytes(C,flush:true);J=null;C=null;if(clearOld){if(Platform.isWindows){await A.delete();await A.create(recursive:true);}else{await A.writeAsBytes([] ,flush:true);}}}}Future<bool> gM(String A){return new Directory(A).exists();}bool get BT=>!Platform.isWindows;const int CT=5242880;const int DT=2;const Duration hM=const Duration(milliseconds:200);class rI{final File file;int iZ;bool logCompression;rI(this.file,{this.logCompression: true}){if(!file.existsSync()){file.createSync(recursive:true);}}yI la;Future start([int B=0])async{if(la!=null){la.JL();la=null;}void K(String D,File S,[int C=0]){var G=new File('${D}.${C}');if(G.existsSync()){if(C>=DT){G.deleteSync();}else{K(D,G,C+1);}}S.renameSync('${D}.${C}');}var A=B==0?null:new Duration(seconds:B);la=gT.hT(hM,()async{if(A!=null){A-= hM;}if(ma.isNotEmpty){if(A!=null&&A<=Duration.ZERO){try {K(file.path,file);file.createSync();A=new Duration(seconds:B);}catch (I,J){if(X!=null){X.oD("Failed to roll log: ${file.path}.",I,J);}}}var N=ma;ma=<String>[] ;await file.writeAsString(N.join("\n")+"\n",mode:FileMode.WRITE_ONLY_APPEND);N=null;if(!logCompression)return;try {var U=await file.stat();if(U.size>=CT&&B<=0){var a=JJ(file.path);var l=new DateTime.now().millisecondsSinceEpoch;var t=new File(i(file.parent.path,"${a}.${l}.gz"));await AT(file,t);await file.delete();await file.create();}}catch (I,J){if(X!=null){X.oD("Failed to compress log ${file.path}.",I,J);}}}});}Future stop()async{if(la!=null){la.JL();la=null;}if(ma.isNotEmpty){await file.writeAsString(ma.join("\n")+"\n",mode:FileMode.WRITE_ONLY_APPEND);}}bool get isActive=>la!=null;void write(String A){if(A.contains("\n")){ma.addAll(LineSplitter.split(A.trim()));}else{ma.add(A);}}List<String> ma=<String>[] ;}Uri dS(Uri A){if(b!=null&&b.WE!=null&&b.WE.isNotEmpty){var B=Uri.parse(b.WE);A=A.replace(host:B.host,scheme:B.scheme,port:B.port,path:A.path,query:A.hasQuery?A.query:null);return A;}var C="http://${InternetAddress.LOOPBACK_IP_V4.address}:${YS.ZS}${A.path}";if(A.query!=null&&A.query.isNotEmpty){C+= "?${A.query}";}return Uri.parse(C);}List<Process> SF=[] ;List<Function> fS=[] ;jT MD;Future<int> XS()async{var B=new File("BUILD_NUMBER");if(!(await B.exists())){return 900000000000000000000;}else{try {var A=await B.readAsString();A=A.trim();return int.parse(A);}catch (C){return -1;}}}class YS{static int ZS;}Map<String,Function> oE={};YM(String B,{bool shouldStartNow: false,bool skipDuplicates: false})async{var A=new Directory(B);if(await A.exists()){await for(Directory C in A.list().where((D)=>D is Directory)){await cS(C.absolute.path,shouldStartNow,skipDuplicates);}}}aS({bool shouldStartNow: false,bool skipDuplicates: false})async{await YM("links",shouldStartNow:shouldStartNow,skipDuplicates:skipDuplicates);await YM("dslinks",shouldStartNow:shouldStartNow,skipDuplicates:skipDuplicates);}List<String> jI=[] ;cS(String G,[bool aY=false,bool bY=false])async{var C=JJ(G);var l=new File("logs/${C}.log");var cY=new Directory("${G}/.git");var xL=await WB("git");var dY=await cY.exists();var JR=dY&&xL!=null;var yL=JR?"git":"none";if(JR){ND S=await CC(xL,args:["pull"],workingDirectory:G,outputFile:l,logCompression:b.IF);if(S.exitCode!=0){X.oD("Tried to run 'git pull' in '${G}', but it failed.");}}OG(String eY)async{if(!(await l.exists())){await l.create(recursive:true);}await l.writeAsString("[${UF}] ${eY}\n",mode:FileMode.APPEND);}var PF=new File("${G}/dslink.json");var a=new Directory(G).absolute;if(!(await PF.exists())){return;}Map t;try {t=mE.convert(await PF.readAsString());}catch (I){X.lC("Error while loading dslink.json at ${PF.path}: ${I}");return;}var A=new aM(C);A.V=new qE.BZ(t);try {A.V.tL();}catch (I){X.lC("Error while verifying dslink.json at ${PF.path}: ${I}");return;}try {if(kI!=null&&yL=="none"){var fY=A.V.name;if(kI.any((OB)=>OB["name"]==fY)){yL="repository";}}}catch (I){}if(jI.contains(C)){if(!bY){X.lC("Error while loading '${C}': duplicate link found! (path: ${G})");}return;}jI.add(C);if(!(await l.exists())){await l.create(recursive:true);}if(MD!=null){await MD.callMethod("addLink",[C,A.V.description,A.V.version,yL,!b.wD.contains(C),A.V.fB]);}await A.lB("stopped");Process VB;GE CE;Function QF;Function zL;Completer J;zL=oE[C]=(String K,[List KR])async{Future gY()async{var t=mE.convert(await PF.readAsString());A.V=new qE.BZ(t);try {A.V.tL();}catch (I){X.lC("Error while verifying dslink.json at ${PF.path}: ${I}");return;}String hY=A.V.version;String iY=A.V.description;await MD.callMethod("updateLinkInfo",[C,hY,iY]);}WS("Link Commander","DSLink ${C} received command '${K}'");if(K=="restart"){if(!A.xC){await zL("start");}else{A.aE=oB.lI;await zL("stop");}}else if(K=="start"){var jY=b.wD.remove(C);if(jY){await MD.callMethod("setLinkEnabled",C);await b.eE();}if(!A.xC&&QF!=null){QF();}}else if(K=="updateInfo"){await gY();}else if(K=="setLinkConfig"){String kY=KR[0];dynamic lY=KR[1];var PG=b.EG;if(PG==null){PG={};}if(PG[C]==null)PG[C]={};PG[C][kY]=lY;await b.eE();}else if(K=="stop"){if(A.aE!=oB.lI){A.aE=oB.bM;}if(VB!=null){if(Platform.isWindows){await iI(VB.pid);}else{VB.kill();}}else if(CE!=null){await CE.JI(a.path).timeout(const Duration(seconds:5),onTimeout:(){});}else if(t["served"]==true){await WM.callMethod("removeLinkStatic",[i(a.path,A.V.AE)]);await A.lB("stopped");A.xC=false;if(J!=null&&!J.isCompleted)J.complete();}if(J!=null){await J.future;}}else if(K=="enable"){b.wD.remove(C);await b.eE();}else if(K=="disable"){if(!b.wD.contains(C)){b.wD.add(C);await b.eE();}}else if(K=="update-git"){ND S=await CC(xL,args:["pull"],workingDirectory:G,outputFile:l,logCompression:b.IF);if(S.exitCode!=0){return "Failed.";}else{return "Success!";}}else if(K=="uninstall"){await oE[C]("stop");var LR=0;while(A.xC){await new Future.delayed(const Duration(milliseconds:25));LR++ ;if(LR==320){throw new Exception("Failed to uninstall: Can't stop link.");}}await MD.callMethod("removeLink",C);jI.remove(C);oE.remove(C);var MR=new Directory(G);if(await MR.exists()){await MR.delete(recursive:true);}X.FC("DSLink '${C}' has been uninstalled.");}else if(K=="update-repo"){try {var AM=t["name"];var mY=await eS();var AC=mY.firstWhere((OB)=>OB["name"]==AM,orElse:()=>null);if(AC==null){return "Error: ${AM} was not found in the repository.";}var BM=new File(i(a.path,".rev"));String SI="UNKNOWN";if(await BM.exists()){SI=await BM.readAsString();SI=SI.trim();}if(AC["revision"]!=null&&AC["revision"]==SI){return "Link is up-to-date.";}var nY=AC["zip"];if(AC["zip"]==null){return "Error: ${AM} was found in the repository," "but no ZIP file was specified.";}await oE[C]("stop");var S=await IT(a,nY,AC);if(S.contains("Success!")&&AC["revision"]!=null){await BM.writeAsString(AC["revision"]);}return S;}catch (I){return "Error: ${I.toString()}";}}else if(K=="getLinkDirectory"){return a;}else if(K=="getLinkJson"){return t;}};var QG=t["useRuntimeManager"]!=null?t["useRuntimeManager"]:true;QG=QG&&!Platform.isWindows;if(QG&&A.V.gB!=null&&A.V.gB.isNotEmpty&&A.V.gB.keys.contains("dart")&&(b.RI||b.rL)){CE=await JT(SF,b.GL);}if(QG&&((A.V.gB!=null&&A.V.gB.isNotEmpty&&A.V.gB.keys.contains("java"))||(A.V.name.startsWith("dslink-java-")||A.V.name.startsWith("dslink-scala-"))&&A.V.fB.containsKey("handler_class")&&A.V.fB.containsKey("name")&&A.V.fB.containsKey("log")&&(b.RI||b.sL))){String oY=i("bin","runtimes","java.jar");if(await new File(oY).exists()){CE=await GT(SF,b.XL);}}QF=([D()])async{if(b.wD.contains(C)){if(D!=null){D();}return null;}if(A.V.BG!=null&&A.V.BG.isNotEmpty){var TI=A.V.BG;if(A.V.gB!=null&&A.V.gB.isNotEmpty&&A.V.gB.keys.first=="dart"&&TI.every((OB)=>OB.startsWith("pub "))){var pY=new File(i(G,"pubspec.yaml"));if(!(await pY.exists())){TI=[] ;}}if(A.V.gB!=null&&A.V.gB.isNotEmpty&&A.V.name.startsWith("dslink-python-")&&await dM()&&await mS()&&A.V.gB.keys.first=="python"){var qY=new Directory(i(G,"packages"));if(!(await qY.exists())){var rY=await WB("virtualenv");await CC(rY,args:["--system-site-packages","packages"],workingDirectory:G);}}if(TI.isNotEmpty){await A.lB("getting dependencies");X.FC("Fetching Dependencies for DSLink '${C}'");for(var K in TI){var NR=K.split(" ");var B=NR[0];if(!KJ(B)&&!B.contains("/")&&!B.contains("\\")){var OR=await WB(B);if(A.V.name.startsWith("dslink-python-")&&(await gM(i(G,"packages")))&&(B=="python"||B=="easy_install"||B=="pip")){if(Platform.isWindows){B=i(G,"packages","Scripts",B+".exe");}else{B=i(G,"packages","bin",B);}}else if(OR!=null){B=OR;}}var U=NR.skip(1).toList();ND S;try {S=await CC(B,args:U,outputFile:l,logCompression:b.IF,workingDirectory:G,environment:{"DSA_LINK_NAME":C},handler:(Process sY){VB=sY;},runInShell:false);}catch (I){X.lC("Error while fetching dependencies for link '${C}':\n"+"Encountered process error while running '${B}'"+" with arguments ${U}: ${I}");await A.lB("stopped");if(D!=null){D();}return null;}VB=null;if(S.exitCode!=0){X.lC("Error while fetching dependencies for link '${C}':\n" "Process '${B}' with arugments ${U} exited"+" with status ${S.exitCode}");await A.lB("stopped");if(D!=null){D();}return null;}}X.FC("Fetched Dependencies for DSLink '${C}'");await A.lB("stopped");}}if(A.V.name.startsWith("dslink-java-")){if(!(await nS())){await A.lB("install java");await OG("Java is not installed. Please install Java."+" See https://www.java.com/ for more information.");if(D!=null){D();}return null;}}if(A.V.name.startsWith("dslink-javascript-")){if(!(await kS())){await A.lB("install nodejs");await OG("NodeJS is not installed. Please install NodeJS."+" See https://nodejs.org/ for more information.");if(D!=null){D();}return null;}}if(A.V.name.startsWith("dslink-ruby-")){if(!(await lS())){await A.lB("install ruby");await OG("Ruby is not installed. Please install Ruby."+" See https://www.ruby-lang.org/en/documentation/installation/"+" for more information.");if(D!=null){D();}return null;}}if(A.V.name.startsWith("dslink-python-")){if(!(await dM())){await A.lB("install python");await OG("Python is not installed."+" Please install Python via Get DSA or https://www.python.org/downloads/");if(D!=null){D();}return null;}}await A.lB("starting");String B;var U=[] ;var N={};A.V.fB.keys.where((PR)=>A.V.fB[PR]["value"]!=null||A.V.fB[PR]["default"]!=null).forEach((OB){N[OB]=A.V.fB[OB]["value"]==null?A.V.fB[OB]["default"]:A.V.fB[OB]["value"];});N.addAll(b.EG.containsKey(C)?b.EG[C]:{});if(A.V.fB.containsKey("broker")&&!N.containsKey("broker")){N["broker"]=dS(Uri.parse("/conn")).toString();}if(QG&&CE!=null){N["log-file"]=l.absolute.path;}if(A.V.fB.containsKey("token")&&!N.containsKey("token")&&!(b!=null&&b.WE!=null&&b.WE.isNotEmpty)){N["token"]=await MD.callMethod("getTrustedToken",C);}for(var CM in A.V.fB.keys){var QR=A.V.fB[CM];if(QR["required"]==true&&QR["value"]==null&&!N.containsKey(CM)){X.lC("DSLink '${C}' requires the config '${CM}' to be specified.");if(D!=null){D();}return null;}}var tY=t["served"]==true;if(tY){if(J!=null&&!J.isCompleted)J.complete();J=new Completer();var G=N["path"];if(G==null||G is!String||G.isEmpty){G="/links/${C}";}var uY=i(a.path,A.V.AE);await WM.callMethod("addLinkStatic",[uY,G]);await A.lB("started");A.xC=true;if(D!=null){D();}}else{if(A.V.gB==null||A.V.gB.isEmpty){B=A.V.AE;if((B.endsWith(".bat")||B.endsWith(".exe"))&&!Platform.isWindows){B=B.substring(0,B.length-4);}else if(Platform.isWindows){if(!B.endsWith(".bat")){B="${B}.bat";}}if(Platform.isWindows){B=B.replaceAll("/","\\");}if(!KJ(B)){B=i(a.path,B);}}else{B=A.V.gB.keys.first;if(B=="dart"){try {B=Platform.resolvedExecutable;}catch (I){B=Platform.executable;}if(B==null||B.isEmpty){B=await WB("dart");}if(B==null){B=Platform.executable;}if(B==null&&Platform.isAndroid){B="/data/local/tmp/dart";}if(b.cE!=null&&b.cE["DART_VM_FLAGS"] is String){U.addAll(b.cE["DART_VM_FLAGS"].split(" "));}}if(B=="java"){B=await WB("java");if(B==null){B="java";}U.add("-jar");}if(B=="python"){if(await gM(i(G,"packages"))){if(Platform.isWindows){B=i(a.path,"packages","Scripts","python.exe");}else{B=i(a.path,"packages","bin","python");}}else{B=await WB("python");}if(B==null){B="python";await OG("Warning: Python was not found.");}}U.add(A.V.AE);}MD.callMethod("updateLinkConfig",[C,N]);for(var jE in N.keys){if(!A.V.fB.containsKey(jE)&&jE!="log-file"){X.oD("Warning: DSLink '${C}' was configured to"+" have '${jE}' be '${N[jE]}', but that option was not"+" found for this link.");}if(jE=="handler_class"){continue;}U.addAll(["--${jE}","${N[jE]}"]);}RR()async{if(J!=null&&!J.isCompleted)J.complete();J=new Completer();if(CE!=null){var vY=await CE.lL(a.path,A.V.AE,N);if(!vY){A.lB("errored");if(D!=null){D();D=null;}A.xC=false;return null;}A.xC=true;A.lB("started");X.FC("DSLink '${C}' started.");if(D!=null){D();D=null;}await CE.IG(a.path).first;if(D!=null){D();D=null;}A.xC=false;return null;}try {var SR={"DSA_LINK_NAME":C};if(b.cE is Map){SR.addAll(b.cE);}if(A.V.zX["sudo"]==true&&BT){U.insert(0,B);B="sudo";}var S=await CC(B,args:U,outputFile:l,logCompression:b.IF,workingDirectory:G,handler:(Process DM){if(D!=null){D();}X.FC("DSLink '${C}' started.");A.xC=true;A.lB("started");VB=DM;XM(DM.pid,C);SF.add(DM);},environment:SR,runInShell:false);if(S.exitCode==126){throw new ProcessException(B,U,"Permission denied");}S=null;}catch (I,TR){if(I is ProcessException){if((Platform.isLinux||Platform.isMacOS)&&B!="bash"){U.insert(0,B);B="bash";return await RR();}X.lC("DSLink '${C}' exception while starting",I,TR);X.oD("DSLink '${C}' errored during startup.");SF.remove(VB);A.xC=false;await A.lB("errored");A.aE=oB.mI;return null;}X.lC("DSLink '${C}' exception while starting",I,TR);}}await RR();try {if(VB!=null){await iI(VB.pid);}}catch (I){}SF.remove(VB);A.xC=false;var EM=false;var UR=false;A.lB("stopped");if(J!=null&&!J.isCompleted)J.complete();if(A.aE==oB.lI){X.FC("DSLink '${C}' is now restarting.");EM=true;}else if(A.aE==oB.bM){X.FC("DSLink '${C}' is now stopped.");}else{X.FC("DSLink '${C}' suddenly stopped.");EM=true;UR=true;}A.aE=oB.mI;if(UR){await new Future.delayed(const Duration(seconds:1));}if(EM){await QF();}}};if(aY){QF();}else{fS.add(QF);}}class aM{final String name;aM(this.name);bool xC=false;oB aE=oB.mI;qE V;lB(String A)async{if(MD!=null){await MD.callMethod("setLinkState",[name,A]);}}}class oB{static const oB bM=const oB(0);static const oB lI=const oB(1);static const oB mI=const oB(3);final int id;const oB(this.id);}WS(String A,String B){if(b!=null&&b.BI!=null&&b.BI.contains(A)){if(X!=null){X.FC("[${A}] ${B}");}else{print("[${A}] ${B}");}}}bool VM=false;XM(int A,[String B]){if(B==null){B="${A}";}if(!cG.containsKey(A)){cG[A]=B;VM=true;if(B!=A.toString()){X.HD("Registered PID ${A} (${B})");}else{X.HD("Registered PID ${A}");}}}ZM(int A){if(cG.containsKey(A)){cG.remove(A);VM=true;X.HD("Unregistered PID ${A}");}}Map<int,String> cG={};iT WM;Future<RC> bS()async{List<int> J;try {J=await oI(b.KL);}catch (A){return new RC.AZ("Failed to fetch distribution information: ${A}");}var S=ZG.convert(J);Map K;try {K=mE.convert(S);}catch (A){return new RC.AZ("Failed to decode distribution information: ${A}");}int U=await XS();int D;Map N=K["dists"];if(N is!Map){return new RC.AZ("Failed to handle distribution information: dists key not found");}Map B=N[hI];if(B is!Map){return new RC.AZ("Failed to handle distribution information: dist ${hI} not found");}try {D=int.parse(B["latest"]);}catch (A){return new RC.AZ("Failed to determine the latest build number: ${A}");}if(U>=D){return new RC.zY("Server is up-to-date.");}try {var a=B["file"];var C=B["update"];if(C==null){C={};}List<String> G=[] ;if(C.containsKey("ignore")){G.addAll(C["ignore"]);}if(b.YL==true){G.addAll(const["www/*.html","www/*.css","www/*.png","www/*.jpg","www/*.js","www/*.ico","www/css","www/js","www/img","www/images"]);}String I;if(B["url"] is String){I=B["url"];}else{I="https://dsa.s3.amazonaws.com/dists/${hI}/${D}/${a}";}await fM(I,Directory.current,exclude:G);return new RC.zY("Updated!");}catch (A){return new RC.AZ("Failed to update: ${A}");}}List<Map<String,dynamic>> kI;Future<List<Map<String,dynamic>>> eS()async{if(b!=null&&b.VL){return [] ;}var A=mE.convert(ZG.convert(await oI(b.aL,retry:3)));if(A is List){A.sort((B,C){if(B is Map&&C is Map&&B["displayName"]!=null&&C["displayName"]!=null){return B["displayName"].compareTo(C["displayName"]);}return 0;});kI=A;X.HD("Updated Link Repository Data (${A.length} links)");}return A;}Future<bool> iI(int A,{bool asRoot: false,bool childrenOnly: false})async{try {ZM(A);}catch (C,D){X.oD("Failed to remove PID ${A} from list.",C,D);}if(Platform.isWindows){var B=await CC("taskkill",args:["/F","/T","/PID",A.toString()],timeout:const Duration(seconds:8));return B.exitCode==0;}else if(Platform.isMacOS){try {var B=await CC("kill",args:["-TERM","-"+A.toString()],timeout:const Duration(seconds:3),sudo:asRoot);return B.exitCode==0;}catch (C,D){X.oD("Failed to kill the process ${A}.",C,D);}return false;}else{try {await CC("pkill",args:["-TERM","-P",A.toString()],timeout:const Duration(seconds:3),sudo:asRoot);}catch (C,D){X.oD("Failed to kill the process ${A}.",C,D);}if(!childrenOnly){ND B=await CC("kill",args:["-TERM",A.toString()],timeout:const Duration(seconds:3),sudo:asRoot,writeToBuffer:true);if(!asRoot&&B.iB.toString().contains("not permitted")){X.HD("Unable to kill PID ${A} without root," " attempting sudo kill.");var G=await iI(A,asRoot:true);if(G){X.HD("Killed PID ${A} as root.");}else{X.HD("Failed to kill PID ${A} as root.");}}return B.exitCode==0;}else{return true;}}}bool KT=false;Function LT;abstract class GE{Stream IG(String A);Stream DI(String A);Set<String> get OC;Future lL(String A,String B,Map<String,dynamic> C);Future JI(String A);}const bool ET=const bool.fromEnvironment("dsa.runtime_manager.dart.merged",defaultValue:false);GE FE;bool VF=false;Future<GE> JT(List<Process> N,List<String> B)async{if(ET){if(FE!=null){return FE;}var D=new MT();FE=D;VF=false;return D;}if(VF){X.FC("Waiting for Dart Runtime Manager to start.");while(true){if(!VF){break;}await new Future.delayed(const Duration(milliseconds:5));}return FE;}if(FE!=null){return FE;}VF=true;String S=await tS();String A=i("bin","runtime.dart");if(!(await new File(A).exists())){A=i("bin","helpers","runtime.dart");}var G=new File(i(BU(A),AU(A)+".snapshot")).absolute;if(await G.exists()){A=G.path;}var I=()async{var C=[] ;if(B!=null&&B.isNotEmpty){C.addAll(B);}C.addAll(["-Ddslink.runtime.manager=true",A]);var J=await Process.start(S,C);N.add(J);return J;};var K=new sI(await I(),logFile:new File("logs/runtime-dart.log"),restart:I,name:"Dart");FE=K;VF=false;return K;}class sI implements GE{Process process;bool QY=false;Stream IG(String A){return na.stream.where((String B)=>B==A);}Stream DI(String A){return oa.stream.where((B)=>B==A||"!${A}"==B);}StreamController<String> na=new StreamController.broadcast();StreamController<String> oa=new StreamController.broadcast();IOSink lD;sI(this.process,{String name,File logFile,Future<Process> restart()}){B()async{if(lD!=null){lD.close();lD=null;}var D="runtime-${name==null?'unknown':name.toLowerCase()}";XM(process.pid,D);if(logFile!=null){if(!(await logFile.exists())){await logFile.create(recursive:true);}lD=await logFile.openWrite(mode:FileMode.APPEND);}process.exitCode.then((G)async{pa=false;ZM(process.pid);if(!QY){X.lC("${name==null?"A":name} runtime manager died: ${G}");}try {lD.close();}catch (C){}if(OC.isNotEmpty&&LT!=null){var I=new List.from(OC);OC.clear();for(var J in I){na.add(J);}}if(restart!=null&&!KT){process=await restart();B();}});process.stdout.transform(ZG).listen((String A){if(A.startsWith("\u0002")&&A.trim().endsWith("\u0003")){A=A.trim();var K=A.substring(1,A.length-1);var N=mE.convert(K);oX(N);}else{if(lD!=null){try {lD.write(A);}catch (C){}}else{VR.stdout.write(A);}}});process.stderr.transform(ZG).listen((String A){if(lD!=null){try {lD.write(A);}catch (C){}}else{VR.stderr.write(A);}});}B();}Set<String> OC=new Set<String>();List<String> qa=[] ;oX(Map A)async{X.HD("Runtime Manager Received: ${A}");var B=A["event"];if(B=="fail"){if(!OC.contains(A["path"])){oa.add("!${A["path"]}");}else{na.add(A["path"]);OC.remove(A["path"]);}}else if(B=="stopped"){na.add(A["path"]);OC.remove(A["path"]);}else if(B=="ready"||B=="started"){oa.add(A["path"]);}else if(B=="runtime.ready"){X.HD("Runtime Manager - Flushing Write Queue: ${qa.length}");pa=true;while(qa.isNotEmpty){write(qa.removeAt(0));}}}Future lL(String A,String B,Map<String,dynamic> C)async{write({"event":"start","path":A,"main":B,"configs":C});return DI(A).first.then((String D){if(D.startsWith("!")){return false;}OC.add(A);return true;});}Future JI(String A){write({"event":"stop","path":A});return IG(A).first;}int ra;bool pa=false;bool sa=true;bool ta=false;void write(A){if(ta&&A is Map&&A["event"]!="stop"){return;}if(!pa){qa.add(A);return;}if(sa){var B=new DateTime.now().millisecondsSinceEpoch;if(ra!=null&&(B-ra)<500){new Future.delayed(Platform.numberOfProcessors==1?const Duration(milliseconds:500):const Duration(milliseconds:250),(){write(A);});return;}ra=B;}X.HD("Runtime Manager Write: ${A}");var C=SS.convert(A);process.stdin.write("\u0002"+C+"\u0003");}}Future<String> IT(Directory C,String U,Map a)async{try {var A=a["update"];var I=A is Map&&A["backupForUpdate"]==true;var G={};if(I){var J=["nodes.json",".dslink.key"];if(A!=null&&A["protectedFiles"]!=null){J.addAll(A["protectedFiles"]);}for(var B in J){var D=new File(i(C.path,B));if(await D.exists()){G[B]=await D.readAsBytes();}}}if(A is Map&&A["delete"] is List&&A["delete"].isNotEmpty){for(var K in A["delete"]){if(K is!String)continue;try {var N=await vS("${C.path}/${K}");if(await N.exists()){await N.delete(recursive:true);}}catch (S){}}}await fM(U,C,handleSingleDirectory:true);if(I){for(var B in G.keys.toList()){var l=G.remove(B);var D=new File(i(C.path,B));await D.writeAsBytes(l);}}return NT;}catch (S){return "Error: ${S.toString()}";}}GE eG;bool fG=false;Future<GE> GT(List<Process> J,List<String> A)async{if(fG){X.FC("Waiting for Java Runtime Manager to start.");while(true){if(!fG){break;}await new Future.delayed(const Duration(milliseconds:5));}return eG;}if(eG!=null){return eG;}fG=true;String B=await WB("java");if(B==null){B="java";}String K=i("bin","runtimes","java.jar");var D=()async{var C=[] ;if(A!=null&&A.isNotEmpty){C.addAll(A);}C.addAll(["-jar",K]);var G=await Process.start(B,C);J.add(G);return G;};var I=new sI(await D(),logFile:new File("logs/runtime-java.log"),restart:D,name:"Java");eG=I;fG=false;return I;}const String FT=r"""
import "dart:async";
import "dart:io";
import "dart:isolate";
import "{{uri}}" as run;

main(List<String> args, msg) async {
  var rp = new ReceivePort();
  SendPort sp;
  if (msg is SendPort) {
    sp = msg;
  } else {
    sp = rp.sendPort;
  }

  var rcfg = {};

  rp.listen((x) {
    if (x == "STOP") {
      if (rcfg != null && rcfg["closeHandler"] is Function) {
        rcfg["closeHandler"]();
      }
      rp.close();
    }
  });

  sp.send(rp.sendPort);

  var file = new File("{{log_file}}");
  if (!(await file.exists())) {
    await file.create(recursive: true);
  }
  var raf = await file.openWrite(mode: FileMode.APPEND);
  var spec = new ZoneSpecification(print: (Zone self, ZoneDelegate parent, Zone zone, String line) {
    raf.writeln("[${currentTimestamp}] ${line}");
  }, handleUncaughtError: (Zone self, ZoneDelegate parent, Zone zone, error, StackTrace stackTrace) {
    var out = [];
    out.addAll(error.toString().split("\n"));
    out.addAll(stackTrace.toString().split("\n"));

    for (var line in out) {
      raf.writeln("[${currentTimestamp}] ${line}");
    }
    out.clear();
  });

  return await runZoned(() async {
    return await run.main(args);
  }, zoneSpecification: spec, zoneValues: {
    "dslink.runtime.config": rcfg
  });
}

String get currentTimestamp => new DateTime.now().toString();
""";class MT extends GE{Map<String,StreamController> ua={};Map<String,StreamController> va={};Set<String> OC=new Set<String>();Stream IG(String A){if(va[A] is StreamController){return va[A].stream;}var B=va[A]=new StreamController.broadcast();return B.stream;}Stream DI(String A){if(ua[A] is StreamController){return ua[A].stream;}var B=ua[A]=new StreamController.broadcast();return B.stream;}Future lL(String A,String OB,Map<String,dynamic> C){new Future(()async{if(OC.contains(A)){await JI(A);}try {var J=new Directory(A);var K=[] ;for(var D in C.keys){if(C[D] is Map){C[D]=C[D]["value"];}if(D=="log-file"){continue;}K.add("--${D}=${C[D]}");}K.add("--base-path=${J.path}");var S=new File(i(J.path,OB)).absolute;var G=FT;G=G.replaceAll("{{uri}}",S.uri.toString());G=G.replaceAll("{{log_file}}",C["log-file"].toString());var U=new File(i(J.path,".rtm_stub"));await U.writeAsString(G);var a=new ReceivePort();var l=new Directory(i(S.parent.path,"packages"));Uri t;if(await l.exists()){t=l.uri;}var B=await Isolate.spawnUri(U.uri,K,a.sendPort,paused:true,packageRoot:t);var N=new ReceivePort();N.listen((I){if(I=="EXIT"){if(va[A] is StreamController){va[A].add(A);}yH.remove(A);N.close();a.close();}});B.addOnExitListener(N.sendPort,response:"EXIT");yH[A]=B;B.resume(B.pauseCapability);if(ua[A] is StreamController){ua[A].add(A);}}catch (I){Isolate B=yH.remove(A);if(B!=null){B.kill();}FI.remove(A);if(ua[A] is StreamController){ua[A].add("!${A}");}try {ua.remove(A).close();}catch (I){}try {va.remove(A).close();}catch (I){}OC.remove(A);return new Future.value();}});return DI(A).first.then((VB){if(VB.startsWith("!")){return false;}OC.add(A);return true;});}Future JI(String A)async{new Future(()async{if(FI[A] is SendPort){FI[A].send("STOP");}await new Future.delayed(const Duration(milliseconds:200));var B=yH.remove(A);if(B!=null){B.kill(priority:Isolate.IMMEDIATE);}FI.remove(A);try {ua.remove(A).close();}catch (D){}try {var C=va.remove(A);C.add(A);C.close();}catch (D){}OC.remove(A);});return IG(A).first;}Map<String,Isolate> yH={};Map<String,SendPort> FI={};}abstract class tI{}abstract class pE implements tI{}abstract class gG implements tI{}abstract class WF{static WF uI=new OT();gG get p;pE TL(String A){return p.RX(A);}}class iM implements pE{final File file;iM(this.file);Future create()async{await file.create(recursive:true);}Future delete()async{await file.delete(recursive:true);}Future<bool> exists(){return file.exists();}tI get parent{return new hG(file.parent);}String get path=>file.path;Future<List<int>> readAsBytes(){return file.readAsBytes();}Future<String> readAsString(){return file.readAsString();}Future writeAsBytes(List<int> A){return file.writeAsBytes(A);}Future writeAsString(String A,{bool verifyJson: false})async{return cT(file,A,verifyJson:verifyJson);}}class hG implements gG{final Directory ZE;hG(this.ZE);pE RX(String A){var B=i(ZE.path,A);return new iM(new File(B));}Future create(){return ZE.create(recursive:true);}Future delete(){return ZE.delete(recursive:true);}Future<bool> exists(){return ZE.exists();}gG get parent=>new hG(ZE.parent);String get path=>ZE.path;}class OT extends WF{gG get p=>new hG(Directory.current);}final aT=zT;Future<File> bT(File B,dynamic G,Future<File> I(File file,dynamic content),{bool verifyJson: false})async{final C=await Directory.current.createTemp();final J=JJ(B.path);var A=new File("${C.path}${aT}${J}");A=await I(A,G);var D=true;if(verifyJson){final K=await A.readAsString();try {JSON.decode(K);}on FormatException catch (N,S){D=false;xI.lC("Couldn't parse JSON after trying to write ${B.path}",N,S);}}if(D){A=await A.rename(B.absolute.path);C.delete();return A;}else{xI.lC("${B.path} wasn't saved, the original will be preserved");return B;}}Future<File> cT(File B,String A,{bool verifyJson: false})async{return bT(B,A,(File C,A)=>C.writeAsString(A,flush:true),verifyJson:verifyJson);}class qE{Map wa;Map get zX=>wa;String name;String version;String description;String AE;Map<String,dynamic> gB={};Map<String,Map<String,dynamic>> fB={};List<String> BG=[] ;qE();factory qE.BZ(Map<String,dynamic> B){var A=new qE();A.wa=B;A.name=B["name"];A.version=B["version"];A.description=B["description"];A.AE=B["main"];A.gB=B["engines"] as Map<String,dynamic>;A.fB=B["configs"] as Map<String,Map<String,dynamic>>;A.BG=B["getDependencies"] as List<String>;return A;}void tL(){if(name==null){throw new Exception("DSLink Name is required.");}if(AE==null){throw new Exception("DSLink Main Script is required.");}}Map jL(){tL();var A=new Map<String,dynamic>.from(wa!=null?wa:{});A["name"]=name;A["version"]=version;A["description"]=description;A["main"]=AE;A["engines"]=gB;A["configs"]=fB;A["getDependencies"]=BG;for(var B in A.keys.toList()){if(A[B]==null){A.remove(B);}}return A;}}typedef dynamic mM();LB aF;const bool dT=identical(1,1.0);bool bF(PD B,String A,[bool D=false]){if(!dT){bool C=new bool.fromEnvironment(A,defaultValue:null);if(C!=null){return C;}}if(B.zone[A] is bool){return B.zone[A];}return D;}LB get xI{if(aF!=null){return aF;}rE=true;aF=new LB("DSA");aF.cQ.listen((A){List<String> D=A.message.split("\n");bool G=bF(A,"dsa.logger.inline_errors",true);bool I=bF(A,"dsa.logger.sequence",false);if(G){if(A.error!=null){D.addAll(A.error.toString().split("\n"));}if(A.stackTrace!=null){D.addAll(A.stackTrace.toString().split("\n").where((J)=>J.isNotEmpty).toList());}}String C=A.cL;if(A.zone["dsa.logger.name"] is String){C=A.zone["dsa.logger.name"];}bool K=bF(A,"dsa.logger.show_timestamps",false);if(!bF(A,"dsa.logger.show_name",true)){C=null;}for(String N in D){String B="";if(I){B+= "[${A.nQ}]";}if(K){B+= "[${A.xQ}]";}B+= "[${A.level.name}]";if(C!=null){B+= "[${C}]";}B+= " ";B+= N;if(bF(A,"dsa.logger.print",true)){print(B);}}if(!G){if(A.error!=null){print(A.error);}if(A.stackTrace!=null){print(A.stackTrace);}}});eT(const String.fromEnvironment("dsa.logger.default_level",defaultValue:"INFO"));return aF;}void eT(String A){A=A.trim().toUpperCase();if(A=="DEBUG"){A="ALL";}Map<String,Z> C={};for(var B in Z.xT){C[B.name]=B;}var B=C[A];if(B!=null){xI.level=B;}}class fT{}abstract class yI{void JL();}class nM extends yI{final mM function;nM(this.function);void JL(){if(function!=null){function();}}}class gT{static yI hT(A,I()){Duration B;if(A is Duration){B=A;}else if(A is int){B=new Duration(milliseconds:A);}else if(A is fT){B=A.duration;}else{throw new Exception("Invalid Interval: ${A}");}mM C;Timer D;bool G=false;C=()async{await I();if(!G){new Timer(B,C);}};D=new Timer(B,C);return new nM((){if(D!=null){D.cancel();}G=true;});}}class iT{}class jT extends Stream implements StreamSink{}final eN=new RegExp(r"\r\n?|\n");class iJ extends wE{int get line=>xa;int xa=0;int get column=>ya;int ya=0;sD get state=>new fN(this,position,line,column);bool get za=>c(-1)==LM&&c()==ZI;set position(int A){var C=position;super.position=A;if(A>C){var B=Ab(string.substring(C,A));xa+= B.length;if(B.isEmpty){ya+= A-C;}else{ya=A-B.last.end;}}else{var B=Ab(string.substring(A,C));if(za)B.removeLast();xa-= B.length;if(B.isEmpty){ya-= C-A;}else{ya=A-string.lastIndexOf(eN,A)-1;}}}iJ(String A,{sourceUrl,int position}):super(A,sourceUrl:sourceUrl,position:position);int Y(){var A=super.Y();Bb(A);return A;}void Bb(int A){if(A==ZI||(A==LM&&c()!=ZI)){xa+= 1;ya=0;}else{ya+= 1;}}bool h(Pattern B){if(!super.h(B))return false;var A=Ab(zD[0]);xa+= A.length;if(A.isEmpty){ya+= zD[0].length;}else{ya=zD[0].length-A.last.end;}return true;}List<Match> Ab(String B){var A=eN.allMatches(B).toList();if(za)A.removeLast();return A;}}class fN implements sD{final iJ Cb;final int position;final int line;final int column;fN(this.Cb,this.position,this.line,this.column);}const int DE=0x7fffffff;abstract class pD<W>{}class WG<W> implements pD<W>{const WG();bool iC(W A,W B)=>A==B;int jC(W A)=>A.hashCode;bool xH(Object A)=>true;}class XG<W> implements pD<Iterable<W>>{final pD<W> Db;const XG([pD<W> A=const WG()]):Db=A;bool iC(Iterable<W> A,Iterable<W> B){if(identical(A,B))return true;if(A==null||B==null)return false;var C=A.iterator;var D=B.iterator;while(true){bool G=C.moveNext();if(G!=D.moveNext())return false;if(!G)return true;if(!Db.iC(C.current,D.current))return false;}}int jC(Iterable<W> B){int A=0;for(W C in B){int D=Db.jC(C);A=(A+D)&DE;A=(A+(A<<10))&DE;A^= (A>>6);}A=(A+(A<<3))&DE;A^= (A>>11);A=(A+(A<<15))&DE;return A;}bool xH(Object A)=>A is Iterable<W>;}abstract class cI<W,DC extends Iterable<W>> implements pD<DC>{final pD<W> Db;const cI(this.Db);bool iC(DC D,DC G){if(identical(D,G))return true;if(D==null||G==null)return false;HashMap<W,int> C=new HashMap(equals:Db.iC,hashCode:Db.jC,isValidKey:Db.xH);int I=0;for(var B in D){int A=C[B];if(A==null)A=0;C[B]=A+1;I++ ;}for(var B in G){int A=C[B];if(A==null||A==0)return false;C[B]=A-1;I-- ;}return I==0;}int jC(DC B){int A=0;for(W C in B){int D=Db.jC(C);A=(A+D)&DE;}A=(A+(A<<3))&DE;A^= (A>>11);A=(A+(A<<15))&DE;return A;}}class YG<W> extends cI<W,Iterable<W>>{const YG([pD<W> A=const WG()]):super(A);bool xH(Object A)=>A is Iterable<W>;}class dI<W> extends cI<W,Set<W>>{const dI([pD<W> A=const WG()]):super(A);bool xH(Object A)=>A is Set<W>;}class qG extends gJ{String get source=>super.source;Uri get k=>M.k;qG(String A,MB B,String C):super(A,B,C);}const int eJ=10;const int RU=13;class ME{final Uri qL;final Eb=<int>[0];final Uint32List Fb;int get length=>Fb.length;int get MF=>Eb.length;int Gb;ME(String A,{url}):this.OZ(A.runes,url:url);ME.OZ(Iterable<int> D,{url}):qL=url is String?Uri.parse(url):url,Fb=new Uint32List.fromList(D.toList()){for(var A=0;A<Fb.length;A++ ){var B=Fb[A];if(B==RU){var C=A+1;if(C>=Fb.length||Fb[C]!=eJ)B=eJ;}if(B==eJ)Eb.add(A+1);}}DB M(int B,[int A]){if(A==null)A=length-1;return new UD(this,B,A);}rD location(int A)=>new rD.PZ(this,A);int tH(int A){if(A<0){throw new RangeError("Offset may not be negative, was ${A}.");}else if(A>length){throw new RangeError("Offset ${A} must not be greater than the number " "of characters in the file, ${length}.");}if(A<Eb.first)return -1;if(A>=Eb.last)return Eb.length-1;if(Hb(A))return Gb;Gb=Ib(A)-1;return Gb;}bool Hb(int A){if(Gb==null)return false;if(A<Eb[Gb])return false;if(Gb>=Eb.length-1||A<Eb[Gb+1]){return true;}if(Gb>=Eb.length-2||A<Eb[Gb+2]){Gb++ ;return true;}return false;}int Ib(int D){int A=0;int B=Eb.length-1;while(A<B){var C=A+((B-A)~/2);if(Eb[C]>D){B=C;}else{A=C+1;}}return B;}int SL(int A,{int line}){if(A<0){throw new RangeError("Offset may not be negative, was ${A}.");}else if(A>length){throw new RangeError("Offset ${A} must be not be greater than the " "number of characters in the file, ${length}.");}if(line==null){line=tH(A);}else if(line<0){throw new RangeError("Line may not be negative, was ${line}.");}else if(line>=MF){throw new RangeError("Line ${line} must be less than the number of " "lines in the file, ${MF}.");}var B=Eb[line];if(B>A){throw new RangeError("Line ${line} comes after offset ${A}.");}return A-B;}int FQ(int A,[int B]){if(B==null)B=0;if(A<0){throw new RangeError("Line may not be negative, was ${A}.");}else if(A>=MF){throw new RangeError("Line ${A} must be less than the number of " "lines in the file, ${MF}.");}else if(B<0){throw new RangeError("Column may not be negative, was ${B}.");}var C=Eb[A]+B;if(C>length||(A+1<MF&&C>=Eb[A+1])){throw new RangeError("Line ${A} doesn't have ${B} columns.");}return C;}String HQ(int A,[int B])=>new String.fromCharCodes(Fb.sublist(A,B));}class rD extends SU implements KC{final ME file;final int offset;Uri get k=>file.qL;int get line=>file.tH(offset);int get column=>file.SL(offset);rD.PZ(this.file,this.offset){if(offset<0){throw new RangeError("Offset may not be negative, was ${offset}.");}else if(offset>file.length){throw new RangeError("Offset ${offset} must not be greater than the number " "of characters in the file, ${file.length}.");}}DB kB()=>new UD(file,offset,offset);}abstract class DB implements hJ{}class UD extends dN implements DB{final ME file;final int Jb;final int Kb;Uri get k=>file.qL;int get length=>Kb-Jb;rD get start=>new rD.PZ(file,Jb);rD get end=>new rD.PZ(file,Kb);String get text=>file.HQ(Jb,Kb);String get context=>file.HQ(file.FQ(start.line),end.line==file.MF-1?null:file.FQ(end.line+1));UD(this.file,this.Jb,this.Kb){if(Kb<Jb){throw new ArgumentError('End ${Kb} must come after start ${Jb}.');}else if(Kb>file.length){throw new RangeError("End ${Kb} must not be greater than the number " "of characters in the file, ${file.length}.");}else if(Jb<0){throw new RangeError("Start may not be negative, was ${Jb}.");}}int compareTo(MB A){if(A is!UD)return super.compareTo(A);UD B=A;var C=Jb.compareTo(B.Jb);return C==0?Kb.compareTo(B.Kb):C;}bool operator==(A){if(A is!DB)return super==A;if(A is!UD){return super==A&&k==A.k;}return Jb==A.Jb&&Kb==A.Kb&&k==A.k;}int get hashCode=>super.hashCode;DB expand(DB A){if(k!=A.k){throw new ArgumentError("Source URLs \"${k}\" and " " \"${A.k}\" don't match.");}if(A is UD){var B=UI.min(this.Jb,A.Jb);var C=UI.max(this.Kb,A.Kb);return new UD(file,B,C);}else{var B=UI.min(this.Jb,A.start.offset);var C=UI.max(this.Kb,A.end.offset);return new UD(file,B,C);}}}class cF implements Pattern{final String pattern;final eB context;final bool recursive;final XB Lb;BJ Mb;bool get Nb{if(Ob==null){Ob=context.isAbsolute(context.current);}return Ob;}bool Ob;bool get Pb{if(Qb==null){Qb=Lb.XE;}return Qb;}bool Qb;bool get Rb{if(Sb==null){Sb=Lb.FF;}return Sb;}bool Sb;cF(String A,{eB context,bool recursive: false}):this.CZ(A,context==null?IC:context,recursive);cF.CZ(String A,eB B,bool C):pattern=A,context=B,recursive=C,Lb=new oM(A+(C?"{,/**}":""),B).wB();Stream<FileSystemEntity> list({String root,bool followLinks: true}){if(context.O!=uM){throw new StateError("Can't list glob \"${this}\"; it matches " "${context.O} paths, but this platform uses ${uM} paths.");}if(Mb==null)Mb=new BJ(Lb);return Mb.list(root:root,followLinks:followLinks);}bool NB(String A)=>matchAsPrefix(A)!=null;Match matchAsPrefix(String A,[int B=0]){if(B!=0)return null;if(Pb&&(Nb||context.isAbsolute(A))){var C=context.ID(context.absolute(A));if(Lb.NB(GJ(context,C))){return new EJ(A,this);}}if(Rb){var D=context.gL(A);if(Lb.NB(GJ(context,D))){return new EJ(A,this);}}return null;}Iterable<Match> allMatches(String B,[int C=0]){var A=matchAsPrefix(B,C);return A==null?[] :[A];}String toString()=>pattern;}const kT=0x2F;abstract class XB{RegExp Tb;final bool XE=false;final bool FF=true;qB xD()=>new qB([new cB([this])]);bool NB(String A){if(Tb==null)Tb=new RegExp('^${Ub()}\$');return Tb.hasMatch(A);}String Ub();}class cB extends XB{final List<XB> q;bool get XE=>q.first.XE;bool get FF=>q.first.FF;cB(Iterable<XB> A):q=A.toList();qB xD(){if(q.isEmpty)return new qB([this]);var D=q.first.xD().GC.map((B)=>B.q);for(var C in q.skip(1)){var G=C.xD().GC;D=D.expand((B){return G.map((I){return B.toList()..addAll(I.q);});});}return new qB(D.map((B){return new cB(B.fold([] ,(A,C){if(A.isEmpty||A.last is!xB||C is!xB){return A..add(C);}A[A.length-1]=new xB(A.last.text+C.text);return A;}));}));}List<cB> split(eB D){var J=[] ;var B;G(C){if(B==null)B=[] ;B.add(C);}I(){if(B==null)return;J.add(new cB(B));B=null;}for(var C in q){if(C is!xB||!C.text.contains('/')){G(C);continue;}var K=C.text;if(D.O==s.SD)K=K.replaceAll("/","\\");var A=D.split(K);if(D.isAbsolute(A.first)){if(J.isEmpty&&B==null){var N=A.first;if(D.O==s.SD){N=N.replaceAll("\\","/");}G(new xB(N));}I();A=A.skip(1);if(A.isEmpty)continue;}for(var S in A.take(A.length-1)){G(new xB(S));I();}G(new xB(A.last));if(C.text.endsWith('/'))I();}I();return J;}String Ub()=>q.map((A)=>A.Ub()).join();bool operator==(Object A)=>A is cB&&const XG().iC(q,A.q);int get hashCode=>const XG().jC(q);String toString()=>q.join();}class zI extends XB{zI();String Ub()=>'[^/]*';bool operator==(Object A)=>A is zI;int get hashCode=>0;String toString()=>'*';}class lG extends XB{final eB Vb;lG(this.Vb);String Ub(){var A=new StringBuffer()..write(r'(?!^(?:\.\./|');if(Vb.O==s.FN){A.write(r'/');}else if(Vb.O==s.SD){A.write(r'//|[A-Za-z]:/');}else{assert(Vb.O==s.JE);A.write(r'[a-zA-Z][-+.a-zA-Z\d]*://|/');}A.write(r'))[^]*');return A.toString();}bool operator==(Object A)=>A is lG;int get hashCode=>1;String toString()=>'**';}class AJ extends XB{AJ();String Ub()=>'[^/]';bool operator==(Object A)=>A is AJ;int get hashCode=>2;String toString()=>'?';}class dF extends XB{final Set<OD> mD;final bool negated;dF(Iterable<OD> A,{this.negated}):mD=A.toSet();qB xD(){if(negated||mD.any((A)=>!A.WL)){return super.xD();}return new qB(mD.map((A){return new cB([new xB(new String.fromCharCodes([A.min]))]);}));}String Ub(){var A=new StringBuffer();var C=mD.any((B)=>B.contains(kT));if(!negated&&C){A.write('(?!/)');}A.write('[');if(negated){A.write('^');if(!C)A.write('/');}for(var B in mD){var D=new String.fromCharCodes([B.min]);A.write(FJ(D));if(B.WL)continue;A.write('-');A.write(FJ(new String.fromCharCodes([B.max])));}A.write(']');return A.toString();}bool operator==(Object A){if(A is!dF)return false;if((A as dF).negated!=negated)return false;return const dI().iC(mD,(A as dF).mD);}int get hashCode=>(negated?1:3)*const dI().jC(mD);String toString(){var A=new StringBuffer()..write('[');for(var B in mD){A.writeCharCode(B.min);if(B.WL)continue;A.write('-');A.writeCharCode(B.max);}A.write(']');return A.toString();}}class qB extends XB{final List<cB> GC;bool get XE=>GC.any((A)=>A.XE);bool get FF=>GC.any((A)=>A.FF);qB(Iterable<cB> A):GC=A.toList();qB xD()=>new qB(GC.expand((A)=>A.xD().GC));String Ub()=>'(?:${GC.map((A)=>A.Ub()).join("|")})';bool operator==(Object A)=>A is qB&&const YG().iC(GC,A.GC);int get hashCode=>const YG().jC(GC);String toString()=>'{${GC.join(',')}}';}class xB extends XB{final String text;final eB Vb;bool get XE{var A=Vb.O==s.SD?text.replaceAll('/','\\'):text;return Vb.isAbsolute(A);}bool get FF=>!XE;xB(this.text,[this.Vb]);String Ub()=>FJ(text);bool operator==(Object A)=>A is xB&&A.text==text;int get hashCode=>text.hashCode;String toString()=>text;}const lT=2;const mT=3;class BJ{final Wb=new Map<String,yC>();bool Xb;BJ(XB G){var I=G.xD();for(var J in I.GC){var A=J.split(IC);var B=A.first.q.first;var C='.';if(B is xB){var D=B.text;if(Platform.isWindows)D.replaceAll("/","\\");if(KJ(D)){assert(A.first.q.length==1);C=B.text;A.removeAt(0);}}Yb(C,A);}Xb=Zb();}void Yb(String C,List<XB> G){var A=Wb[C];for(var D=0;D<G.length;D++ ){var B=G[D];var I=B.q.any((K)=>K is lG);var J=D==G.length-1;if(A!=null){if(A.wH||I){A.WQ();A.uK(CJ(G.sublist(D)));return;}else if(J){A.uK(B);}else{if(!A.BB.containsKey(B)){A.BB[B]=new yC();}A=A.BB[B];}}else if(I){Wb[C]=new yC.DZ(CJ(G.sublist(D)));return;}else if(J){Wb[C]=new yC()..uK(B);}else{Wb[C]=new yC();Wb[C].BB[B]=new yC();A=Wb[C].BB[B];}}}bool Zb(){if(Wb.length>1&&Wb.containsKey('.'))return true;return Wb.values.any((A)=>A.YP);}Stream<FileSystemEntity> list({String root,bool followLinks: true}){if(root==null)root='.';var A=new DJ();for(var B in Wb.keys){var G=B=='.'?root:B;A.add(Wb[B].list(G,followLinks:followLinks));}A.CL();if(!Xb)return A.stream;var C=new Set();return A.stream.where((D){if(C.contains(D.path))return false;C.add(D.path);return true;});}}class yC{Map<cB,yC> BB;qB ab;bool get wH=>BB==null;bool get bb{if(ab!=null)return false;return BB.keys.every((A)=>A.q.length==1&&A.q.first is xB);}bool get YP{if(wH)return false;if(BB.length>1&&BB.keys.any((A)=>A.q.length>1||A.q.single is!xB)){return true;}return BB.values.any((B)=>B.YP);}yC():BB=new Map<cB,yC>(),ab=null;yC.DZ(cB A):BB=null,ab=new qB([A]);void WQ(){if(wH)return;ab=new qB(BB.keys.map((A){var B=BB[A];B.WQ();return CJ([A,B.ab]);}));BB=null;}void uK(cB A){if(ab==null){ab=new qB([A]);}else{ab.GC.add(A);}}Stream<FileSystemEntity> list(String B,{bool followLinks: true}){if(wH){return new Directory(B).list(recursive:true,followLinks:followLinks).where((C)=>cb(C.path.substring(B.length+1)));}var A=new DJ();if(bb){BB.forEach((G,I){A.add(I.list(i(B,G.q.single.text),followLinks:followLinks));});A.CL();return A.stream;}var D=new StreamController(sync:true);A.add(D.stream);new Directory(B).list(followLinks:followLinks).listen((C){var J=C.path.substring(B.length+1);if(cb(J))D.add(C);BB.forEach((G,I){if(C is!Directory)return;if(!G.NB(J))return;var N=I.list(i(B,J),followLinks:followLinks).handleError((S){},test:(K){return K is FileSystemException&&(K.osError.errorCode==lT||K.osError.errorCode==mT);});A.add(N);});},onError:D.addError,onDone:D.close);A.CL();return A.stream;}bool cb(String A){if(ab==null)return false;return ab.NB(GJ(IC,A));}String toString()=>"(${ab}) ${BB}";}cB CJ(Iterable<XB> C){var B=C.toList();var A=[B.removeAt(0)];for(var D in B){A.add(new xB('/'));A.add(D);}return new cB(A);}const nT=0x2D;const oT=0x2F;class oM{final jF db;final eB eb;oM(String A,this.eb):db=new jF(A);cB wB()=>fb();cB fb({bool inOptions: false}){var A=[] ;if(db.vC){db.error('expected a glob.',position:0,length:0);}while(!db.vC){if(inOptions&&(db.NB(',')||db.NB('}')))break;A.add(gb(inOptions:inOptions));}return new cB(A);}XB gb({bool inOptions: false}){var A=hb();if(A!=null)return A;var B=ib();if(B!=null)return B;var C=jb();if(C!=null)return C;var D=kb();if(D!=null)return D;return lb(inOptions:inOptions);}XB hb(){if(!db.h('*'))return null;return db.h('*')?new lG(eb):new zI();}XB ib(){if(!db.h('?'))return null;return new AJ();}XB jb(){if(!db.h('['))return null;if(db.NB(']'))db.error('unexpected "]".');var C=db.h('!')||db.h('^');D(){var A=db.Y();if(C||A!=oT)return A;db.error('"/" may not be used in a range.',position:db.position-1);}var B=[] ;while(!db.h(']')){var G=db.position;db.h('\\');var A=D();if(db.h('-')){if(db.NB(']')){B.add(new OD.EZ(A));B.add(new OD.EZ(nT));continue;}db.h('\\');var I=D();if(I<A){db.error("Range out of order.",position:G,length:db.position-G);}B.add(new OD(A,I));}else{B.add(new OD.EZ(A));}}return new dF(B,negated:C);}XB kb(){if(!db.h('{'))return null;if(db.NB('}'))db.error('unexpected "}".');var A=[] ;do{A.add(fb(inOptions:true));}while(db.h(','));if(A.length==1)db.JF(',');db.JF('}');return new qB(A);}XB lb({bool inOptions: false}){var B=new RegExp(inOptions?r'[^*{[?\\}\],()]*':r'[^*{[?\\}\]()]*');db.h(B);var A=new StringBuffer()..write(db.zD[0]);while(db.h('\\')){A.writeCharCode(db.Y());db.h(B);A.write(db.zD[0]);}for(var C in const[']','(',')']){if(db.NB(C))db.error('unexpected "${C}"');}if(!inOptions&&db.NB('}'))db.error('unexpected "}"');return new xB(A.toString(),eb);}}class DJ<DC>{Stream<DC> get stream=>mb.stream;final StreamController<DC> mb;final nb=new Map<Stream<DC>,StreamSubscription<DC>>();bool ob=false;DJ():mb=new StreamController<DC>(sync:true);void add(Stream<DC> A){if(nb.containsKey(A))return;nb[A]=A.listen(mb.add,onError:mb.addError,onDone:()=>remove(A));}void remove(Stream<DC> B){var A=nb.remove(B);if(A!=null)A.cancel();if(ob&&nb.isEmpty)close();}void close(){for(var A in nb.values){A.cancel();}nb.clear();mb.close();}void CL(){if(nb.isEmpty)close();ob=true;}}class OD{final int min;final int max;bool get WL=>min==max;OD(this.min,this.max);OD.EZ(int A):this(A,A);bool contains(int A)=>A>=min&&A<=max;bool operator==(Object A)=>A is OD&&A.min==min&&A.max==max;int get hashCode=>3*min+7*max;}class EJ implements Match{final String input;final Pattern pattern;final int start=0;int get end=>input.length;int get groupCount=>0;EJ(this.input,this.pattern);String operator[](int A)=>this.group(A);String group(int A){if(A!=0)throw new RangeError.range(A,0,0);return input;}List<String> groups(List<int> A)=>A.map((B)=>group(B)).toList();}final pT=new RegExp(r"[+*?{}|[\]\\().^$-]");String FJ(String A)=>A.replaceAllMapped(pT,(B)=>"\\${B[0]}");String GJ(eB B,String A){if(B.O==s.SD)return A.replaceAll('\\','/');if(B.O==s.JE)return Uri.decodeFull(A);return A;}const String NT='Success!';class RC{final bool nB;final String message;RC.zY(this.message):nB=true;RC.AZ(this.message):nB=false;}abstract class RD extends s{String get kC;bool pH(String A);bool f(int A);bool NF(String A);int wC(String A,{bool withDrive: false});String GQ(String A){var B=wC(A);if(B>0)return A.substring(0,B);return dB(A)?A[0]:null;}bool dB(String A);String KG(Uri A);bool oH(int A,int B)=>A==B;bool fL(String A,String B)=>A==B;int ZP(int A)=>A;String aP(String A)=>A;}class UU extends jF{}class sD{}class KC implements Comparable<KC>{}abstract class SU implements KC{String get UY{var A=k==null?'unknown source':k;return '${A}:${line+1}:${column+1}';}int mP(KC A){if(k!=A.k){throw new ArgumentError("Source URLs \"${k}\" and " "\"${A.k}\" don't match.");}return (offset-A.offset).abs();}MB kB()=>new MB(this,this,"");int compareTo(KC A){if(k!=A.k){throw new ArgumentError("Source URLs \"${k}\" and " "\"${A.k}\" don't match.");}return offset-A.offset;}bool operator==(A)=>A is KC&&k==A.k&&offset==A.offset;int get hashCode=>k.hashCode+offset;String toString()=>'<${runtimeType}: ${offset} ${UY}>';}bool rE=false;Z qT=Z.rM;Z pM=Z.IJ;class LB{final String name;String get DQ=>(parent==null||parent.name=='')?name:'${parent.DQ}.${name}';final LB parent;Z pb;final Map<String,LB> qb;final Map<String,LB> BB;StreamController<PD> rb;factory LB(String A){return rT.putIfAbsent(A,()=>new LB.FZ(A));}factory LB.FZ(String A){if(A.startsWith('.')){throw new ArgumentError("name shouldn't start with a '.'");}int B=A.lastIndexOf('.');LB C;String D;if(B==-1){if(A!='')C=new LB('');D=A;}else{C=new LB(A.substring(0,B));D=A.substring(B+1);}return new LB.GZ(D,C,new Map<String,LB>());}LB.GZ(this.name,this.parent,Map<String,LB> A):this.qb=A,this.BB=new UnmodifiableMapView(A){if(parent!=null)parent.qb[name]=this;}Z get level{if(rE){if(pb!=null)return pb;if(parent!=null)return parent.level;}return pM;}set level(Z A){if(rE&&parent!=null){pb=A;}else{if(parent!=null){throw new UnsupportedError('Please set "hierarchicalLoggingEnabled" to true if you want to ' 'change the level on a non-root logger.');}pM=A;}}Stream<PD> get cQ=>sb();bool PQ(Z A)=>(A>=level);void AI(Z B,A,[Object J,StackTrace G,Zone I]){Object K;if(PQ(B)){if(A is Function){A=A();}String C;if(A is String){C=A;}else{C=A.toString();K=A;}if(G==null&&B>=qT){G=StackTrace.current;J??= 'autogenerated stack trace for ${B} ${C}';}if(I==null)I=Zone.current;var N=new PD(B,C,DQ,J,G,I,K);if(rE){var D=this;while(D!=null){D.tb(N);D=D.parent;}}else{qM.tb(N);}}}void HD(A,[Object B,StackTrace C])=>AI(Z.HJ,A,B,C);void FC(A,[Object B,StackTrace C])=>AI(Z.IJ,A,B,C);void oD(A,[Object B,StackTrace C])=>AI(Z.sM,A,B,C);void lC(A,[Object B,StackTrace C])=>AI(Z.tM,A,B,C);Stream<PD> sb(){if(rE||parent==null){if(rb==null){rb=new StreamController<PD>.broadcast(sync:true);}return rb.stream;}else{return qM.sb();}}void tb(PD A){if(rb!=null){rb.add(A);}}static final LB qM=new LB('');static final Map<String,LB> rT=<String,LB>{};}class Z implements Comparable<Z>{final String name;final int value;const Z(this.name,this.value);static const Z sT=const Z('ALL',0);static const Z rM=const Z('OFF',2000);static const Z tT=const Z('FINEST',300);static const Z uT=const Z('FINER',400);static const Z HJ=const Z('FINE',500);static const Z vT=const Z('CONFIG',700);static const Z IJ=const Z('INFO',800);static const Z sM=const Z('WARNING',900);static const Z tM=const Z('SEVERE',1000);static const Z wT=const Z('SHOUT',1200);static const List<Z> xT=const[sT,tT,uT,HJ,vT,IJ,sM,tM,wT,rM];bool operator==(Object A)=>A is Z&&value==A.value;bool operator<(Z A)=>value<A.value;bool operator<=(Z A)=>value<=A.value;bool operator>(Z A)=>value>A.value;bool operator>=(Z A)=>value>=A.value;int compareTo(Z A)=>value-A.value;int get hashCode=>value;String toString()=>name;}class PD{final Z level;final String message;final Object LY;final String cL;final DateTime xQ;final int nQ;static int yT=0;final Object error;final StackTrace stackTrace;final Zone zone;PD(this.level,this.message,this.cL,[this.error,this.stackTrace,this.zone,this.LY]):xQ=new DateTime.now(),nQ=PD.yT++ ;String toString()=>'[${level.name}] ${cL}: ${message}';}class IE{RD O;String p;bool dB;List<String> g;List<String> bB;String get NL=>ub()[1];bool get isAbsolute=>p!=null;factory IE.JZ(String A,RD D){var I=D.GQ(A);var K=D.dB(A);if(I!=null)A=A.substring(I.length);var J=<String>[] ;var G=<String>[] ;var B=0;if(A.isNotEmpty&&D.f(A.codeUnitAt(0))){G.add(A[0]);B=1;}else{G.add('');}for(var C=B;C<A.length;C++ ){if(D.f(A.codeUnitAt(C))){J.add(A.substring(B,C));G.add(A[C]);B=C+1;}}if(B<A.length){J.add(A.substring(B));G.add('');}return new IE.KZ(D,I,K,J,G);}IE.KZ(this.O,this.p,this.dB,this.g,this.bB);String get vK{var A=this.SX();A.MG();if(A.g.isEmpty)return p==null?'':p;return A.g.last;}String get wK=>ub()[0];void MG(){while(!g.isEmpty&&g.last==''){g.removeLast();bB.removeLast();}if(bB.length>0)bB[bB.length-1]='';}void ID({bool canonicalize: false}){var C=0;var A=<String>[] ;for(var B in g){if(B=='.'||B==''){}else if(B=='..'){if(A.length>0){A.removeLast();}else{C++ ;}}else{A.add(canonicalize?O.aP(B):B);}}if(!isAbsolute){A.insertAll(0,new List.filled(C,'..'));}if(A.length==0&&!isAbsolute){A.add('.');}var D=new List<String>.generate(A.length,(G)=>O.kC,growable:true);D.insert(0,isAbsolute&&A.length>0&&O.NF(p)?O.kC:'');g=A;bB=D;if(p!=null&&O==s.SD){if(canonicalize)p=p.toLowerCase();p=p.replaceAll('/','\\');}MG();}String toString(){var A=new StringBuffer();if(p!=null)A.write(p);for(var B=0;B<g.length;B++ ){A.write(bB[B]);A.write(g[B]);}A.write(bB.last);return A.toString();}List<String> ub(){var A=g.lastWhere((C)=>C!='',orElse:()=>null);if(A==null)return ['',''];if(A=='..')return ['..',''];var B=A.lastIndexOf('.');if(B<=0)return [A,''];return [A.substring(0,B),A.substring(B)];}IE SX()=>new IE.KZ(O,p,dB,new List.from(g),new List.from(bB));}final eB IC=EU();s get uM=>IC.O;String get vM{var B=Uri.base;if(B==wM)return eF;wM=B;if(s.PJ==s.JE){eF=B.resolve('.').toString();return eF;}else{var A=B.toFilePath();var C=A.length-1;assert(A[C]=='/'||A[C]=='\\');eF=C==0?A:A.substring(0,C);return eF;}}Uri wM;String eF;String get zT=>IC.kC;String JJ(String A)=>IC.vK(A);String AU(String A)=>IC.wK(A);String BU(String A)=>IC.WX(A);String xM(String A)=>IC.NL(A);bool KJ(String A)=>IC.isAbsolute(A);String i(String A,[String B,String C,String D,String G,String I,String J,String K])=>IC.join(A,B,C,D,G,I,J,K);String CU(String A)=>IC.ID(A);String DU(A)=>IC.OY(A);class nG implements Exception{String message;nG(this.message);String toString()=>"PathException: ${message}";}class RJ extends mC{final Function vb;RJ(A,this.vb):super(A);EB n(SB B){var A=wb.n(B);if(A.jD){return A.nB(vb(A.value));}else{return A;}}bool hB(P A){return A is RJ&&super.hB(A)&&vb==A.vb;}}class LN extends mC{P xb;P yb;LN(A,this.xb,this.yb):super(A);EB n(SB C){var A=C;do{A=xb.n(A);}while((A as EB).jD);var B=wb.n(A);if(B.bE){return B;}A=B;do{A=yb.n(A);}while((A as EB).jD);return A.nB(B.value);}List<P> get BB=>[wb,xb,yb];void replace(P A,P B){super.replace(A,B);if(xb==A){xb=B;}if(yb==A){yb=B;}}}class QN extends mC{QN(A):super(A);EB n(SB A){var B=wb.n(A);if(B.jD){var C=A.buffer is String?A.buffer.substring(A.position,B.position):A.buffer.sublist(A.position,B.position);return B.nB(C);}else{return B;}}}class VN extends mC{VN(A):super(A);EB n(SB B){var A=wb.n(B);if(A.jD){var C=new KE(A.value,B.buffer,B.position,A.position);return A.nB(C);}else{return A;}}}class tE extends P{final TD zb;final String Ac;tE(this.zb,this.Ac);EB n(SB A){var C=A.buffer;var B=A.position;if(B<C.length&&zb.test(C.codeUnitAt(B))){return A.nB(C[B],B+1);}return A.hD(Ac);}String toString()=>'${super.toString()}[${Ac}]';bool hB(P A){return A is tE&&super.hB(A)&&zb==A.zb&&Ac==A.Ac;}}abstract class TD{}class NN implements TD{final TD gQ;NN(this.gQ);bool test(int A)=>!gQ.test(A);}TD JU(Iterable<uE> K){var I=new List.from(K,growable:false);I.sort((C,D){return C.start!=D.start?C.start-D.start:C.stop-D.stop;});var A=new List();for(var B in I){if(A.isEmpty){A.add(B);}else{var J=A.last;if(J.stop+1>=B.start){var N=new uE(J.start,B.stop);A[A.length-1]=N;}else{A.add(B);}}}if(A.length==1){return A[0].start==A[0].stop?new dJ(A[0].start):A[0];}else{return new ZN(A.length,A.map((G)=>G.start).toList(growable:false) as List<int>,A.map((G)=>G.stop).toList(growable:false) as List<int>);}}P e(A,[String B]){return new tE(new dJ(iF(A)),B!=null?B:'"${A}" expected');}class dJ implements TD{final int value;const dJ(this.value);bool test(int A)=>identical(this.value,A);}P oG([String A]){return new tE(KU,A!=null?A:'digit expected');}class WN implements TD{const WN();bool test(int A)=>48<=A&&A<=57;}const KU=const WN();P YN(String A,[String B]){return new tE(MU.wB(A).value,B!=null?B:'[${A}] expected');}P LU(){var B=qD().map((A)=>new uE(iF(A),iF(A)));var C=qD().fE(e('-')).fE(qD()).map((A)=>new uE(iF(A[0]),iF(A[2])));var D=C.JG(B).EI().map((A)=>JU(A as Iterable<uE>));return e('^').JD().fE(D).map((A)=>A[0]==null?A[1]:new NN(A[1]));}final MU=LU();class ZN implements TD{final int length;final List<int> sQ;final List<int> tQ;ZN(this.length,this.sQ,this.tQ);bool test(int D){var A=0;var B=length;while(A<B){var C=A+((B-A)>>1);var G=sQ[C]-D;if(G==0){return true;}else if(G<0){A=C+1;}else{B=C;}}return 0<A&&D<=tQ[A-1];}}class uE implements TD{final int start;final int stop;uE(this.start,this.stop);bool test(int A)=>start<=A&&A<=stop;}P NU([String A]){return new tE(OU,A!=null?A:'whitespace expected');}class aN implements TD{const aN();bool test(int A){if(A<256){return A==0x09||A==0x0A||A==0x0B||A==0x0C||A==0x0D||A==0x20||A==0x85||A==0xA0;}else{return A==0x1680||A==0x180E||A==0x2000||A==0x2001||A==0x2002||A==0x2003||A==0x2004||A==0x2005||A==0x2006||A==0x2007||A==0x2008||A==0x2009||A==0x200A||A==0x2028||A==0x2029||A==0x202F||A==0x205F||A==0x3000||A==0xFEFF;}}}const OU=const aN();int iF(A){if(A is num){return A.round();}var B=A.toString();if(B.length!=1){throw new ArgumentError('${B} is not a character');}return B.codeUnitAt(0);}class mC extends P{P wb;mC(this.wb);EB n(SB A){return wb.n(A);}List<P> get BB=>[wb];void replace(P A,P B){super.replace(A,B);if(wb==A){wb=B;}}}class UJ extends mC{final String Ac;UJ(A,this.Ac):super(A);EB n(SB B){var A=wb.n(B);if(A.bE||A.position==A.buffer.length){return A;}return A.hD(Ac,A.position);}String toString()=>'${super.toString()}[${Ac}]';bool hB(P A){return A is UJ&&super.hB(A)&&Ac==A.Ac;}}class PN extends mC{PN(A):super(A);EB n(SB B){var A=wb.n(B);if(A.jD){return B.nB(A.value);}else{return A;}}}class ZJ extends mC{final String Ac;ZJ(A,this.Ac):super(A);EB n(SB A){var B=wb.n(A);if(B.bE){return A.nB(null);}else{return A.hD(Ac);}}String toString()=>'${super.toString()}[${Ac}]';bool hB(P A){return A is ZJ&&super.hB(A)&&Ac==A.Ac;}}class bJ extends mC{final Bc;bJ(A,this.Bc):super(A);EB n(SB A){var B=wb.n(A);if(B.jD){return B;}else{return A.nB(Bc);}}bool hB(P A){return A is bJ&&super.hB(A)&&Bc==A.Bc;}}abstract class cJ extends P{final List<P> Cc;cJ(this.Cc);List<P> get BB=>Cc;void replace(P B,P C){super.replace(B,C);for(var A=0;A<Cc.length;A++ ){if(Cc[A]==B){Cc[A]=C;}}}}class hF extends cJ{factory hF(Iterable<P> A){return new hF.LZ(new List.from(A,growable:false));}hF.LZ(List<P> A):super(A);EB n(SB C){var A;for(var B=0;B<Cc.length;B++ ){A=Cc[B].n(C);if(A.jD){return A;}}return A;}P JG(P A){return new hF(new List()..addAll(Cc)..add(A));}}class LE extends cJ{factory LE(Iterable<P> A){return new LE.MZ(new List.from(A,growable:false));}LE.MZ(List<P> A):super(A);EB n(SB G){var C=G;var D=new List(Cc.length);for(var A=0;A<Cc.length;A++ ){var B=Cc[A].n(C);if(B.bE){return B;}D[A]=B.value;C=B;}return C.nB(D);}P fE(P A){return new LE(new List()..addAll(Cc)..add(A));}}class SB{const SB(this.buffer,this.position);final buffer;final int position;EB nB(B,[int A]){return new ON(buffer,A==null?this.position:A,B);}EB hD(String B,[int A]){return new WJ(buffer,A==null?this.position:A,B);}String toString()=>'Context[${OI()}]';String OI()=>KE.TN(buffer,position);}abstract class EB extends SB{const EB(A,B):super(A,B);bool get jD=>false;bool get bE=>false;get value;String get message;}class ON extends EB{const ON(A,B,this.value):super(A,B);bool get jD=>true;final value;String get message=>null;String toString()=>'Success[${OI()}]: ${value}';}class WJ extends EB{const WJ(A,B,this.message):super(A,B);bool get bE=>true;get value=>throw new RN(this);final String message;String toString()=>'Failure[${OI()}]: ${message}';}class RN extends Error{final WJ hD;RN(this.hD);String toString()=>'${hD.message} at ${hD.OI()}';}abstract class YJ{const YJ();P start();P Q(Function A,[B,C,D,G,I,J]){var K=[B,C,D,G,I,J].takeWhile((N)=>N!=null).toList(growable:false);return new zC(A,K);}P QX({Function start: null,List arguments: const[] }){return Dc(new zC(start!=null?start:this.start,arguments));}P Dc(zC C){var I=new Map();P J(zC C){var A=I[C];if(A==null){var D=[C];A=C.resolve();while(A is zC){if(D.contains(A)){throw new StateError('Recursive references detected: ${D}');}D.add(A);A=A.resolve();}for(var U in D){I[U]=A;}}return A;}var G=[J(C)];var K=new Set.from(G);while(G.isNotEmpty){var N=G.removeLast();for(var B in N.BB){if(B is zC){var S=J(B);N.replace(B,S);B=S;}if(!K.contains(B)){K.add(B);G.add(B);}}}return I[C];}}class XN extends mC{XN(YJ A):super(A.QX());}class zC extends P{final Function function;final List arguments;zC(this.function,this.arguments);P resolve()=>Function.apply(function,arguments);bool operator==(A){if(A is!zC||A.function!=function||A.arguments.length!=arguments.length){return false;}for(var B=0;B<arguments.length;B++ ){var C=arguments[B],D=A.arguments[B];if(C is P&&C is!zC&&D is P&&D is!zC){if(!C.OQ(D)){return false;}}else{if(C!=D){return false;}}}return true;}int get hashCode=>function.hashCode;EB n(SB A)=>throw new UnsupportedError('References cannot be parsed.');}abstract class P{EB n(SB A);EB wB(A){return n(new SB(A,0));}Iterable NB(B){var A=new List();OX().map((C)=>A.add(C)).fE(qD()).JG(qD()).KD().wB(B);return A;}Iterable GY(B){var A=new List();map((C)=>A.add(C)).JG(qD()).KD().wB(B);return A;}P JD([A])=>new bJ(this,A);P KD()=>HI(0,fF);P EI()=>HI(1,fF);P HI(int A,int B){return new MN(this,A,B);}P NI(int A)=>HI(A,A);P fE(P A)=>new LE([this,A]);P operator&(P A)=>this.fE(A);P JG(P A)=>new hF([this,A]);P operator|(P A)=>this.JG(A);P OX()=>new PN(this);P KY([String A])=>new ZJ(this,A);P aQ([String A])=>KY(A).fE(qD()).kD(1);P QL()=>new QN(this);P PC()=>new VN(this);P trim([P A,P B]){if(A==null)A=NU();if(B==null)B=A;return new LN(this,A,B);}P end([String A='end of input expected']){return new UJ(this,A);}P map(Function A)=>new RJ(this,A);P kD(int A){return this.map((List B){return B[A<0?B.length+A:A];});}P NY(List<int> C){return this.map((List B){return C.map((A){return B[A<0?B.length+A:A];}).toList();});}P NG(P B,{bool includeSeparators: true,bool optionalSeparatorAtEnd: false}){var D=new LE([B,this]).KD();var I=new LE(optionalSeparatorAtEnd?[this,D,B.JD(B)]:[this,D]);return I.map((List C){var A=new List();A.add(C[0]);for(var G in C[1]){if(includeSeparators){A.add(G[0]);}A.add(G[1]);}if(includeSeparators&&optionalSeparatorAtEnd&&!identical(C[2],B)){A.add(C[2]);}return A;});}bool OQ(P B,[Set<P> A]){if(A==null){A=new Set();}if(this==B||A.contains(this)){return true;}A.add(this);return runtimeType==B.runtimeType&&hB(B)&&pX(B,A);}bool hB(P A)=>true;bool pX(P D,Set<P> G){var B=BB,C=D.BB;if(B.length!=C.length){return false;}for(var A=0;A<B.length;A++ ){if(!B[A].OQ(C[A],G)){return false;}}return true;}List<P> get BB=>const[] ;void replace(P A,P B){}}P qD([String A='input expected']){return new TJ(A);}class TJ extends P{final String Ac;TJ(this.Ac);EB n(SB A){var B=A.position;var C=A.buffer;return B<C.length?A.nB(C[B],B+1):A.hD(Ac);}bool hB(P A){return A is TJ&&super.hB(A)&&Ac==A.Ac;}}P VJ(A,[String B]){return UN(1,(C)=>A.indexOf(C)>=0,B!=null?B:'any of ${A} expected');}P gF(String A,[String B]){return UN(A.length,(String C)=>A==C,B!=null?B:'${A} expected');}typedef bool SN(_0);P UN(int A,SN B,String C){return new aJ(A,B,C);}class aJ extends P{final int Ec;final SN zb;final String Ac;aJ(this.Ec,this.zb,this.Ac);EB n(SB A){final C=A.position;final B=C+Ec;if(B<=A.buffer.length){var D=A.buffer is String?A.buffer.substring(C,B):A.buffer.sublist(C,B);if(zb(D)){return A.nB(D,B);}}return A.hD(Ac);}String toString()=>'${super.toString()}[${Ac}]';bool hB(P A){return A is aJ&&super.hB(A)&&Ec==A.Ec&&zb==A.zb&&Ac==A.Ac;}}const int fF=-1;abstract class SJ extends mC{final int Fc;final int Gc;SJ(P A,this.Fc,this.Gc):super(A){assert(0<=Fc);assert(Gc==fF||Fc<=Gc);}String toString(){var A=Gc==fF?'*':Gc;return '${super.toString()}[${Fc}..${A}]';}bool hB(P A){return A is SJ&&super.hB(A)&&Fc==A.Fc&&Gc==A.Gc;}}class MN extends SJ{MN(P A,int B,int C):super(A,B,C);EB n(SB D){var B=D;var C=new List();while(C.length<Fc){var A=wb.n(B);if(A.bE){return A;}C.add(A.value);B=A;}while(Gc==fF||C.length<Gc){var A=wb.n(B);if(A.bE){return B.nB(C);}C.add(A.value);B=A;}return B.nB(C);}}class KE{final value;final buffer;final int start;final int stop;const KE(this.value,this.buffer,this.start,this.stop);get input=>buffer is String?buffer.substring(start,stop):buffer.sublist(start,stop);int get length=>stop-start;int get line=>KE.XJ(buffer,start)[0];int get column=>KE.XJ(buffer,start)[1];String toString()=>'Token[${TN(buffer,start)}]: ${value}';bool operator==(A){return A is KE&&value==A.value&&start==A.start&&stop==A.stop;}int get hashCode=>value.hashCode+start.hashCode+stop.hashCode;static P HU()=>IU;static final P IU=e('\n')|(e('\r')&e('\n').JD());static List<int> XJ(String G,int A){var B=1,C=0;for(var D in HU().PC().GY(G)){if(A<D.stop){return [B,A-C+1];}B++ ;C=D.stop;}return [B,A-C+1];}static String TN(A,int B){if(A is String){var C=KE.XJ(A,B);return '${C[0]}:${C[1]}';}else{return '${B}';}}}class GN extends RD{GN();final name='posix';final kC='/';final bB=const['/'];final mQ=new RegExp(r'/');final ZQ=new RegExp(r'[^/]$');final kQ=new RegExp(r'^/');final jQ=null;bool pH(String A)=>A.contains('/');bool f(int A)=>A==aC;bool NF(String A)=>A.isNotEmpty&&!f(A.codeUnitAt(A.length-1));int wC(String A,{bool withDrive: false}){if(A.isNotEmpty&&f(A.codeUnitAt(0)))return 1;return 0;}bool dB(String A)=>false;String KG(Uri A){if(A.scheme==''||A.scheme=='file'){return Uri.decodeComponent(A.path);}throw new ArgumentError("Uri ${A} must have scheme 'file:'.");}}class MM<W> extends Object with ListMixin<W> implements Queue<W>{static const int NM=8;List<W> Hc;int Ic;int Jc;MM([int A]):Ic=0,Jc=0{if(A==null||A<NM){A=NM;}else if(!OM(A)){A=PM(A);}assert(OM(A));Hc=new List<W>(A);}void add(W A){Kc(A);}void addAll(Iterable<W> G){if(G is List){var B=G;int A=B.length;int C=this.length;if(C+A>=Hc.length){Lc(C+A);Hc.setRange(C,C+A,B,0);Jc+= A;}else{int D=Hc.length-Jc;if(A<D){Hc.setRange(Jc,Jc+A,B,0);Jc+= A;}else{int I=A-D;Hc.setRange(Jc,Jc+D,B,0);Hc.setRange(0,I,B,D);Jc=I;}}}else{for(W J in G)Kc(J);}}String toString()=>IterableBase.iterableToFullString(this,"{","}");void addLast(W A){Kc(A);}void addFirst(W A){Ic=(Ic-1)&(Hc.length-1);Hc[Ic]=A;if(Ic==Jc)Mc();}W removeFirst(){if(Ic==Jc)throw new StateError("No element");W A=Hc[Ic];Hc[Ic]=null;Ic=(Ic+1)&(Hc.length-1);return A;}W removeLast(){if(Ic==Jc)throw new StateError("No element");Jc=(Jc-1)&(Hc.length-1);W A=Hc[Jc];Hc[Jc]=null;return A;}int get length=>(Jc-Ic)&(Hc.length-1);void set length(int A){if(A<0)throw new RangeError("Length ${A} may not be negative.");int C=A-length;if(C>=0){if(Hc.length<=A){Lc(A);}Jc=(Jc+C)&(Hc.length-1);return;}int B=Jc+C;if(B>=0){Hc.fillRange(B,Jc,null);}else{B+= Hc.length;Hc.fillRange(0,Jc,null);Hc.fillRange(B,Hc.length,null);}Jc=B;}W operator[](int A){if(A<0||A>=length){throw new RangeError("Index ${A} must be in the range [0..${length}).");}return Hc[(Ic+A)&(Hc.length-1)];}void operator[]=(int A,W B){if(A<0||A>=length){throw new RangeError("Index ${A} must be in the range [0..${length}).");}Hc[(Ic+A)&(Hc.length-1)]=B;}static bool OM(int A)=>(A&(A-1))==0;static int PM(int A){assert(A>0);A=(A<<1)-1;for(;;){int B=A&(A-1);if(B==0)return A;A=B;}}void Kc(W A){Hc[Jc]=A;Jc=(Jc+1)&(Hc.length-1);if(Ic==Jc)Mc();}void Mc(){List<W> A=new List<W>(Hc.length*2);int B=Hc.length-Ic;A.setRange(0,B,Hc,Ic);A.setRange(B,B+Ic,Hc,0);Ic=0;Jc=Hc.length;Hc=A;}int Nc(List<W> A){assert(A.length>=length);if(Ic<=Jc){int C=Jc-Ic;A.setRange(0,C,Hc,Ic);return C;}else{int B=Hc.length-Ic;A.setRange(0,B,Hc,Ic);A.setRange(B,B+Jc,Hc,0);return Jc+B;}}void Lc(int A){assert(A>=length);A+= A>>1;int C=PM(A);List<W> B=new List<W>(C);Jc=Nc(B);Hc=B;Ic=0;}}abstract class vE<ZB,AB> implements Map<ZB,AB>{factory vE()=>new pG();}class pG<ZB,AB> implements vE<ZB,AB>{final Map<ZB,AB> Oc;final Map<AB,ZB> Pc;vE<AB,ZB> Qc;pG():this.NZ(new HashMap(),new HashMap());pG.NZ(this.Oc,this.Pc);AB operator[](Object A)=>Oc[A];void operator[]=(ZB A,AB B){Rc(A,B,false);}void replace(ZB A,AB B){Rc(A,B,true);}void addAll(Map<ZB,AB> A)=>A.forEach((B,C)=>Rc(B,C,false));bool containsKey(Object A)=>Oc.containsKey(A);bool containsValue(Object A)=>Pc.containsKey(A);void forEach(void A(ZB key,AB value))=>Oc.forEach(A);bool get isEmpty=>Oc.isEmpty;bool get isNotEmpty=>Oc.isNotEmpty;Iterable<ZB> get keys=>Oc.keys;int get length=>Oc.length;Iterable<AB> get values=>Pc.keys;vE<AB,ZB> get uX{if(Qc==null){Qc=new pG.NZ(Pc,Oc);}return Qc;}AB putIfAbsent(ZB A,AB C()){var B=Oc[A];if(B!=null)return B;if(!Oc.containsKey(A))return Rc(A,C(),false);return null;}AB remove(Object A){Pc.remove(Oc[A]);return Oc.remove(A);}void clear(){Oc.clear();Pc.clear();}AB Rc(ZB B,AB A,bool D){if(B==null)throw new ArgumentError("null key");if(A==null)throw new ArgumentError("null value");var C=Oc[B];if(C==A)return A;if(Pc.containsKey(A)){if(!D)throw new ArgumentError("Mapping for ${A} exists");Oc.remove(Pc[A]);}Pc.remove(C);Oc[B]=A;Pc[A]=B;return A;}}Iterable PU(Iterable<Iterable> A)=>A.expand((B)=>B);abstract class MB implements Comparable<MB>{factory MB(KC A,KC B,String C)=>new fJ(A,B,C);}class fJ extends dN{final KC start;final KC end;final String text;fJ(this.start,this.end,this.text){if(end.k!=start.k){throw new ArgumentError("Source URLs \"${start.k}\" and " " \"${end.k}\" don't match.");}else if(end.offset<start.offset){throw new ArgumentError('End ${end} must come after start ${start}.');}else if(text.length!=start.mP(end)){throw new ArgumentError('Text "${text}" must be ${start.mP(end)} ' 'characters long.');}}}class cN implements Exception{String get message=>Sc;final String Sc;MB get M=>Tc;final MB Tc;cN(this.Sc,this.Tc);String toString({color}){if(M==null)return message;return "Error on "+M.message(message,color:color);}}class gJ extends cN implements FormatException{dynamic get source=>Uc;final Uc;int get offset=>M==null?null:M.start.offset;gJ(String A,MB B,[this.Uc]):super(A,B);}abstract class dN implements MB{Uri get k=>start.k;int get length=>end.offset-start.offset;int compareTo(MB A){var B=start.compareTo(A.start);return B==0?end.compareTo(A.end):B;}String message(String C,{color}){var A=new StringBuffer();A.write('line ${start.line+1}, column ${start.column+1}');if(k!=null)A.write(' of ${DU(k)}');A.write(': ${C}');var B=this.qX(color:color);if(!B.isEmpty){A.writeln();A.write(B);}return A.toString();}String qX({color}){if(color==true)color=QU;if(color==false)color=null;var C=start.column;var A=new StringBuffer();String B;if(this is hJ){var D=(this as hJ).context;var G=TU(D,text,C);if(G!=null&&G>0){A.write(D.substring(0,G));D=D.substring(G);}var K=D.indexOf('\n');B=K==-1?D:D.substring(0,K+1);C=UI.min(C,B.length);}else if(length==0){return "";}else{B=text.split("\n").first;C=0;}var I=UI.min(C+end.offset-start.offset,B.length);if(color!=null){A.write(B.substring(0,C));A.write(color);A.write(B.substring(C,I));A.write(bN);A.write(B.substring(I));}else{A.write(B);}if(!B.endsWith('\n'))A.write('\n');for(var J=0;J<C;J++ ){if(B.codeUnitAt(J)==KM){A.writeCharCode(KM);}else{A.writeCharCode(qR);}}if(color!=null)A.write(color);A.write('^'*UI.max(I-C,1));if(color!=null)A.write(bN);return A.toString();}bool operator==(A)=>A is MB&&start==A.start&&end==A.end;int get hashCode=>start.hashCode+(31*end.hashCode);String toString()=>'<${runtimeType}: from ${start} to ${end} "${text}">';}class wE extends jF implements UU{final ME Vc;int get line=>Vc.tH(position);int get column=>Vc.SL(position);sD get state=>new gN(this,position);DB Wc;rD get location=>Vc.location(position);DB get vB=>location.kB();wE(String A,{sourceUrl,int position}):Vc=new ME(A,url:sourceUrl),super(A,sourceUrl:sourceUrl,position:position);factory wE.kZ(String string,{sourceUrl,int position})=iJ;DB mB(sD B,[sD A]){var C=A==null?position:A.position;return Vc.M(B.position,C);}bool NB(Pattern A){if(!super.NB(A)){Wc=null;return false;}Wc=Vc.M(position,zD.end);return true;}void error(String A,{Match match,int position,int length}){hN(string,match,position,length);if(match==null&&position==null&&length==null)match=zD;if(position==null){position=match==null?this.position:match.start;}if(length==null)length=match==null?1:match.end-match.start;var B=Vc.M(position,position+length);throw new qG(A,B,string);}}class gN implements sD{final wE Xc;final int position;int get line=>Xc.Vc.tH(position);int get column=>Xc.Vc.SL(position);gN(this.Xc,this.position);}class hJ extends fJ{}final VU=new RegExp("/").pattern=="\\/";class jF{final Uri k;final String string;int get position=>Yc;set position(int A){if(A<0||A>string.length){throw new ArgumentError("Invalid position ${A}");}Yc=A;}int Yc=0;Match get zD=>Zc;Match Zc;bool get vC=>position==string.length;jF(this.string,{sourceUrl,int position}):k=sourceUrl is String?Uri.parse(sourceUrl):sourceUrl{if(position!=null)this.position=position;}int Y(){if(vC)ac("more input");return string.codeUnitAt(Yc++ );}int c([int A]){if(A==null)A=0;var B=position+A;if(B<0||B>=string.length)return null;return string.codeUnitAt(B);}bool h(Pattern B){var A=NB(B);if(A)Yc=Zc.end;return A;}void JF(Pattern A,{String name}){if(h(A))return;if(name==null){if(A is RegExp){var B=A.pattern;if(!VU)B=B.replaceAll("/","\\/");name="/${B}/";}else{name=A.toString().replaceAll("\\","\\\\").replaceAll('"','\\"');name='"${name}"';}}ac(name);}bool NB(Pattern A){Zc=A.matchAsPrefix(string,position);return Zc!=null;}String substring(int B,[int A]){if(A==null)A=position;return string.substring(B,A);}void error(String A,{Match match,int position,int length}){hN(string,match,position,length);if(match==null&&position==null&&length==null)match=zD;if(position==null){position=match==null?this.position:match.start;}if(length==null)length=match==null?1:match.end-match.start;var B=new ME(string,url:k);var C=B.M(position,position+length);throw new qG(A,C,string);}void ac(String A){error("expected ${A}.",position:this.position,length:0);}}abstract class s{static final s FN=new GN();static final s SD=new IN();static final s JE=new HN();static final s PJ=GU();static s GU(){if(Uri.base.scheme!='file')return s.JE;if(!Uri.base.path.endsWith('/'))return s.JE;if(new Uri(path:'a/b').toFilePath()=='a\\b')return s.SD;return s.FN;}String get name;eB get context=>new eB(style:this);String get kC;String GQ(String A);String KG(Uri A);String toString()=>name;}class iN extends XN{iN():super(new aU());}class WU{String encode(Map<String,dynamic> B){var A=new YU();A.ML(B,name:[] );return A.toString();}}abstract class XU{}typedef void jJ<AB>(AB _0);class YU{static final RegExp ZU=new RegExp(r'^[A-Za-z0-9_-]+$');final StringBuffer bc=new StringBuffer();void UL(){if(bc.isNotEmpty)bc.writeln();}void rX(List<String> B,{bool array: false}){if(B.isNotEmpty){UL();UL();bc.write(array?'[[':'[');for(int A=0;A<B.length;A++ ){if(A!=0)bc.write('.');xP(B[A]);}bc.write(array?']]':']');}}pL(A){while(A is XU)A=A.jZ();return A;}void ML(Map<String,dynamic> I,{List<String> name,bool array: false}){var C={};var D={};I.forEach((B,A){A=pL(A);if(A is Map){D[B]=A;return;}if(A is Iterable&&A.length>0){A=A.map(pL);if(A.every((G)=>G is Map)){D[B]=A;return;}}C[B]=A;});if(array||C.isNotEmpty){rX(name,array:array);C.forEach(sX);}D.forEach((B,A){name.add(B);if(A is Map){ML(A,name:name);}else if(A is Iterable){A.forEach((G){ML(G,name:name,array:true);});}name.removeLast();});}void sX(String A,B){UL();xP(A);bc.write(' = ');yP(B);}void xP(String A){if(ZU.hasMatch(A)){bc.write(A);}else{wP(A);}}void yP(A){A=pL(A);jJ B=nX(A);if(B==null)throw new mJ(A);B(A);}jJ nX(A){if(A is num)return dX;if(A is bool)return YX;if(A is DateTime)return ZX;if(A is String)return eX;if(A is Iterable)return XX;return null;}void dX(num A){bc.write('${A}');}void YX(bool A){bc.write(A?'true':'false');}void ZX(DateTime A){bc.write(A.toIso8601String());}Type VY(Iterable B){if(B.isEmpty)return null;if(identical(1,1.0)&&B.every((A)=>A is num)&&B.any((A)=>A is int)&&B.any((A)=>A is!int)){return num;}return B.map((A)=>A.runtimeType).reduce((C,D){if(C!=D)throw new nJ(B);return C;});}void XX(Iterable B){var D=VY(B);bc.write('[');for(var A=0;A<B.length;A++ ){var C=B.elementAt(A);if(A!=0)bc.write(', ');yP(C);if(D==num&&C is int)bc.write('.0');}bc.write(']');}jJ<String> mX(String A){var C=[bC.nC['"'],bC.nC['\\']];bool B(String D)=>bC.nC.values.where((G)=>!C.contains(G)).any(D.codeUnits.contains);if(A.contains('\n')||A.contains('\r')){if(A.split(new RegExp('\n|\r')).any(B)){return bX;}return cX;}if(A.contains("'")||B(A)){return wP;}return aX;}void eX(String A){var B=mX(A);B(A);}void cc(String A,{String quotes,Iterable<int> esc: const[] ,bool multiline: false}){if(esc.isNotEmpty){A=A.codeUnits.map((int B){if(esc.contains(B)){return '\\${bC.nC.uX[B]}';}return new String.fromCharCode(B);}).join();}if(multiline){if(quotes=='"""')A=A.replaceAll('"""',r'\"\"\"');}else if(A.contains('\n')||A.contains('\r')){throw new rG('Newlines are only allowed in multi-line strings!');}if(!esc.contains(quotes.codeUnitAt(0))&&A.contains(quotes)){throw new rG('"${quotes}" are prohibited in non-basic strings.');}bc.write(quotes);if(multiline)bc.writeln();bc.write(A);bc.write(quotes);}void wP(String A)=>cc(A,quotes:'"',esc:bC.nC.values);void bX(String B)=>cc(B,quotes:'"""',esc:bC.nC.values.where((A)=>A!=bC.nC['"']&&A!=bC.nC['n']&&A!=bC.nC['r']),multiline:true);void aX(String A)=>cc(A,quotes:"'");void cX(String A)=>cc(A,quotes:"'''",multiline:true);String toString()=>bc.toString();}class kJ{final String AG;kJ(this.AG);bool operator==(A)=>A is kJ&&A.AG==AG;int get hashCode=>AG.hashCode;String toString()=>'The escape sequence "${AG}" is invalid!';}class rG{final String GG;rG(this.GG);bool operator==(A)=>A is rG&&A.GG==GG;int get hashCode=>GG.hashCode;String toString()=>GG;}class kF{final String name;kF(this.name);bool operator==(A)=>A is kF&&A.name==name;int get hashCode=>name.hashCode;String toString()=>'Cannot redefine "${name}"!';}class lJ{final String name;lJ(this.name);bool operator==(A)=>A is lJ&&A.name==name;int get hashCode=>name.hashCode;String toString()=>'Cannot define table "${name}"! Parent must be a table!';}class mJ{final value;mJ(this.value);bool operator==(A)=>A is mJ&&A.value==value;int get hashCode=>value.hashCode;String toString()=>'"${value}" cannot be encoded as a TOMl value!';}class nJ{final Iterable vD;nJ(this.vD);bool operator==(A)=>A is nJ&&A.vD==vD;int get hashCode=>vD.hashCode;String toString()=>'The items of "${vD}" must all be of the same type!';}class bC extends YJ{static final vE<String,int> nC=new vE()..addAll({'b':0x08,'t':0x09,'n':0x0A,'f':0x0C,'r':0x0D,'"':0x22,r'\':0x5C});start()=>Q(LL).end();PC(A,[bool C=false,bool B]){if(B==null)B=C;if(A is Function)A=Q(A);var D=Q(yD,C);var G=Q(yD,B);return A.QL().trim(D,G);}yD([bool A=false])=>A?Q(yD)|Q(HG):Q(uL)|Q(DL);uL()=>e(' ')|e('\t');HG()=>e('\n')|e('\r')&e('\n');DL()=>e('#')&Q(HG).aQ().KD();value()=>Q(qH)|Q(sH)|Q(vH)|Q(mH)|Q(vQ)|Q(vD)|Q(uH);P dc({P quotes,P esc,bool multiline: false}){var A=quotes;if(multiline)A=(A&Q(oP).JD()).kD(0);var C=quotes;if(!multiline)C|= Q(HG);var B=C.aQ();if(esc!=null)B=esc|B;return (A&B.KD()&quotes).trim(Q(yD)).kD(1).map((List D)=>D.join());}vQ()=>Q(HY)|Q(VP)|Q(JY)|Q(EY);VP()=>dc(quotes:e('"'),esc:Q(rH));rH()=>e('\\')&(Q(oL)|Q(kL));oL()=>e('u')&Q(KQ).NI(4).QL()|e('U')&Q(KQ).NI(8).QL();kL()=>qD();KQ()=>YN('0-9a-fA-F');HY()=>dc(quotes:gF('"""'),esc:Q(IY),multiline:true);IY()=>Q(vL)|Q(rH);vL()=>e('\\')&Q(oP).EI()&Q(uL).KD();oP()=>Q(uL).KD()&Q(HG);EY()=>dc(quotes:gF("'"));JY()=>dc(quotes:gF("'''"),multiline:true);vH()=>Q(PC,ec);ec()=>VJ('+-').JD()&(e('0')|Q(hP));hP()=>oG().EI().NG(e('_'));sH()=>Q(PC,fc);fc()=>Q(ec)&(Q(hX)&Q(zP).JD()|Q(zP));hX()=>e('.')&Q(hP);zP()=>VJ('eE')&Q(ec);mH()=>Q(PC,gc);gc()=>gF('true')|gF('false');qH()=>Q(PC,hc);hc()=>Q(jX)&e('T')&Q(kX);jX()=>Q(TX)&e('-')&Q(YE)&e('-')&Q(YE);kX()=>Q(MY)&Q(TY);MY()=>Q(YE)&e(':')&Q(YE)&e(':')&Q(YE)&(e('.')&oG().HI(1,6)).JD();TY()=>e('Z')|Q(SY);SY()=>VJ('+-')&Q(YE)&e(':')&Q(YE);YE()=>oG().NI(2);TX()=>oG().NI(4);vD()=>fD(qH)|fD(sH)|fD(vH)|fD(mH)|fD(vQ)|fD(vD)|fD(uH);fD(A)=>Q(PC,e('['),false,true)&Q(A).NG(Q(PC,e(','),true),optionalSeparatorAtEnd:true,includeSeparators:false).JD([] )&Q(PC,e(']'),true,false);hE()=>Q(LI).trim(Q(yD,true))&Q(ZL);LI()=>e('[')&Q(RY)&e(']');mL()=>Q(nL).trim(Q(yD,true))&Q(ZL);nL()=>e('[')&Q(LI)&e(']');uH()=>Q(PC,e('{'))&Q(zH).NG(PC(e(',')),optionalSeparatorAtEnd:false,includeSeparators:false).JD([] )&Q(PC,e('}'));key()=>Q(PC,PX)|Q(PY);PX()=>YN('A-Za-z0-9_-').EI();PY()=>Q(VP);RY()=>Q(key).NG(e('.'),includeSeparators:false);zH()=>Q(key)&e('=')&Q(value);ZL()=>Q(zH).NG(Q(HG)&Q(yD,true).KD(),includeSeparators:false,optionalSeparatorAtEnd:true).JD([] );LL()=>Q(yD,true).KD()&Q(ZL)&(Q(hE)|Q(mL)).KD();}class aU extends bC{rH()=>super.rH().kD(1);kL()=>super.kL().map((String A){if(bC.nC.containsKey(A)){return new String.fromCharCode(bC.nC[A]);}throw new kJ('\\${A}');});oL()=>super.oL().kD(1).map((A)=>new String.fromCharCode(int.parse(A,radix:16)));vL()=>super.vL().map((A)=>'');vH()=>super.vH().map((A)=>int.parse(A.replaceAll('_','')));sH()=>super.sH().map((A)=>double.parse(A.replaceAll('_','')));mH()=>super.mH().map((A)=>A=='true');qH()=>super.qH().map(DateTime.parse);fD(A)=>super.fD(A).kD(1);hE()=>super.hE().map((List A)=>{'type':'table','parent':A[0].sublist(0,A[0].length-1),'name':A[0].last,'pairs':A[1]});LI()=>super.LI().kD(1);mL()=>super.mL().map((List A)=>{'type':'table-array','parent':A[0].sublist(0,A[0].length-1),'name':A[0].last,'pairs':A[1]});nL()=>super.nL().kD(1);uH()=>super.uH().kD(1).map((List C){var A={};C.forEach((Map B){A[B['key']]=B['value'];});return A;});zH()=>super.zH().NY([0,2]).map((List A)=>{'key':A[0],'value':A[1]});LL()=>super.LL().map((List a){var J={};var l=new Set();void K(String A){if(l.contains(A))throw new kF(A);l.add(A);}Function t(Map OB,[String VB])=>(Map G){var A=VB==null?G['key']:'${VB}.${G['key']}';K(A);if(OB.containsKey(G['key']))throw new kF(A);OB[G['key']]=G['value'];};a[1].forEach(t(J));a[2].forEach((Map C){var B=J;var A=[] ;C['parent'].forEach((String I){B=B.putIfAbsent(I,()=>{});if(B is List){I='${I}[${B.length-1}]';B=B.last;}A.add(I);if(B is!Map)throw new lJ(A.join('.'));});A.add(C['name']);A=A.join('.');var N;if(C['type']=='table-array'){var S=B.putIfAbsent(C['name'],(){K(A);return [] ;});if(S is Map)throw new kF(A);var AC=S.length;S.add(N={});A='${A}[${AC}]';}else{N=B.putIfAbsent(C['name'],()=>{});}K(A);C['pairs'].forEach(t(N,A));});U(D){if(D is Map){return new UnmodifiableMapView(new Map.fromIterables(D.keys,D.values.map(U)));}if(D is List){return new UnmodifiableListView(D.map(U));}return D;}return U(J);});}abstract class AS<ZB,AB> implements Map<ZB,AB>{static RF(){throw new UnsupportedError("Cannot modify an unmodifiable Map");}void operator[]=(ZB A,AB B)=>RF();AB putIfAbsent(ZB A,AB B())=>RF();void addAll(Map<ZB,AB> A)=>RF();AB remove(Object A)=>RF();void clear()=>RF();}main()async{await OS();gI B=new gI();await B.FY();b=B;{RC A=await bS();X.FC("[Server] ${A.message}");if(!A.nB){exit(1);}}bool C=false;{await aS();for(String D in oE.keys){String A=await oE[D]("update-repo");if(!A.contains("not found in the repository.")){if(A.toLowerCase().contains("error")){C=true;}X.FC("[${D}] ${A}");}}}uS();if(C){exit(1);}else{exit(0);}}class HN extends RD{HN();final name='url';final kC='/';final bB=const['/'];final mQ=new RegExp(r'/');final ZQ=new RegExp(r"(^[a-zA-Z][-+.a-zA-Z\d]*://|[^/])$");final kQ=new RegExp(r"[a-zA-Z][-+.a-zA-Z\d]*://[^/]*");final jQ=new RegExp(r"^/");bool pH(String A)=>A.contains('/');bool f(int A)=>A==aC;bool NF(String A){if(A.isEmpty)return false;if(!f(A.codeUnitAt(A.length-1)))return true;return A.endsWith("://")&&wC(A)==A.length;}int wC(String A,{bool withDrive: false}){if(A.isEmpty)return 0;if(f(A.codeUnitAt(0)))return 1;for(var C=0;C<A.length;C++ ){var D=A.codeUnitAt(C);if(f(D))return 0;if(D==LJ){if(C==0)return 0;if(A.startsWith('//',C+1))C+= 3;var B=A.indexOf('/',C);if(B<=0)return A.length;if(!withDrive||A.length<B+3)return B;if(!A.startsWith('file://'))return B;if(!KN(A,B+1))return B;return A.length==B+3?B+3:B+4;}}return 0;}bool dB(String A)=>A.isNotEmpty&&f(A.codeUnitAt(0));String KG(Uri A)=>A.toString();}bool JN(int A)=>(A>=yM&&A<=zM)||(A>=AN&&A<=BN);bool KN(String A,int B){if(A.length<B+2)return false;if(!JN(A.codeUnitAt(B)))return false;if(A.codeUnitAt(B+1)!=LJ)return false;if(A.length==B+2)return true;return A.codeUnitAt(B+2)==aC;}int TU(String B,String C,int D){var J=C=='';var A=B.indexOf(C);while(A!=-1){var G=B.lastIndexOf('\n',A)+1;var I=A-G;if(D==I||(J&&D==I+1)){return G;}A=B.indexOf(C,A+1);}return null;}void hN(String C,Match D,int A,int B){if(D!=null&&(A!=null||B!=null)){throw new ArgumentError("Can't pass both match and position/length.");}if(A!=null){if(A<0){throw new RangeError("position must be greater than or equal to 0.");}else if(A>C.length){throw new RangeError("position must be less than or equal to the " "string length.");}}if(B!=null&&B<0){throw new RangeError("length must be greater than or equal to 0.");}if(A!=null&&B!=null&&A+B>C.length){throw new RangeError("position plus length must not go beyond the end of " "the string.");}}const QJ=0x20;class IN extends RD{IN();final name='windows';final kC='\\';final bB=const['/','\\'];final mQ=new RegExp(r'[/\\]');final ZQ=new RegExp(r'[^/\\]$');final kQ=new RegExp(r'^(\\\\[^\\]+\\[^\\/]+|[a-zA-Z]:[/\\])');final jQ=new RegExp(r"^[/\\](?![/\\])");bool pH(String A)=>A.contains('/');bool f(int A)=>A==aC||A==sE;bool NF(String A){if(A.isEmpty)return false;return !f(A.codeUnitAt(A.length-1));}int wC(String A,{bool withDrive: false}){if(A.isEmpty)return 0;if(A.codeUnitAt(0)==aC)return 1;if(A.codeUnitAt(0)==sE){if(A.length<2||A.codeUnitAt(1)!=sE)return 1;var B=A.indexOf('\\',2);if(B>0){B=A.indexOf('\\',B+1);if(B>0)return B;}return A.length;}if(A.length<3)return 0;if(!JN(A.codeUnitAt(0)))return 0;if(A.codeUnitAt(1)!=LJ)return 0;if(!f(A.codeUnitAt(2)))return 0;return 3;}bool dB(String A)=>wC(A)==1;String KG(Uri B){if(B.scheme!=''&&B.scheme!='file'){throw new ArgumentError("Uri ${B} must have scheme 'file:'.");}var A=B.path;if(B.host==''){if(A.length>=3&&A.startsWith('/')&&KN(A,1)){A=A.replaceFirst("/","");}}else{A='\\\\${B.host}${A}';}return Uri.decodeComponent(A.replaceAll("/","\\"));}bool oH(int A,int B){if(A==B)return true;if(A==aC)return B==sE;if(A==sE)return B==aC;if(A^B!=QJ)return false;var C=A|QJ;return C>=AN&&C<=BN;}bool fL(String A,String C){if(identical(A,C))return true;if(A.length!=C.length)return false;for(var B=0;B<A.length;B++ ){if(!oH(A.codeUnitAt(B),C.codeUnitAt(B))){return false;}}return true;}int ZP(int A){if(A==aC)return sE;if(A<yM)return A;if(A>zM)return A;return A|QJ;}String aP(String A)=>A.toLowerCase();}YV(String A,{sourceUrl})=>ZV(A,sourceUrl:sourceUrl).value;PB ZV(String A,{sourceUrl})=>aV(A,sourceUrl:sourceUrl).FL;BF aV(String D,{sourceUrl}){var A=new rN(D,sourceUrl:sourceUrl);var B=A.load();if(B==null){return new BF.UZ(new TB.YZ(null,A.M),A.M,null,const[] );}var C=A.load();if(C!=null){throw new d("Only expected one document.",C.M);}return B;}Map bU()=>new HashMap(equals:cU,hashCode:jN);bool cU(A,B)=>new dU().iC(A,B);class dU{final ic=[] ;final jc=[] ;bool iC(A,B){if(A is TB)A=A.value;if(B is TB)B=B.value;for(var C=0;C<ic.length;C++ ){var D=identical(A,ic[C]);var G=identical(B,jc[C]);if(D&&G)return true;if(D||G)return false;}ic.add(A);jc.add(B);try {if(A is List&&B is List){return kc(A,B);}else if(A is Map&&B is Map){return lc(A,B);}else if(A is num&&B is num){return mc(A,B);}else{return A==B;}}finally {ic.removeLast();jc.removeLast();}}bool kc(List B,List C){if(B.length!=C.length)return false;for(var A=0;A<B.length;A++ ){if(!iC(B[A],C[A]))return false;}return true;}bool lc(Map A,Map B){if(A.length!=B.length)return false;for(var C in A.keys){if(!B.containsKey(C))return false;if(!iC(A[C],B[C]))return false;}return true;}bool mc(num A,num B){if(A.isNaN&&B.isNaN)return true;return A==B;}}int jN(G){var B=[] ;C(A){if(B.any((I)=>identical(I,A)))return -1;B.add(A);try {if(A is Map){var D=const YG();return D.jC(A.keys.map(C))^D.jC(A.values.map(C));}else if(A is Iterable){return const XG().jC(A.map(jN));}else if(A is TB){return A.value.hashCode;}else{return A.hashCode;}}finally {B.removeLast();}}return C(G);}class m{final j type;final DB M;m(this.type,this.M);String toString()=>type.toString();}class sG implements m{get type=>j.eU;final DB M;final sF versionDirective;final List<dC> MI;final bool isImplicit;sG(this.M,{this.versionDirective,List<dC> tagDirectives,this.isImplicit: true}):MI=tagDirectives==null?[] :tagDirectives;String toString()=>"DOCUMENT_START";}class tG implements m{get type=>j.mN;final DB M;final bool isImplicit;tG(this.M,{this.isImplicit: true});String toString()=>"DOCUMENT_END";}class oJ implements m{get type=>j.nN;final DB M;final String name;oJ(this.M,this.name);String toString()=>"ALIAS ${name}";}abstract class pJ implements m{String get anchor;String get tag;String toString(){var A=new StringBuffer('${type}');if(anchor!=null)A.write(" &${anchor}");if(tag!=null)A.write(" ${tag}");return A.toString();}}class cC extends pJ{get type=>j.oN;final DB M;final String anchor;final String tag;final String value;final YB O;cC(this.M,this.value,this.O,{this.anchor,this.tag});String toString()=>"${super.toString()} \"${value}\"";}class lF extends pJ{get type=>j.pN;final DB M;final String anchor;final String tag;final LC O;lF(this.M,this.O,{this.anchor,this.tag});}class mF extends pJ{get type=>j.qN;final DB M;final String anchor;final String tag;final LC O;mF(this.M,this.O,{this.anchor,this.tag});}class j{static const kN=const j.QZ("STREAM_START");static const lN=const j.QZ("STREAM_END");static const eU=const j.QZ("DOCUMENT_START");static const mN=const j.QZ("DOCUMENT_END");static const nN=const j.QZ("ALIAS");static const oN=const j.QZ("SCALAR");static const pN=const j.QZ("SEQUENCE_START");static const uG=const j.QZ("SEQUENCE_END");static const qN=const j.QZ("MAPPING_START");static const vG=const j.QZ("MAPPING_END");final String name;const j.QZ(this.name);String toString()=>name;}class d extends gJ{d(String A,MB B):super(A,B);}class rN{final qJ nc;final oc=new Map<String,PB>();DB get M=>pc;DB pc;rN(String B,{sourceUrl}):nc=new qJ(B,sourceUrl:sourceUrl){var A=nc.wB();pc=A.M;assert(A.type==j.kN);}BF load(){if(nc.vC)return null;var A=nc.wB();if(A.type==j.lN){pc=pc.expand(A.M);return null;}var B=qc(A);pc=pc.expand(B.M);oc.clear();return B;}BF qc(sG A){var C=rc(nc.wB());var B=nc.wB() as tG;assert(B.type==j.mN);return new BF.UZ(C,A.M.expand(B.M),A.versionDirective,A.MI,startImplicit:A.isImplicit,endImplicit:B.isImplicit);}PB rc(m A){switch (A.type){case j.nN:return sc(A);case j.oN:return tc(A);case j.pN:return uc(A);case j.qN:return vc(A);default:throw "Unreachable";}}void wc(String A,PB B){if(A==null)return;oc[A]=B;}PB sc(oJ A){var B=oc[A.name];if(B!=null)return B;throw new d("Undefined alias.",A.M);}PB tc(cC A){var B;if(A.tag=="!"){B=new TB.XZ(A.value,A);}else if(A.tag!=null){B=xc(A);}else{B=yc(A);}wc(A.anchor,B);return B;}PB uc(lF A){if(A.tag!="!"&&A.tag!=null&&A.tag!="tag:yaml.org,2002:seq"){throw new d("Invalid tag for sequence.",A.M);}var D=<PB>[] ;var C=new SO.WZ(D,A.M,A.O);wc(A.anchor,C);var B=nc.wB();while(B.type!=j.uG){D.add(rc(B));B=nc.wB();}TO(C,A.M.expand(B.M));return C;}PB vc(mF A){if(A.tag!="!"&&A.tag!=null&&A.tag!="tag:yaml.org,2002:map"){throw new d("Invalid tag for mapping.",A.M);}var D=bU();var C=new RO.VZ(D,A.M,A.O);wc(A.anchor,C);var B=nc.wB();while(B.type!=j.vG){var G=rc(B);var I=rc(nc.wB());D[G]=I;B=nc.wB();}TO(C,A.M.expand(B.M));return C;}TB xc(cC A){switch (A.tag){case "tag:yaml.org,2002:null":var B=zc(A);if(B!=null)return B;throw new d("Invalid null scalar.",A.M);case "tag:yaml.org,2002:bool":var B=Ad(A);if(B!=null)return B;throw new d("Invalid bool scalar.",A.M);case "tag:yaml.org,2002:int":var B=Bd(A,allowFloat:false);if(B!=null)return B;throw new d("Invalid int scalar.",A.M);case "tag:yaml.org,2002:float":var B=Bd(A,allowInt:false);if(B!=null)return B;throw new d("Invalid float scalar.",A.M);case "tag:yaml.org,2002:str":return new TB.XZ(A.value,A);default:throw new d('Undefined tag: ${A.tag}.',A.M);}}TB yc(cC A)=>Cd(A)??new TB.XZ(A.value,A);TB Cd(cC A){var B=A.value.length;if(B==0)return new TB.XZ(null,A);var C=A.value.codeUnitAt(0);switch (C){case UG:case aI:case bI:return Bd(A);case vR:case sR:return B==4?zc(A):null;case xR:case tR:return B==4?Ad(A):null;case uR:case rR:return B==5?Ad(A):null;case zR:return B==1?new TB.XZ(null,A):null;default:if(C>=lE&&C<=VG)return Bd(A);return null;}}TB zc(cC A){switch (A.value){case "":case "null":case "Null":case "NULL":case "~":return new TB.XZ(null,A);default:return null;}}TB Ad(cC A){switch (A.value){case "true":case "True":case "TRUE":return new TB.XZ(true,A);case "false":case "False":case "FALSE":return new TB.XZ(false,A);default:return null;}}PB Bd(cC A,{bool allowInt: true,bool allowFloat: true}){var B=Dd(A.value,allowInt:allowInt,allowFloat:allowFloat);return B==null?null:new TB.XZ(B,A);}num Dd(String A,{bool allowInt: true,bool allowFloat: true}){assert(allowInt||allowFloat);var B=A.codeUnitAt(0);var G=A.length;if(allowInt&&G==1){var I=B-lE;return I>=0&&I<=9?I:null;}var C=A.codeUnitAt(1);if(allowInt&&B==lE){if(C==yR)return int.parse(A,onError:(D)=>null);if(C==wR){var K=A.substring(2);return int.parse(K,radix:8,onError:(D)=>null);}}if((B>=lE&&B<=VG)||((B==aI||B==bI)&&C>=lE&&C<=VG)){var J=null;if(allowInt){J=int.parse(A,radix:10,onError:(D)=>null);}if(allowFloat)J??= double.parse(A,(D)=>null);return J;}if(!allowFloat)return null;if((B==UG&&C>=lE&&C<=VG)||(B==bI||B==aI)&&C==UG){if(G==5){switch (A){case "+.inf":case "+.Inf":case "+.INF":return double.INFINITY;case "-.inf":case "-.Inf":case "-.INF":return -double.INFINITY;}}return double.parse(A,(D)=>null);}if(G==4&&B==UG){switch (A){case ".inf":case ".Inf":case ".INF":return double.INFINITY;case ".nan":case ".NaN":case ".NAN":return double.NAN;}}return null;}}class qJ{final yJ Ed;final Fd=new List<R>();var Gd=R.sN;final Hd=new Map<String,dC>();bool get vC=>Gd==R.BO;qJ(String A,{sourceUrl}):Ed=new yJ(A,sourceUrl:sourceUrl);m wB(){try {if(vC)throw new StateError("No more events.");var B=Id();return B;}on qG catch (A){throw new d(A.message,A.M);}}m Id(){switch (Gd){case R.sN:return Jd();case R.rJ:return Kd();case R.tN:return Ld();case R.sJ:return Md();case R.uN:return Nd(block:true);case R.fU:return Nd(block:true,indentlessSequence:true);case R.gU:return Nd();case R.vN:Ed.h();return Od();case R.tJ:return Od();case R.wG:return Pd();case R.wN:Ed.h();return Qd();case R.xG:return Qd();case R.yG:return Rd();case R.xN:return Sd(first:true);case R.uJ:return Sd();case R.yN:return Td();case R.vJ:return Ud();case R.wJ:return Vd();case R.zN:return Wd(first:true);case R.zG:return Wd();case R.xJ:return Xd();case R.AO:return Xd(empty:true);default:throw "Unreachable";}}m Jd(){var A=Ed.h();assert(A.type==L.LO);Gd=R.rJ;return new m(j.kN,A.M);}m Kd(){var A=Ed.jB();while(A.type==L.PH){A=Ed.MC();}if(A.type!=L.MH&&A.type!=L.NH&&A.type!=L.OH&&A.type!=L.qF){Yd();Fd.add(R.sJ);Gd=R.uN;return new sG(A.M.start.kB());}if(A.type==L.qF){Gd=R.BO;Ed.h();return new m(j.lN,A.M);}var C=A.M;var B=Yd();var D=B.first;var G=B.last;A=Ed.jB();if(A.type!=L.OH){throw new d("Expected document start.",A.M);}Fd.add(R.sJ);Gd=R.tN;Ed.h();return new sG(C.expand(A.M),versionDirective:D,tagDirectives:G,isImplicit:false);}m Ld(){var A=Ed.jB();switch (A.type){case L.MH:case L.NH:case L.OH:case L.PH:case L.qF:Gd=Fd.removeLast();return Zd(A.M.start);default:return Nd(block:true);}}m Md(){Hd.clear();Gd=R.rJ;var A=Ed.jB();if(A.type==L.PH){Ed.h();return new tG(A.M,isImplicit:false);}else{return new tG(A.M.start.kB(),isImplicit:true);}}m Nd({bool block: false,bool indentlessSequence: false}){var A=Ed.jB();if(A is NK){Ed.h();Gd=Fd.removeLast();return new oJ(A.M,A.name);}var D;var G;var B=A.M.start.kB();I(A){D=A.name;B=B.expand(A.M);return Ed.MC();}J(A){G=A;B=B.expand(A.M);return Ed.MC();}if(A is KH){A=I(A);if(A is LH)A=J(A);}else if(A is LH){A=J(A);if(A is KH)A=I(A);}var C;if(G!=null){if(G.NC==null){C=G.KI;}else{var K=Hd[G.NC];if(K==null){throw new d("Undefined tag handle.",G.M);}C=K.prefix+G.KI;}}if(indentlessSequence&&A.type==L.AF){Gd=R.wG;return new lF(B.expand(A.M),LC.JK,anchor:D,tag:C);}if(A is xE){if(C==null&&A.O!=YB.JH)C="!";Gd=Fd.removeLast();Ed.h();return new cC(B.expand(A.M),A.value,A.O,anchor:D,tag:C);}if(A.type==L.NO){Gd=R.xN;return new lF(B.expand(A.M),LC.KK,anchor:D,tag:C);}if(A.type==L.OO){Gd=R.zN;return new mF(B.expand(A.M),LC.KK,anchor:D,tag:C);}if(block&&A.type==L.MO){Gd=R.vN;return new lF(B.expand(A.M),LC.JK,anchor:D,tag:C);}if(block&&A.type==L.QH){Gd=R.wN;return new mF(B.expand(A.M),LC.JK,anchor:D,tag:C);}if(D!=null||C!=null){Gd=Fd.removeLast();return new cC(B,'',YB.JH,anchor:D,tag:C);}throw new d("Expected node content.",B);}m Od(){var A=Ed.jB();if(A.type==L.AF){A=Ed.MC();if(A.type==L.AF||A.type==L.OE){Gd=R.tJ;return Zd(A.M.end);}else{Fd.add(R.tJ);return Nd(block:true);}}if(A.type==L.OE){Ed.h();Gd=Fd.removeLast();return new m(j.uG,A.M);}throw new d("While parsing a block collection, expected '-'.",A.M.start.kB());}m Pd(){var A=Ed.jB();if(A.type!=L.AF){Gd=Fd.removeLast();return new m(j.uG,A.M.start.kB());}var B=A.M.start;A=Ed.MC();if(A.type==L.AF||A.type==L.WD||A.type==L.DD||A.type==L.OE){Gd=R.wG;return Zd(B);}else{Fd.add(R.wG);return Nd(block:true);}}m Qd(){var A=Ed.jB();if(A.type==L.WD){var B=A.M.start;A=Ed.MC();if(A.type==L.WD||A.type==L.DD||A.type==L.OE){Gd=R.yG;return Zd(B);}else{Fd.add(R.yG);return Nd(block:true,indentlessSequence:true);}}if(A.type==L.DD){Gd=R.yG;return Zd(A.M.start);}if(A.type==L.OE){Ed.h();Gd=Fd.removeLast();return new m(j.vG,A.M);}throw new d("Expected a key while parsing a block mapping.",A.M.start.kB());}m Rd(){var A=Ed.jB();if(A.type!=L.DD){Gd=R.xG;return Zd(A.M.start);}var B=A.M.start;A=Ed.MC();if(A.type==L.WD||A.type==L.DD||A.type==L.OE){Gd=R.xG;return Zd(B);}else{Fd.add(R.xG);return Nd(block:true,indentlessSequence:true);}}m Sd({bool first: false}){if(first)Ed.h();var A=Ed.jB();if(A.type!=L.yE){if(!first){if(A.type!=L.PE){throw new d("While parsing a flow sequence, expected ',' or ']'.",A.M.start.kB());}A=Ed.MC();}if(A.type==L.WD){Gd=R.yN;Ed.h();return new mF(A.M,LC.KK);}else if(A.type!=L.yE){Fd.add(R.uJ);return Nd();}}Ed.h();Gd=Fd.removeLast();return new m(j.uG,A.M);}m Td(){var A=Ed.jB();if(A.type==L.DD||A.type==L.PE||A.type==L.yE){var B=A.M.start;Gd=R.vJ;return Zd(B);}else{Fd.add(R.vJ);return Nd();}}m Ud(){var A=Ed.jB();if(A.type==L.DD){A=Ed.MC();if(A.type!=L.PE&&A.type!=L.yE){Fd.add(R.wJ);return Nd();}}Gd=R.wJ;return Zd(A.M.start);}m Vd(){Gd=R.uJ;return new m(j.vG,Ed.jB().M.start.kB());}m Wd({bool first: false}){if(first)Ed.h();var A=Ed.jB();if(A.type!=L.zE){if(!first){if(A.type!=L.PE){throw new d("While parsing a flow mapping, expected ',' or '}'.",A.M.start.kB());}A=Ed.MC();}if(A.type==L.WD){A=Ed.MC();if(A.type!=L.DD&&A.type!=L.PE&&A.type!=L.zE){Fd.add(R.xJ);return Nd();}else{Gd=R.xJ;return Zd(A.M.start);}}else if(A.type!=L.zE){Fd.add(R.AO);return Nd();}}Ed.h();Gd=Fd.removeLast();return new m(j.vG,A.M);}m Xd({bool empty: false}){var A=Ed.jB();if(empty){Gd=R.zG;return Zd(A.M.start);}if(A.type==L.DD){A=Ed.MC();if(A.type!=L.PE&&A.type!=L.zE){Fd.add(R.zG);return Nd();}}Gd=R.zG;return Zd(A.M.start);}m Zd(KC A)=>new cC(A.kB(),'',YB.JH);rF<sF,List<dC>> Yd(){var A=Ed.jB();var B;var C=<dC>[] ;while(A.type==L.MH||A.type==L.NH){if(A is LK){if(B!=null){throw new d("Duplicate %YAML directive.",A.M);}if(A.dE!=1||A.BE==0){throw new d("Incompatible YAML document. This parser only supports YAML 1.1 " "and 1.2.",A.M);}else if(A.BE>2){QO("Warning: this parser only supports YAML 1.1 and 1.2.",A.M);}B=new sF(A.dE,A.BE);}else if(A is MK){var D=new dC(A.NC,A.prefix);ad(D,A.M);C.add(D);}A=Ed.MC();}ad(new dC("!","!"),A.M.start.kB(),allowDuplicates:true);ad(new dC("!!","tag:yaml.org,2002:"),A.M.start.kB(),allowDuplicates:true);return new rF(B,C);}void ad(dC A,DB B,{bool allowDuplicates: false}){if(Hd.containsKey(A.NC)){if(allowDuplicates)return;throw new d("Duplicate %TAG directive.",B);}Hd[A.NC]=A;}}class R{static const sN=const R("STREAM_START");static const rJ=const R("DOCUMENT_START");static const tN=const R("DOCUMENT_CONTENT");static const sJ=const R("DOCUMENT_END");static const uN=const R("BLOCK_NODE");static const fU=const R("BLOCK_NODE_OR_INDENTLESS_SEQUENCE");static const gU=const R("FLOW_NODE");static const vN=const R("BLOCK_SEQUENCE_FIRST_ENTRY");static const tJ=const R("BLOCK_SEQUENCE_ENTRY");static const wG=const R("INDENTLESS_SEQUENCE_ENTRY");static const wN=const R("BLOCK_MAPPING_FIRST_KEY");static const xG=const R("BLOCK_MAPPING_KEY");static const yG=const R("BLOCK_MAPPING_VALUE");static const xN=const R("FLOW_SEQUENCE_FIRST_ENTRY");static const uJ=const R("FLOW_SEQUENCE_ENTRY");static const yN=const R("FLOW_SEQUENCE_ENTRY_MAPPING_KEY");static const vJ=const R("FLOW_SEQUENCE_ENTRY_MAPPING_VALUE");static const wJ=const R("FLOW_SEQUENCE_ENTRY_MAPPING_END");static const zN=const R("FLOW_MAPPING_FIRST_KEY");static const zG=const R("FLOW_MAPPING_KEY");static const xJ=const R("FLOW_MAPPING_VALUE");static const AO=const R("FLOW_MAPPING_EMPTY_VALUE");static const BO=const R("END");final String name;const R(this.name);String toString()=>name;}class yJ{static const AD=0x9;static const BD=0xA;static const CD=0xD;static const oC=0x20;static const hU=0x24;static const iU=0x28;static const jU=0x29;static const nF=0x2B;static const oF=0x2C;static const AH=0x2D;static const kU=0x2E;static const zJ=0x3F;static const BH=0x3A;static const lU=0x3B;static const mU=0x3D;static const CH=0x5B;static const pF=0x5D;static const AK=0x7B;static const DH=0x7D;static const BK=0x23;static const CO=0x26;static const DO=0x2A;static const EO=0x21;static const nU=0x7C;static const oU=0x3C;static const pU=0x3E;static const NE=0x27;static const EH=0x22;static const FH=0x25;static const CK=0x40;static const FO=0x60;static const qU=0x7E;static const rU=0x0;static const sU=0x7;static const tU=0x8;static const uU=0xB;static const vU=0xC;static const wU=0x1B;static const GO=0x2F;static const DK=0x5C;static const xU=0x5F;static const GH=0x85;static const yU=0xA0;static const zU=0x2028;static const AV=0x2029;static const EK=0xFEFF;static const VD=0x30;static const HH=0x39;static const IH=0x61;static const BV=0x62;static const CV=0x65;static const HO=0x66;static const DV=0x6E;static const EV=0x72;static const FV=0x74;static const GV=0x75;static const HV=0x76;static const IV=0x78;static const JV=0x7A;static const FK=0x41;static const IO=0x46;static const KV=0x4C;static const LV=0x4E;static const MV=0x50;static const NV=0x55;static const OV=0x5A;final wE bd;var cd=false;var dd=false;final ed=new MM<v>();var fd=0;var gd=false;final hd=<int>[-1];var jd=true;final kd=<GK>[null];int get ld=>hd.last;bool get md=>kd.length==1;bool get nd=>bd.vC||od;bool get od=>pd(0);bool get qd=>rd(0);bool get sd=>td(0);bool get ud{var A=bd.c();if(A==null)return false;switch (A){case AH:case lU:case GO:case BH:case CK:case CO:case mU:case nF:case hU:case kU:case qU:case zJ:case DO:case NE:case iU:case jU:case FH:return true;default:return (A>=VD&&A<=HH)||(A>=IH&&A<=JV)||(A>=FK&&A<=OV);}}bool get vd{if(!wd)return false;switch (bd.c()){case oF:case CH:case pF:case AK:case DH:return false;default:return true;}}bool get xd{var A=bd.c();return A!=null&&(A>=VD&&A<=HH);}bool get yd{var A=bd.c();if(A==null)return false;return (A>=VD&&A<=HH)||(A>=IH&&A<=HO)||(A>=FK&&A<=IO);}bool get zd=>Ae(0);bool get Be{var A=bd.c();if(A==null)return false;switch (A){case BD:case CD:case EK:return false;case AD:case GH:return true;default:return (A>=0x00020&&A<=0x00007E)||(A>=0x000A0&&A<=0x00D7FF)||(A>=0x0E000&&A<=0x00FFFD)||(A>=0x10000&&A<=0x10FFFF);}}bool get wd{var A=bd.c();if(A==null)return false;switch (A){case BD:case CD:case EK:case oC:return false;case GH:return true;default:return (A>=0x00020&&A<=0x00007E)||(A>=0x000A0&&A<=0x00D7FF)||(A>=0x0E000&&A<=0x00FFFD)||(A>=0x10000&&A<=0x10FFFF);}}bool get Ce{return bd.column==0&&rd(3)&&(bd.NB('---')||bd.NB('...'));}yJ(String A,{sourceUrl}):bd=new wE.kZ(A,sourceUrl:sourceUrl);v h(){if(dd)throw new StateError("Out of tokens.");if(!gd)De();var A=ed.removeFirst();gd=false;fd++ ;dd=A is v&&A.type==L.qF;return A;}v MC(){h();return jB();}v jB(){if(dd)return null;if(!gd)De();return ed.first;}void De(){while(true){if(ed.isNotEmpty){Ee();if(!kd.any((A)=>A!=null&&A.QI==fd)){break;}}Fe();}gd=true;}void Fe(){if(!cd){Ge();return;}He();Ee();Ie(bd.column);if(bd.vC){Je();return;}if(bd.column==0){if(bd.c()==FH){Ke();return;}if(rd(3)){if(bd.NB('---')){Le(L.OH);return;}if(bd.NB('...')){Le(L.PH);return;}}}switch (bd.c()){case CH:Me(L.NO);return;case AK:Me(L.OO);return;case pF:Ne(L.yE);return;case DH:Ne(L.zE);return;case oF:Oe();return;case DO:Pe(anchor:false);return;case CO:Pe(anchor:true);return;case EO:Qe();return;case NE:Re(singleQuote:true);return;case EH:Re(singleQuote:false);return;case nU:if(!md)Se();Te(literal:true);return;case pU:if(!md)Se();Te(literal:false);return;case FH:case CK:case FO:Se();return;case AH:if(Ae(1)){Ue();}else{Ve();}return;case zJ:if(Ae(1)){Ue();}else{We();}return;case BH:if(!md&&ed.isNotEmpty){var A=ed.last;if(A.type==L.yE||A.type==L.zE||(A.type==L.PO&&(A as xE).O.xX)){Xe();return;}}if(Ae(1)){Ue();}else{Xe();}return;default:if(!Be)Se();Ue();return;}throw 'Inaccessible';}void Se()=>bd.error("Unexpected character.",length:1);void Ee(){for(var A=0;A<kd.length;A++ ){var B=kd[A];if(B==null)continue;if(!md)continue;if(B.line==bd.line)continue;if(B.hL){throw new d("Expected ':'.",bd.vB);}kd[A]=null;}}void Ye(){var A=md&&ld==bd.column;assert(jd||!A);if(!jd)return;Ze();kd[kd.length-1]=new GK(fd+ed.length,bd.line,bd.column,bd.location,required:A);}void Ze(){var A=kd.last;if(A!=null&&A.hL){throw new d("Could not find expected ':' for simple key.",A.location.kB());}kd[kd.length-1]=null;}void ae(){kd.add(null);}void be(){if(md)return;kd.removeLast();}void ce(int A,L C,KC D,{int tokenNumber}){if(!md)return;if(ld!=-1&&ld>=A)return;hd.add(A);var B=new v(C,D.kB());if(tokenNumber==null){ed.add(B);}else{ed.insert(tokenNumber-fd,B);}}void Ie(int A){if(!md)return;while(ld>A){ed.add(new v(L.OE,bd.vB));hd.removeLast();}}void de()=>Ie(-1);void Ge(){cd=true;ed.add(new v(L.LO,bd.vB));}void Je(){de();Ze();jd=false;ed.add(new v(L.qF,bd.vB));}void Ke(){de();Ze();jd=false;var A=ee();if(A!=null)ed.add(A);}void Le(L A){de();Ze();jd=false;var B=bd.state;bd.Y();bd.Y();bd.Y();ed.add(new v(A,bd.mB(B)));}void Me(L A){Ye();ae();jd=true;fe(A);}void Ne(L A){Ze();be();jd=false;fe(A);}void Oe(){Ze();jd=true;fe(L.PE);}void Ve(){if(md){if(!jd){throw new d("Block sequence entries are not allowed here.",bd.vB);}ce(bd.column,L.MO,bd.location);}else{}Ze();jd=true;fe(L.AF);}void We(){if(md){if(!jd){throw new d("Mapping keys are not allowed here.",bd.vB);}ce(bd.column,L.QH,bd.location);}jd=md;fe(L.WD);}void Xe(){var A=kd.last;if(A!=null){ed.insert(A.QI-fd,new v(L.WD,A.location.kB()));ce(A.column,L.QH,A.location,tokenNumber:A.QI);kd[kd.length-1]=null;jd=false;}else if(md){if(!jd){throw new d("Mapping values are not allowed here. Did you miss a colon " "earlier?",bd.vB);}ce(bd.column,L.QH,bd.location);jd=true;}else if(jd){jd=false;fe(L.WD);}fe(L.DD);}void fe(L A){var B=bd.state;bd.Y();ed.add(new v(A,bd.mB(B)));}void Pe({bool anchor: true}){Ye();jd=false;ed.add(ge(anchor:anchor));}void Qe(){Ye();jd=false;ed.add(he());}void Te({bool literal: false}){Ze();jd=true;ed.add(ie(literal:literal));}void Re({bool singleQuote: false}){Ye();jd=false;ed.add(je(singleQuote:singleQuote));}void Ue(){Ye();jd=false;ed.add(ke());}void He(){var A=false;while(true){if(bd.column==0)bd.h("\uFEFF");while(bd.c()==oC||((!md||!A)&&bd.c()==AD)){bd.Y();}if(bd.c()==AD){bd.error("Tab characters are not allowed as indentation.",length:1);}le();if(od){me();if(md)jd=true;A=true;}else{break;}}}v ee(){var A=bd.state;bd.Y();var B;var C=ne();if(C=="YAML"){B=oe(A);}else if(C=="TAG"){B=pe(A);}else{QO("Warning: unknown directive.",bd.mB(A));while(!nd){bd.Y();}return null;}qe();le();if(!nd){throw new d("Expected comment or line break after directive.",bd.mB(A));}me();return B;}String ne(){var B=bd.position;while(wd){bd.Y();}var A=bd.substring(B);if(A.isEmpty){throw new d("Expected directive name.",bd.vB);}else if(!qd){throw new d("Unexpected character in directive name.",bd.vB);}return A;}v oe(sD A){qe();var B=re();bd.JF('.');var C=re();return new LK(bd.mB(A),B,C);}int re(){var B=bd.position;while(xd){bd.Y();}var A=bd.substring(B);if(A.isEmpty){throw new d("Expected version number.",bd.vB);}return int.parse(A);}v pe(sD A){qe();var B=se(directive:true);if(!sd){throw new d("Expected whitespace.",bd.vB);}qe();var C=te();if(!qd){throw new d("Expected whitespace.",bd.vB);}return new MK(bd.mB(A),B,C);}v ge({bool anchor: true}){var C=bd.state;bd.Y();var D=bd.position;while(vd){bd.Y();}var B=bd.substring(D);var A=bd.c();if(B.isEmpty||(!qd&&A!=zJ&&A!=BH&&A!=oF&&A!=pF&&A!=DH&&A!=FH&&A!=CK&&A!=FO)){throw new d("Expected alphanumeric character.",bd.vB);}if(anchor){return new KH(bd.mB(C),B);}else{return new NK(bd.mB(C),B);}}v he(){var A;var B;var C=bd.state;if(bd.c(1)==oU){bd.Y();bd.Y();A='';B=te();bd.JF('>');}else{A=se();if(A.length>1&&A.startsWith('!')&&A.endsWith('!')){B=te(flowSeparators:false);}else{B=te(head:A,flowSeparators:false);if(B.isEmpty){A=null;B='!';}else{A='!';}}}return new LH(bd.mB(C),A,B);}String se({bool directive: false}){bd.JF('!');var A=new StringBuffer('!');var B=bd.position;while(ud){bd.Y();}A.write(bd.substring(B));if(bd.c()==EO){A.writeCharCode(bd.Y());}else{if(directive&&A.toString()!='!')bd.JF('!');}return A.toString();}String te({String head,bool flowSeparators: true}){var B=head==null?0:head.length;var C=new StringBuffer();if(B>1)C.write(head.substring(1));var D=bd.position;var A=bd.c();while(ud||(flowSeparators&&(A==oF||A==CH||A==pF))){bd.Y();A=bd.c();}return Uri.decodeFull(bd.substring(D));}v ie({bool literal: false}){var N=bd.state;bd.Y();var J=pC.PV;var D=0;var A=bd.c();if(A==nF||A==AH){J=A==nF?pC.IK:pC.HK;bd.Y();if(xd){if(bd.c()==VD){throw new d("0 may not be used as an indentation indicator.",bd.mB(N));}D=bd.Y()-VD;}}else if(xd){if(bd.c()==VD){throw new d("0 may not be used as an indentation indicator.",bd.mB(N));}D=bd.Y()-VD;A=bd.c();if(A==nF||A==AH){J=A==nF?pC.IK:pC.HK;bd.Y();}}qe();le();if(!nd){throw new d("Expected comment or line break.",bd.vB);}me();var C=0;if(D!=0){C=ld>=0?ld+D:D;}var G=ue(C);C=G.first;var K=G.last;var B=new StringBuffer();var I='';var S=false;var U=false;var a=bd.state;while(bd.column==C&&!bd.vC){if(Ce)break;U=sd;if(!literal&&I.isNotEmpty&&!S&&!U){if(K.isEmpty)B.writeCharCode(oC);}else{B.write(I);}I='';B.write(K);S=sd;var l=bd.position;while(!nd){bd.Y();}B.write(bd.substring(l));a=bd.state;if(!bd.vC)I=ve();var G=ue(C);C=G.first;K=G.last;}if(J!=pC.HK)B.write(I);if(J==pC.IK)B.write(K);return new xE(bd.mB(N,a),B.toString(),literal?YB.RV:YB.SV);}rF<int,String> ue(int A){var B=0;var C=new StringBuffer();while(true){while((A==0||bd.column<A)&&bd.c()==oC){bd.Y();}if(bd.column>B)B=bd.column;if(!od)break;C.write(ve());}if(A==0){A=B;if(A<ld+1)A=ld+1;}return new rF(A,C.toString());}v je({bool singleQuote: false}){var U=bd.state;var A=new StringBuffer();bd.Y();while(true){if(Ce){bd.error("Unexpected document indicator.");}if(bd.vC){throw new d("Unexpected end of file.",bd.vB);}var D=false;while(!qd){var G=bd.c();if(singleQuote&&G==NE&&bd.c(1)==NE){bd.Y();bd.Y();A.writeCharCode(NE);}else if(G==(singleQuote?NE:EH)){break;}else if(!singleQuote&&G==DK&&pd(1)){bd.Y();me();D=true;break;}else if(!singleQuote&&G==DK){var J=bd.state;var B=null;switch (bd.c(1)){case VD:A.writeCharCode(rU);break;case IH:A.writeCharCode(sU);break;case BV:A.writeCharCode(tU);break;case FV:case AD:A.writeCharCode(AD);break;case DV:A.writeCharCode(BD);break;case HV:A.writeCharCode(uU);break;case HO:A.writeCharCode(vU);break;case EV:A.writeCharCode(CD);break;case CV:A.writeCharCode(wU);break;case oC:case EH:case GO:case DK:A.writeCharCode(bd.c(1));break;case LV:A.writeCharCode(GH);break;case xU:A.writeCharCode(yU);break;case KV:A.writeCharCode(zU);break;case MV:A.writeCharCode(AV);break;case IV:B=2;break;case GV:B=4;break;case NV:B=8;break;default:throw new d("Unknown escape character.",bd.mB(J));}bd.Y();bd.Y();if(B!=null){var C=0;for(var N=0;N<B;N++ ){if(!yd){bd.Y();throw new d("Expected ${B}-digit hexidecimal number.",bd.mB(J));}C=(C<<4)+we(bd.Y());}if((C>=0xD800&&C<=0xDFFF)||C>0x10FFFF){throw new d("Invalid Unicode character escape code.",bd.mB(J));}A.writeCharCode(C);}}else{A.writeCharCode(bd.Y());}}if(bd.c()==(singleQuote?NE:EH)){break;}var I=new StringBuffer();var S='';var K=new StringBuffer();while(sd||od){if(sd){if(!D){I.writeCharCode(bd.Y());}else{bd.Y();}}else{if(!D){I.clear();S=ve();D=true;}else{K.write(ve());}}}if(D){if(S.isNotEmpty&&K.isEmpty){A.writeCharCode(oC);}else{A.write(K);}}else{A.write(I);I.clear();}}bd.Y();return new xE(bd.mB(U),A.toString(),singleQuote?YB.JO:YB.KO);}v ke(){var J=bd.state;var G=bd.state;var B=new StringBuffer();var A='';var C='';var D=new StringBuffer();var I=ld+1;while(true){if(Ce)break;if(bd.c()==BK)break;if(zd){if(A.isNotEmpty){if(C.isEmpty){B.writeCharCode(oC);}else{B.write(C);}A='';C='';}else{B.write(D);D.clear();}}var K=bd.position;while(zd){bd.Y();}B.write(bd.substring(K));G=bd.state;if(!sd&&!od)break;while(sd||od){if(sd){if(A.isNotEmpty&&bd.column<I&&bd.c()==AD){bd.error("Expected a space but found a tab.",length:1);}if(A.isEmpty){D.writeCharCode(bd.Y());}else{bd.Y();}}else{if(A.isEmpty){A=ve();D.clear();}else{C=ve();}}}if(md&&bd.column<I)break;}if(A.isNotEmpty)jd=true;return new xE(bd.mB(J,G),B.toString(),YB.JH);}void me(){var A=bd.c();if(A!=CD&&A!=BD)return;bd.Y();if(A==CD&&bd.c()==BD)bd.Y();}String ve(){var A=bd.c();if(A!=CD&&A!=BD){throw new d("Expected newline.",bd.vB);}bd.Y();if(A==CD&&bd.c()==BD)bd.Y();return "\n";}bool td(int B){var A=bd.c(B);return A==oC||A==AD;}bool pd(int B){var A=bd.c(B);return A==CD||A==BD;}bool rd(int B){var A=bd.c(B);return A==null||A==oC||A==AD||A==CD||A==BD;}bool Ae(int A){switch (bd.c(A)){case BH:return xe(A+1);case BK:var B=bd.c(A-1);return B!=oC&&B!=AD;default:return xe(A);}}bool xe(int B){var A=bd.c(B);switch (A){case oF:case CH:case pF:case AK:case DH:return md;case oC:case AD:case BD:case CD:case EK:return false;case GH:return true;default:return A!=null&&((A>=0x00020&&A<=0x00007E)||(A>=0x000A0&&A<=0x00D7FF)||(A>=0x0E000&&A<=0x00FFFD)||(A>=0x10000&&A<=0x10FFFF));}}int we(int A){if(A<=HH)return A-VD;if(A<=IO)return 10+A-FK;return 10+A-IH;}void qe(){while(sd){bd.Y();}}void le(){if(bd.c()!=BK)return;while(!nd){bd.Y();}}}class GK{final int QI;final KC location;final int line;final int column;final bool hL;GK(this.QI,this.line,this.column,this.location,{bool required}):hL=required;}class pC{static const HK=const pC("STRIP");static const PV=const pC("CLIP");static const IK=const pC("KEEP");final String name;const pC(this.name);String toString()=>name;}class YB{static const QV=const YB.RZ("ANY");static const JH=const YB.RZ("PLAIN");static const RV=const YB.RZ("LITERAL");static const SV=const YB.RZ("FOLDED");static const JO=const YB.RZ("SINGLE_QUOTED");static const KO=const YB.RZ("DOUBLE_QUOTED");final String name;bool get xX=>this==JO||this==KO;const YB.RZ(this.name);String toString()=>name;}class LC{static const JK=const LC.SZ("BLOCK");static const KK=const LC.SZ("FLOW");final String name;const LC.SZ(this.name);String toString()=>name;}class v{final L type;final DB M;v(this.type,this.M);String toString()=>type.toString();}class LK implements v{get type=>L.MH;final DB M;final int dE;final int BE;LK(this.M,this.dE,this.BE);String toString()=>"VERSION_DIRECTIVE ${dE}.${BE}";}class MK implements v{get type=>L.NH;final DB M;final String NC;final String prefix;MK(this.M,this.NC,this.prefix);String toString()=>"TAG_DIRECTIVE ${NC} ${prefix}";}class KH implements v{get type=>L.UV;final DB M;final String name;KH(this.M,this.name);String toString()=>"ANCHOR ${name}";}class NK implements v{get type=>L.TV;final DB M;final String name;NK(this.M,this.name);String toString()=>"ALIAS ${name}";}class LH implements v{get type=>L.VV;final DB M;final String NC;final String KI;LH(this.M,this.NC,this.KI);String toString()=>"TAG ${NC} ${KI}";}class xE implements v{get type=>L.PO;final DB M;final String value;final YB O;xE(this.M,this.value,this.O);String toString()=>"SCALAR ${O} \"${value}\"";}class L{static const LO=const L.TZ("STREAM_START");static const qF=const L.TZ("STREAM_END");static const MH=const L.TZ("VERSION_DIRECTIVE");static const NH=const L.TZ("TAG_DIRECTIVE");static const OH=const L.TZ("DOCUMENT_START");static const PH=const L.TZ("DOCUMENT_END");static const MO=const L.TZ("BLOCK_SEQUENCE_START");static const QH=const L.TZ("BLOCK_MAPPING_START");static const OE=const L.TZ("BLOCK_END");static const NO=const L.TZ("FLOW_SEQUENCE_START");static const yE=const L.TZ("FLOW_SEQUENCE_END");static const OO=const L.TZ("FLOW_MAPPING_START");static const zE=const L.TZ("FLOW_MAPPING_END");static const AF=const L.TZ("BLOCK_ENTRY");static const PE=const L.TZ("FLOW_ENTRY");static const WD=const L.TZ("KEY");static const DD=const L.TZ("VALUE");static const TV=const L.TZ("ALIAS");static const UV=const L.TZ("ANCHOR");static const VV=const L.TZ("TAG");static const PO=const L.TZ("SCALAR");final String name;const L.TZ(this.name);String toString()=>name;}class rF<W,hV>{final W first;final hV last;rF(this.first,this.last);String toString()=>'(${first}, ${last})';}void QO(String A,[MB B])=>XV(A,B);typedef dynamic WV(String _0,[MB _1]);WV XV=(A,[B]){if(B!=null)A=B.message(A);print(A);};String bV(B){var A=new StringBuffer();cV(B,A);return A.toString();}void cV(A,StringSink B){PK(A,0,B,true);}void PK(A,int C,StringSink B,bool D){if(A is Map){eV(A,C,B,D);}else if(A is Iterable){gV(A,C,B,D);}else if(A is String){B..writeln('"${dV(A)}"');}else if(A is double){B.writeln("!!float ${A}");}else{B.writeln(A);}}String dV(String A)=>A.replaceAll('"',r'\"').replaceAll("\n",r"\n");void eV(Map C,int B,StringSink A,bool G){if(!G){A.writeln();B+= 2;}final I=fV(C);I.forEach((D){final J=C[D];UO(B,A);A..write(D)..write(': ');PK(J,B,A,false);});}Iterable<String> fV(Map I){final B=[] ;final C=[] ;final D=[] ;I.forEach((A,G){if(G is String){B.add(A);}else if(G is Map){C.add(A);}else{D.add(A);}});return PU([B..sort(),C..sort(),D..sort()]) as Iterable<String>;}void gV(Iterable C,int B,StringSink A,bool D){if(!D){A.writeln();B+= 2;}C.forEach((G){UO(B,A);A.write('- ');PK(G,B,A,false);});}void UO(int A,StringSink B)=>B.write(' '*A);class BF{final PB FL;final MB M;final sF versionDirective;final List<dC> MI;final bool startImplicit;final bool endImplicit;BF.UZ(this.FL,this.M,this.versionDirective,List<dC> A,{this.startImplicit: false,this.endImplicit: false}):MI=new UnmodifiableListView(A);String toString()=>FL.toString();}class sF{final int dE;final int BE;sF(this.dE,this.BE);String toString()=>"%YAML ${dE}.${BE}";}class dC{final String NC;final String prefix;dC(this.NC,this.prefix);String toString()=>"%TAG ${NC} ${prefix}";}abstract class PB{MB get M=>ye;MB ye;get value;}class RO extends PB with MapMixin,AS{final Map<dynamic,PB> q;final LC O;Map get value=>this;Iterable get keys=>q.keys.map((A)=>A.value);RO.VZ(Map<dynamic,PB> A,MB B,this.O):q=new UnmodifiableMapView<dynamic,PB>(A){ye=B;}operator[](B){var A=q[B];return A==null?null:A.value;}}class SO extends PB with ListMixin{final List<PB> q;final LC O;List get value=>this;int get length=>q.length;set length(int A){throw new UnsupportedError("Cannot modify an unmodifiable List");}SO.WZ(List<PB> A,MB B,this.O):q=new UnmodifiableListView<PB>(A){ye=B;}operator[](int A)=>q[A].value;operator[]=(int A,B){throw new UnsupportedError("Cannot modify an unmodifiable List");}}class TB extends PB{final value;final YB O;TB.XZ(this.value,cC A):O=A.O{ye=A.M;}TB.YZ(this.value,MB A):O=YB.QV{ye=A;}String toString()=>value.toString();}void TO(PB A,MB B){A.ye=B;}