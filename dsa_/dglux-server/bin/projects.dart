import "dart:typed_data";import "dart:async";import "dart:io";import "dart:math";import "dart:math" as NE;import "dart:collection";import "dart:convert";Uint8List mQ(List<int> A){if(A is Uint8List){if(A.offsetInBytes==0){return A;}else{return A.toList();}}return new Uint8List.fromList(A);}class oD extends IterableBase<IB>{List<IB> iB=[] ;String aC;void kJ(IB A){iB.add(A);}int get length=>iB.length;IB operator[](int A)=>iB[A];IB tO(String B){for(IB A in iB){if(A.name==B){return A;}}return null;}int hP(){return iB.length;}IB get first=>iB.first;IB get last=>iB.last;bool get isEmpty=>iB.isEmpty;bool get isNotEmpty=>iB.isNotEmpty;Iterator<IB> get iterator=>iB.iterator;}class IB{static const int mH=0;static const int sK=8;String name;int size;int mode;int ZX=0;int WX=0;int YX;bool XX=true;int uB;String aC;bool DH=true;IB(this.name,this.size,A,[this.cX=mH]){if(A is List<int>){dX=A;eX=new f(dX);}else if(A is f){eX=new f.tW(A);}}List<int> get GD{if(dX==null){GH();}return dX;}void GH(){if(dX==null){if(cX==sK){var A=eX.nE();dX=nQ.decode(A);}else{dX=eX.nE();}cX=mH;}}bool get KW=>cX!=mH;int get eV=>cX;f get eW=>eX;String toString()=>name;int cX;f eX;List<int> dX;static final ZLibCodec nQ=new ZLibCodec(raw:true);}class AC implements Exception{final String message;AC(this.message);String toString()=>"ArchiveException: ${message}";}const int pK=0;const int pE=1;int lF(List<int> B,[int A=0]){int D=B.length;A=A^0xffffffff;int C=0;while(D>=8){A=qC[(A^B[C++ ])&0xff]^(A>>8);A=qC[(A^B[C++ ])&0xff]^(A>>8);A=qC[(A^B[C++ ])&0xff]^(A>>8);A=qC[(A^B[C++ ])&0xff]^(A>>8);A=qC[(A^B[C++ ])&0xff]^(A>>8);A=qC[(A^B[C++ ])&0xff]^(A>>8);A=qC[(A^B[C++ ])&0xff]^(A>>8);A=qC[(A^B[C++ ])&0xff]^(A>>8);D-= 8;}if(D>0)do{A=qC[(A^B[C++ ])&0xff]^(A>>8);}while( --D>0);return A^0xffffffff;}const List<int> qC=const[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918000,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];class f{List<int> fX;List<int> get buffer=>fX;int offset;int gX;int get start=>gX;int hX;int get byteOrder=>hX;f(A,{int byteOrder,int start,int length}){if(byteOrder==null){byteOrder=pK;}hX=byteOrder;if(start==null){if(A is TypedData){gX=A.offsetInBytes;}else{gX=0;}}else{gX=start;}if(length!=null){iX=length;}else{if(A is TypedData){iX=A.lengthInBytes;}else if(A is List<int>){iX=A.length;}else{throw "Invalid data input.";}}if(A is TypedData){fX=A.buffer.asUint8List();}else if(A is List<int>){fX=A;}else{throw "Invalid data input.";}offset=gX;}f.tW(f A){this.fX=A.buffer;this.offset=A.offset;this.gX=A.gX;this.iX=A.iX;this.hX=A.byteOrder;}int get position=>offset-start;int get length=>iX-(offset-start);bool get aF=>offset>=(start+iX);void reset(){offset=start;}int operator[](int A)=>buffer[offset+A];f KE([int A,int B]){if(A==null){A=this.offset;}else{A+= start;}if(B==null||B<0){B=iX-(A-start);}return new f(buffer,byteOrder:byteOrder,start:A,length:B);}int indexOf(int B,[int C=0]){for(int A=this.offset+C,D=this.offset+length;A<D; ++A){if(buffer[A]==B){return A-this.start;}}return -1;}void skip(int A){offset+= A;}int readByte(){return buffer[offset++ ];}f iF(int B){f A=KE(this.offset-start,B);offset+= A.length;return A;}String UH([int A]){if(A==null){List<int> B=[] ;while(!aF){int C=readByte();if(C==0){return new String.fromCharCodes(B);}B.add(C);}throw new AC('EOF reached without finding string terminator');}f D=iF(A);Uint8List G=D.nE();String I=new String.fromCharCodes(G);return I;}int m(){int A=buffer[offset++ ]&0xff;int B=buffer[offset++ ]&0xff;if(byteOrder==pE){return (A<<8)|B;}return (B<<8)|A;}int v(){int A=buffer[offset++ ]&0xff;int B=buffer[offset++ ]&0xff;int C=buffer[offset++ ]&0xff;int D=buffer[offset++ ]&0xff;if(byteOrder==pE){return (A<<24)|(B<<16)|(C<<8)|D;}return (D<<24)|(C<<16)|(B<<8)|A;}int QD(){int A=buffer[offset++ ]&0xff;int B=buffer[offset++ ]&0xff;int C=buffer[offset++ ]&0xff;int D=buffer[offset++ ]&0xff;int G=buffer[offset++ ]&0xff;int I=buffer[offset++ ]&0xff;int J=buffer[offset++ ]&0xff;int M=buffer[offset++ ]&0xff;if(byteOrder==pE){return (A<<56)|(B<<48)|(C<<40)|(D<<32)|(G<<24)|(I<<16)|(J<<8)|M;}return (M<<56)|(J<<48)|(I<<40)|(G<<32)|(D<<24)|(C<<16)|(B<<8)|A;}Uint8List nE(){int A=length;if(buffer is Uint8List){Uint8List B=buffer;Uint8List C=new Uint8List.view(B.buffer,offset,A);return C;}return new Uint8List.fromList(buffer.sublist(offset,offset+A));}int iX;}class mD{int length;final int byteOrder;mD({int size: mF,this.byteOrder: pK}):fX=new Uint8List(size==null?mF:size),length=0;List<int> LH(){return new Uint8List.view(fX.buffer,0,length);}void clear(){fX=new Uint8List(mF);length=0;}void reset(){iX=0;}void writeByte(int A){if(length==fX.length){jX();}fX[length++ ]=A&0xff;}void SD(List<int> B,[int A]){if(A==null){A=B.length;}while(length+A>fX.length){jX((length+A)-fX.length);}fX.setRange(length,length+A,B);length+= A;}void aQ(f A){while(length+A.length>fX.length){jX((length+A.length)-fX.length);}fX.setRange(length,length+A.length,A.buffer,A.offset);length+= A.length;}void BB(int A){if(byteOrder==pE){writeByte((A>>8)&0xff);writeByte((A)&0xff);return;}writeByte((A)&0xff);writeByte((A>>8)&0xff);}void zB(int A){if(byteOrder==pE){writeByte((A>>24)&0xff);writeByte((A>>16)&0xff);writeByte((A>>8)&0xff);writeByte((A)&0xff);return;}writeByte((A)&0xff);writeByte((A>>8)&0xff);writeByte((A>>16)&0xff);writeByte((A>>24)&0xff);}List<int> KE(int B,[int A]){if(B<0){B=(length)+B;}if(A==null){A=length;}else if(A<0){A=length+A;}return new Uint8List.view(fX.buffer,B,A-B);}void jX([int A]){int B=mF;if(A!=null){if(A>B){B=A;}}Uint8List C=new Uint8List(fX.length+B);C.setRange(0,fX.length,fX);fX=C;}static const int mF=0x8000;Uint8List fX;}class kF{static const int rK=0x06054b50;static const int jQ=0x07064b50;static const int tK=20;static const int lQ=0x06064b50;int AK=-1;int iP=0;int aO=0;int OQ=0;int NQ=0;int sJ;int rJ;String oW='';List<nD> sO=[] ;kF.sW(f A){AK=kX(A);A.offset=AK;int G=A.v();iP=A.m();aO=A.m();OQ=A.m();NQ=A.m();sJ=A.v();rJ=A.v();int C=A.m();if(C>0){oW=A.UH(C);}lX(A);f B=A.KE(rJ,sJ);while(!B.aF){int D=B.v();if(D!=nD.qK){break;}sO.add(new nD(B,A));}}void lX(f A){int C=A.offset;int G=AK-tK;f B=A.KE(G,tK);int D=B.v();if(D!=jQ){A.offset=C;return;}int SB=B.v();int I=B.QD();int aB=B.v();A.offset=I;D=A.v();if(D!=lQ){A.offset=C;return;}int SC=A.QD();int cC=A.m();int TD=A.m();int J=A.v();int M=A.v();int R=A.QD();int S=A.QD();int Z=A.QD();int o=A.QD();iP=J;aO=M;OQ=R;NQ=S;sJ=Z;rJ=o;A.offset=C;}int kX(f A){int C=A.offset;int D=A.length;for(int B=D-4;B>0; --B){A.offset=B;int G=A.v();if(G==rK){A.offset=C;return B;}}throw new AC('Could not find End of Central Directory Record');}}class pC{static const int kH=0;static const int lH=8;static const int nH=0x04034b50;int BQ=nH;int version=0;int uO=0;int iE=0;int OW=0;int NW=0;int uB;int hE;int ME;String jE='';List<int> zJ=[] ;nD GP;pC([f A,this.GP]){if(A!=null){BQ=A.v();if(BQ!=nH){throw new AC('Invalid Zip Signature');}version=A.m();uO=A.m();iE=A.m();OW=A.m();NW=A.m();uB=A.v();hE=A.v();ME=A.v();int C=A.m();int D=A.m();jE=A.UH(C);zJ=A.iF(D).nE();eX=A.iF(GP.hE);if(uO&0x08!=0){int B=A.v();if(B==0x08074b50){uB=A.v();}else{uB=B;}hE=A.v();ME=A.v();}}}List<int> get GD{if(dX==null){if(iE==lH){dX=new oK.rW(eX,ME).LH();iE=kH;}else{dX=eX.nE();}}return dX;}String toString()=>jE;f eX;List<int> dX;int mX;}class nD{static const int qK=0x02014b50;int lW=0;int mW=0;int yV=0;int iE=0;int QW=0;int PW=0;int uB;int hE;int ME;int ZO;int IW;int sV;int IK;String jE='';List<int> zJ=[] ;String tV='';pC file;nD([f A,f D]){if(A!=null){lW=A.m();mW=A.m();yV=A.m();iE=A.m();QW=A.m();PW=A.m();uB=A.v();hE=A.v();ME=A.v();int G=A.m();int I=A.m();int J=A.m();ZO=A.m();IW=A.m();sV=A.v();IK=A.v();if(G>0){jE=A.UH(G);}if(I>0){f B=A.iF(I);zJ=B.nE();int M=B.m();int C=B.m();if(M==1){if(C>=8){ME=B.QD();}if(C>=16){hE=B.QD();}if(C>=24){IK=B.QD();}if(C>=28){ZO=B.v();}}}if(J>0){tV=A.UH(J);}if(D!=null){D.offset=IK;file=new pC(D,this);}}}String toString()=>jE;}class hQ{kF FE;oD iV(List<int> A,{bool verify: false}){return hV(new f(mQ(A)),verify:verify);}oD hV(f D,{bool verify: false}){FE=new kF.sW(D);oD B=new oD();for(nD G in FE.sO){pC A=G.file;if(verify){int I=lF(A.GD);if(I!=A.uB){throw new AC('Invalid CRC for file in archive.');}}var J=A.dX!=null?A.dX:A.eX;IB C=new IB(A.jE,A.ME,J,A.iE);C.uB=A.uB;B.kJ(C);}return B;}}class iQ{List<int> encode(oD I,{int level: gQ.kQ}){DateTime C=new DateTime.now();int Z=((C.minute&0x7)<<5)|(C.second~/2);int o=(C.hour<<3)|(C.minute>>3);int SB=((o&0xff)<<8)|(Z&0xff);int aB=((C.month&0x7)<<5)|C.day;int SC=(((C.year-1980)&0x7f)<<1)|(C.month>>3);int cC=((SC&0xff)<<8)|(aB&0xff);int M=0;int R=0;int S=0;Map<IB,Map> B={};for(IB A in I.iB){B[A]={};B[A]['time']=SB;B[A]['date']=cC;f D;int G;if(!A.DH){if(A.KW){A.GH();}D=new f(A.GD);if(A.uB!=null){G=A.uB;}else{G=lF(A.GD);}}else if(!A.DH||A.eV==IB.sK){D=A.eW;if(A.uB!=null){G=A.uB;}else{G=lF(A.GD);}}else{G=lF(A.GD);List<int> TD=new ZLibCodec(level:level==null?ZLibOption.DEFAULT_LEVEL:level,raw:true).encode(A.GD);D=new f(TD);}M+= 30+A.name.length+D.length;R+= 46+A.name.length+(A.aC!=null?A.aC.length:0);B[A]['crc']=G;B[A]['size']=D.length;B[A]['data']=D;}S=46+(I.aC!=null?I.aC.length:0);int oE=M+R+S;mD J=new mD(size:oE);for(IB A in I.iB){B[A]['pos']=J.length;nX(A,B,J);}oX(I,B,J);return J.LH();}void nX(IB B,Map C,mD A){A.zB(pC.nH);int I=uK;int J=0;int M=B.DH?pC.lH:pC.kH;int R=C[B]['time'];int S=C[B]['date'];int Z=C[B]['crc'];int o=C[B]['size'];int SB=B.size;String D=B.name;List<int> G=[] ;f aB=C[B]['data'];A.BB(I);A.BB(J);A.BB(M);A.BB(R);A.BB(S);A.zB(Z);A.zB(o);A.zB(SB);A.BB(D.length);A.BB(G.length);A.SD(D.codeUnits);A.SD(G);A.aQ(aB);}void oX(oD C,Map D,mD A){int G=A.length;int I=uK;int Z=oQ;for(IB B in C.iB){int o=(Z<<8)|I;int SB=I;int aB=0;int SC=B.DH?pC.lH:pC.kH;int cC=D[B]['time'];int TD=D[B]['date'];int oE=D[B]['crc'];int gH=D[B]['size'];int hH=B.size;int iH=0;int gK=0;int hK=0;int iK=D[B]['pos'];String J=B.name;List<int> M=[] ;String R=(B.aC==null?'':B.aC);A.zB(nD.qK);A.BB(o);A.BB(SB);A.BB(aB);A.BB(SC);A.BB(cC);A.BB(TD);A.zB(oE);A.zB(gH);A.zB(hH);A.BB(J.length);A.BB(M.length);A.BB(R.length);A.BB(iH);A.BB(gK);A.zB(hK);A.zB(iK);A.SD(J.codeUnits);A.SD(M);A.SD(R.codeUnits);}int jK=0;int kK=0;int lK=C.hP();int mK=C.hP();int pW=A.length-G;int qW=G;String S=(C.aC==null?'':C.aC);A.zB(kF.rK);A.BB(jK);A.BB(kK);A.BB(lK);A.BB(mK);A.zB(pW);A.zB(qW);A.BB(S.length);A.SD(S.codeUnits);}static const int uK=20;static const int oQ=0;}class gQ{static const int kQ=1;}class pB{Uint32List LE;int dF=0;int eP=0x7fffffff;pB(List<int> B){int J=B.length;for(int A=0;A<J; ++A){if(B[A]>dF){dF=B[A];}if(B[A]<eP){eP=B[A];}}int M=1<<dF;LE=new Uint32List(M);for(int D=1,G=0,R=2;D<=dF;){for(int A=0;A<J; ++A){if(B[A]==D){int I=0;int S=G;for(int C=0;C<D; ++C){I=(I<<1)|(S&1);S>>= 1;}for(int C=I;C<M;C+= R){LE[C]=(D<<16)|A;} ++G;}} ++D;G<<= 1;R<<= 1;}}}class oK{f input;final mD nC;oK.rW(f A,[int B]):input=A,nC=new mD(size:B){pX();}List<int> LH(){return nC.LH();}void pX(){qX=0;rX=0;while(sX());}bool sX(){if(input.aF){return false;}int A=tX(3);bool C=(A&0x1)!=0;int B=A>>1;switch (B){case pQ:uX();break;case qQ:vX();break;case rQ:wX();break;default:throw new AC('unknown BTYPE: ${B}');}return !C;}int tX(int A){if(A==0){return 0;}while(rX<A){if(input.aF){throw new AC('input buffer is broken');}int B=input.readByte();qX|= B<<rX;rX+= 8;}int B=qX&((1<<A)-1);qX>>= A;rX-= A;return B;}int xX(pB A){List<int> G=A.LE;int B=A.dF;while(rX<B){if(input.aF){break;}int I=input.readByte();qX|= I<<rX;rX+= 8;}int C=G[qX&((1<<B)-1)];int D=C>>16;qX>>= D;rX-= D;return C&0xffff;}void uX(){qX=0;rX=0;int A=tX(16);int B=tX(16);if(A==~B){throw new AC('Invalid uncompressed block header');}if(A>input.length){throw new AC('Input buffer is broken');}nC.aQ(input.iF(A));}void vX(){yX(zX,AY);}void wX(){int B=tX(5)+257;int C=tX(5)+1;int I=tX(4)+4;Uint8List D=new Uint8List(vK.length);for(int A=0;A<I; ++A){D[vK[A]]=tX(3);}pB G=new pB(D);Uint8List J=new Uint8List(B);Uint8List M=new Uint8List(C);List<int> R=BY(B,G,J);List<int> S=BY(C,G,M);yX(new pB(R),new pB(S));}void yX(pB I,pB J){while(true){int A=xX(I);if(A<0||A>285){throw new AC('Invalid Huffman Code ${A}');}if(A==256){break;}if(A<256){nC.writeByte(A&0xff);continue;}int G=A-257;int C=uQ[G]+tX(vQ[G]);int D=xX(J);if(D>=0&&D<=29){int B=wQ[D]+tX(xQ[D]);while(C>B){nC.SD(nC.KE(-B));C-= B;}if(C==B){nC.SD(nC.KE(-B));}else{nC.SD(nC.KE(-B,C-B));}}else{throw new AC('Illegal unused distance symbol');}}while(rX>=8){rX-= 8;input.offset-- ;}}List<int> BY(int I,pB J,List<int> B){int G=0;int C=0;while(C<I){int A=xX(J);switch (A){case 16:int D=3+tX(2);while(D-- >0){B[C++ ]=G;}break;case 17:int D=3+tX(3);while(D-- >0){B[C++ ]=0;}G=0;break;case 18:int D=11+tX(7);while(D-- >0){B[C++ ]=0;}G=0;break;default:if(A<0||A>15){throw new AC('Invalid Huffman Code: ${A}');}B[C++ ]=A;G=A;break;}}return B;}int qX=0;int rX=0;int CY=0;static const int pQ=0;static const int qQ=1;static const int rQ=2;static const List<int> sQ=const[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8];final pB zX=new pB(sQ);static const List<int> tQ=const[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];final pB AY=new pB(tQ);static const List<int> vK=const[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];static const List<int> uQ=const[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];static const List<int> vQ=const[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0];static const List<int> wQ=const[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];static const List<int> xQ=const[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];}class CB{final Map<String,VB> DY;final Map<String,CB> EY;final Map<String,VB> OD;final Map<String,CB> gD;final FY=[] ;final bool CO;factory CB({bool allowTrailingOptions: false})=>new CB.uW(<String,VB>{},<String,CB>{},allowTrailingOptions:allowTrailingOptions);CB.uW(Map<String,VB> A,Map<String,CB> B,{bool allowTrailingOptions: false}):this.DY=A,this.OD=new UnmodifiableMapView(A),this.EY=B,this.gD=new UnmodifiableMapView(B),this.CO=allowTrailingOptions!=null?allowTrailingOptions:false;CB xG(String B,[CB A]){if(EY.containsKey(B)){throw new ArgumentError('Duplicate command "${B}".');}if(A==null)A=new CB();EY[B]=A;return A;}void XV(String A,{String abbr,String help,bool defaultsTo: false,bool negatable: true,void callback(bool value),bool hide: false}){GY(A,abbr,help,null,null,null,defaultsTo,callback,lB.xK,negatable:negatable,hide:hide);}void yG(String A,{String abbr,String help,String valueHelp,List<String> allowed,Map<String,String> allowedHelp,String defaultsTo,void callback(value),bool allowMultiple: false,bool splitCommas,bool hide: false}){if(!allowMultiple&&splitCommas!=null){throw new ArgumentError('splitCommas may not be set if allowMultiple is false.');}GY(A,abbr,help,valueHelp,allowed,allowedHelp,defaultsTo,callback,allowMultiple?lB.oH:lB.AR,splitCommas:splitCommas,hide:hide);}void GY(String A,String B,String G,String I,List<String> J,Map<String,String> M,R,void S(value),lB Z,{bool negatable: false,bool splitCommas,bool hide: false}){if(DY.containsKey(A)){throw new ArgumentError('Duplicate option "${A}".');}if(B!=null){var C=JH(B);if(C!=null){throw new ArgumentError('Abbreviation "${B}" is already used by "${C.name}".');}}var D=zQ(A,B,G,I,J,M,R,S,Z,negatable:negatable,splitCommas:splitCommas,hide:hide);DY[A]=D;FY.add(D);}VD RB(List<String> A)=>new qE(null,this,A.toList()).RB();String get fH=>new yK(FY).zV();VB JH(String A){return OD.values.firstWhere((B)=>B.cD==A,orElse:()=>null);}}class nF extends FormatException{final List<String> gD;nF(String B,[Iterable<String> A]):gD=A==null?const[] :new List.unmodifiable(A),super(B);}VD yQ(CB A,Map<String,dynamic> B,String C,VD D,List<String> G,List<String> I){return new VD.vW(A,B,C,D,G,I);}class VD{final CB HY;final Map<String,dynamic> IY;final String name;final VD fD;final List<String> oB;final List<String> arguments;VD.vW(this.HY,this.IY,this.name,this.fD,List<String> A,List<String> B):this.oB=new UnmodifiableListView(A),this.arguments=new UnmodifiableListView(B);operator[](String A){if(!HY.OD.containsKey(A)){throw new ArgumentError('Could not find an option named "${A}".');}return HY.OD[A].CP(IY[A]);}Iterable<String> get OD{var A=new Set<String>.from(IY.keys);HY.OD.forEach((B,C){if(C.defaultValue!=null)A.add(B);});return A;}}const qB=0x2e;const JC=0x2f;const EI=0x3a;const kL=0x41;const lL=0x5a;const mL=0x61;const nL=0x7a;const UE=0x5c;const int AL=0x09;const int pH=0x0A;const int BL=0x0D;const int FR=0x20;const int qH=0x2B;const int rH=0x2D;const int oF=0x2E;const int OE=0x30;const int pF=0x39;const int GR=0x46;const int HR=0x4E;const int IR=0x54;const int JR=0x66;const int KR=0x6E;const int LR=0x6F;const int MR=0x74;const int NR=0x78;const int OR=0x7E;abstract class ZL{}abstract class tR{}class uF extends AS{static const uR=16;bool JY;List<List<int>> KY;int LY;int MY;int NY;int OY;int PY;void reset(){LY=0;MY=NY=OY=PY=0;JY=false;KY=null;}void init(bool M,ZL R){var I=(R as vE).key;int B=(I.lengthInBytes/4).floor();if(((B!=4)&&(B!=6)&&(B!=8))||((B*4)!=I.lengthInBytes)){throw new ArgumentError("Key length must be 128/192/256 bits");}this.JY=M;LY=B+6;KY=new List.generate(LY+1,(int A)=>new List<int>(4));var S=new ByteData.view((R as vE).key.buffer);for(var A=0,J=0;A<I.lengthInBytes;A+= 4,J++ ){var C=xE(S,A,Endianness.LITTLE_ENDIAN);KY[J>>2][J&3]=C;}int Z=(LY+1)<<2;for(int A=B;A<Z;A++ ){int D=KY[(A-1)>>2][(A-1)&3].toInt();if((A%B)==0){D=aL(vF(D,8))^zR[((A/B)-1).floor()];}else if((B>6)&&((A%B)==4)){D=aL(D);}var C=KY[(A-B)>>2][(A-B)&3]^D;KY[A>>2][A&3]=C;}if(!M){for(var G=1;G<LY;G++ ){for(var A=0;A<4;A++ ){var C=yR(KY[G][A].toInt());KY[G][A]=C;}}}}int cW(Uint8List C,int A,Uint8List D,int B){if(KY==null){throw new StateError("AES engine not initialised");}if((A+(32/2))>C.lengthInBytes){throw new ArgumentError("Input buffer too short");}if((B+(32/2))>D.lengthInBytes){throw new ArgumentError("Output buffer too short");}var G=new ByteData.view(C.buffer);var I=new ByteData.view(D.buffer);if(JY){QY(G,A);RY(KY);SY(I,B);}else{QY(G,A);TY(KY);SY(I,B);}return uR;}void RY(List<List<int>> B){int A,C,D,G,I;MY^= B[0][0].toInt();NY^= B[0][1].toInt();OY^= B[0][2].toInt();PY^= B[0][3].toInt();A=1;while(A<LY-1){C=BC[MY&255]^CC[(NY>>8)&255]^DC[(OY>>16)&255]^EC[(PY>>24)&255]^B[A][0].toInt();D=BC[NY&255]^CC[(OY>>8)&255]^DC[(PY>>16)&255]^EC[(MY>>24)&255]^B[A][1].toInt();G=BC[OY&255]^CC[(PY>>8)&255]^DC[(MY>>16)&255]^EC[(NY>>24)&255]^B[A][2].toInt();I=BC[PY&255]^CC[(MY>>8)&255]^DC[(NY>>16)&255]^EC[(OY>>24)&255]^B[A][3].toInt();A++ ;MY=BC[C&255]^CC[(D>>8)&255]^DC[(G>>16)&255]^EC[(I>>24)&255]^B[A][0].toInt();NY=BC[D&255]^CC[(G>>8)&255]^DC[(I>>16)&255]^EC[(C>>24)&255]^B[A][1].toInt();OY=BC[G&255]^CC[(I>>8)&255]^DC[(C>>16)&255]^EC[(D>>24)&255]^B[A][2].toInt();PY=BC[I&255]^CC[(C>>8)&255]^DC[(D>>16)&255]^EC[(G>>24)&255]^B[A][3].toInt();A++ ;}C=BC[MY&255]^CC[(NY>>8)&255]^DC[(OY>>16)&255]^EC[(PY>>24)&255]^B[A][0].toInt();D=BC[NY&255]^CC[(OY>>8)&255]^DC[(PY>>16)&255]^EC[(MY>>24)&255]^B[A][1].toInt();G=BC[OY&255]^CC[(PY>>8)&255]^DC[(MY>>16)&255]^EC[(NY>>24)&255]^B[A][2].toInt();I=BC[PY&255]^CC[(MY>>8)&255]^DC[(NY>>16)&255]^EC[(OY>>24)&255]^B[A][3].toInt();A++ ;MY=(JB[C&255]&255)^((JB[(D>>8)&255]&255)<<8)^((JB[(G>>16)&255]&255)<<16)^(JB[(I>>24)&255]<<24)^B[A][0].toInt();NY=(JB[D&255]&255)^((JB[(G>>8)&255]&255)<<8)^((JB[(I>>16)&255]&255)<<16)^(JB[(C>>24)&255]<<24)^B[A][1].toInt();OY=(JB[G&255]&255)^((JB[(I>>8)&255]&255)<<8)^((JB[(C>>16)&255]&255)<<16)^(JB[(D>>24)&255]<<24)^B[A][2].toInt();PY=(JB[I&255]&255)^((JB[(C>>8)&255]&255)<<8)^((JB[(D>>16)&255]&255)<<16)^(JB[(G>>24)&255]<<24)^B[A][3].toInt();}void TY(List<List<int>> A){int B,C,D,G,I;MY^= A[LY][0].toInt();NY^= A[LY][1].toInt();OY^= A[LY][2].toInt();PY^= A[LY][3].toInt();B=LY-1;while(B>1){C=FC[MY&255]^GC[(PY>>8)&255]^HC[(OY>>16)&255]^IC[(NY>>24)&255]^A[B][0].toInt();D=FC[NY&255]^GC[(MY>>8)&255]^HC[(PY>>16)&255]^IC[(OY>>24)&255]^A[B][1].toInt();G=FC[OY&255]^GC[(NY>>8)&255]^HC[(MY>>16)&255]^IC[(PY>>24)&255]^A[B][2].toInt();I=FC[PY&255]^GC[(OY>>8)&255]^HC[(NY>>16)&255]^IC[(MY>>24)&255]^A[B][3].toInt();B-- ;MY=FC[C&255]^GC[(I>>8)&255]^HC[(G>>16)&255]^IC[(D>>24)&255]^A[B][0].toInt();NY=FC[D&255]^GC[(C>>8)&255]^HC[(I>>16)&255]^IC[(G>>24)&255]^A[B][1].toInt();OY=FC[G&255]^GC[(D>>8)&255]^HC[(C>>16)&255]^IC[(I>>24)&255]^A[B][2].toInt();PY=FC[I&255]^GC[(G>>8)&255]^HC[(D>>16)&255]^IC[(C>>24)&255]^A[B][3].toInt();B-- ;}C=FC[MY&255]^GC[(PY>>8)&255]^HC[(OY>>16)&255]^IC[(NY>>24)&255]^A[B][0].toInt();D=FC[NY&255]^GC[(MY>>8)&255]^HC[(PY>>16)&255]^IC[(OY>>24)&255]^A[B][1].toInt();G=FC[OY&255]^GC[(NY>>8)&255]^HC[(MY>>16)&255]^IC[(PY>>24)&255]^A[B][2].toInt();I=FC[PY&255]^GC[(OY>>8)&255]^HC[(NY>>16)&255]^IC[(MY>>24)&255]^A[B][3].toInt();MY=(bB[C&255]&255)^((bB[(I>>8)&255]&255)<<8)^((bB[(G>>16)&255]&255)<<16)^(bB[(D>>24)&255]<<24)^A[0][0].toInt();NY=(bB[D&255]&255)^((bB[(C>>8)&255]&255)<<8)^((bB[(I>>16)&255]&255)<<16)^(bB[(G>>24)&255]<<24)^A[0][1].toInt();OY=(bB[G&255]&255)^((bB[(D>>8)&255]&255)<<8)^((bB[(C>>16)&255]&255)<<16)^(bB[(I>>24)&255]<<24)^A[0][2].toInt();PY=(bB[I&255]&255)^((bB[(G>>8)&255]&255)<<8)^((bB[(D>>16)&255]&255)<<16)^(bB[(C>>24)&255]<<24)^A[0][3].toInt();}void QY(ByteData A,int B){MY=xE(A,B,Endianness.LITTLE_ENDIAN);NY=xE(A,B+4,Endianness.LITTLE_ENDIAN);OY=xE(A,B+8,Endianness.LITTLE_ENDIAN);PY=xE(A,B+12,Endianness.LITTLE_ENDIAN);}void SY(ByteData A,int B){wF(MY,A,B,Endianness.LITTLE_ENDIAN);wF(NY,A,B+4,Endianness.LITTLE_ENDIAN);wF(OY,A,B+8,Endianness.LITTLE_ENDIAN);wF(PY,A,B+12,Endianness.LITTLE_ENDIAN);}}int vF(int A,int B)=>ES(A,B);const int vR=0x80808080;const int wR=0x7f7f7f7f;const int xR=0x0000001b;int zH(int A){var B=DS((A&vR),7);return (((A&wR)<<1)^B*xR);}int yR(int D){int A=zH(D);int B=zH(A);int G=zH(B);int C=D^G;return A^B^G^vF(A^C,8)^vF(B^C,16)^vF(C,24);}int aL(int A){return (JB[A&255]&255|((JB[(A>>8)&255]&255)<<8)|((JB[(A>>16)&255]&255)<<16)|JB[(A>>24)&255]<<24);}final JB=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22];final bB=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125];final zR=[0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36,0x6c,0xd8,0xab,0x4d,0x9a,0x2f,0x5e,0xbc,0x63,0xc6,0x97,0x35,0x6a,0xd4,0xb3,0x7d,0xfa,0xef,0xc5,0x91];final BC=[0xa56363c6,0x847c7cf8,0x997777ee,0x8d7b7bf6,0x0df2f2ff,0xbd6b6bd6,0xb16f6fde,0x54c5c591,0x50303060,0x03010102,0xa96767ce,0x7d2b2b56,0x19fefee7,0x62d7d7b5,0xe6abab4d,0x9a7676ec,0x45caca8f,0x9d82821f,0x40c9c989,0x877d7dfa,0x15fafaef,0xeb5959b2,0xc947478e,0x0bf0f0fb,0xecadad41,0x67d4d4b3,0xfda2a25f,0xeaafaf45,0xbf9c9c23,0xf7a4a453,0x967272e4,0x5bc0c09b,0xc2b7b775,0x1cfdfde1,0xae93933d,0x6a26264c,0x5a36366c,0x413f3f7e,0x02f7f7f5,0x4fcccc83,0x5c343468,0xf4a5a551,0x34e5e5d1,0x08f1f1f9,0x937171e2,0x73d8d8ab,0x53313162,0x3f15152a,0x0c040408,0x52c7c795,0x65232346,0x5ec3c39d,0x28181830,0xa1969637,0x0f05050a,0xb59a9a2f,0x0907070e,0x36121224,0x9b80801b,0x3de2e2df,0x26ebebcd,0x6927274e,0xcdb2b27f,0x9f7575ea,0x1b090912,0x9e83831d,0x742c2c58,0x2e1a1a34,0x2d1b1b36,0xb26e6edc,0xee5a5ab4,0xfba0a05b,0xf65252a4,0x4d3b3b76,0x61d6d6b7,0xceb3b37d,0x7b292952,0x3ee3e3dd,0x712f2f5e,0x97848413,0xf55353a6,0x68d1d1b9,0x00000000,0x2cededc1,0x60202040,0x1ffcfce3,0xc8b1b179,0xed5b5bb6,0xbe6a6ad4,0x46cbcb8d,0xd9bebe67,0x4b393972,0xde4a4a94,0xd44c4c98,0xe85858b0,0x4acfcf85,0x6bd0d0bb,0x2aefefc5,0xe5aaaa4f,0x16fbfbed,0xc5434386,0xd74d4d9a,0x55333366,0x94858511,0xcf45458a,0x10f9f9e9,0x06020204,0x817f7ffe,0xf05050a0,0x443c3c78,0xba9f9f25,0xe3a8a84b,0xf35151a2,0xfea3a35d,0xc0404080,0x8a8f8f05,0xad92923f,0xbc9d9d21,0x48383870,0x04f5f5f1,0xdfbcbc63,0xc1b6b677,0x75dadaaf,0x63212142,0x30101020,0x1affffe5,0x0ef3f3fd,0x6dd2d2bf,0x4ccdcd81,0x140c0c18,0x35131326,0x2fececc3,0xe15f5fbe,0xa2979735,0xcc444488,0x3917172e,0x57c4c493,0xf2a7a755,0x827e7efc,0x473d3d7a,0xac6464c8,0xe75d5dba,0x2b191932,0x957373e6,0xa06060c0,0x98818119,0xd14f4f9e,0x7fdcdca3,0x66222244,0x7e2a2a54,0xab90903b,0x8388880b,0xca46468c,0x29eeeec7,0xd3b8b86b,0x3c141428,0x79dedea7,0xe25e5ebc,0x1d0b0b16,0x76dbdbad,0x3be0e0db,0x56323264,0x4e3a3a74,0x1e0a0a14,0xdb494992,0x0a06060c,0x6c242448,0xe45c5cb8,0x5dc2c29f,0x6ed3d3bd,0xefacac43,0xa66262c4,0xa8919139,0xa4959531,0x37e4e4d3,0x8b7979f2,0x32e7e7d5,0x43c8c88b,0x5937376e,0xb76d6dda,0x8c8d8d01,0x64d5d5b1,0xd24e4e9c,0xe0a9a949,0xb46c6cd8,0xfa5656ac,0x07f4f4f3,0x25eaeacf,0xaf6565ca,0x8e7a7af4,0xe9aeae47,0x18080810,0xd5baba6f,0x887878f0,0x6f25254a,0x722e2e5c,0x241c1c38,0xf1a6a657,0xc7b4b473,0x51c6c697,0x23e8e8cb,0x7cdddda1,0x9c7474e8,0x211f1f3e,0xdd4b4b96,0xdcbdbd61,0x868b8b0d,0x858a8a0f,0x907070e0,0x423e3e7c,0xc4b5b571,0xaa6666cc,0xd8484890,0x05030306,0x01f6f6f7,0x120e0e1c,0xa36161c2,0x5f35356a,0xf95757ae,0xd0b9b969,0x91868617,0x58c1c199,0x271d1d3a,0xb99e9e27,0x38e1e1d9,0x13f8f8eb,0xb398982b,0x33111122,0xbb6969d2,0x70d9d9a9,0x898e8e07,0xa7949433,0xb69b9b2d,0x221e1e3c,0x92878715,0x20e9e9c9,0x49cece87,0xff5555aa,0x78282850,0x7adfdfa5,0x8f8c8c03,0xf8a1a159,0x80898909,0x170d0d1a,0xdabfbf65,0x31e6e6d7,0xc6424284,0xb86868d0,0xc3414182,0xb0999929,0x772d2d5a,0x110f0f1e,0xcbb0b07b,0xfc5454a8,0xd6bbbb6d,0x3a16162c];final CC=[0x6363c6a5,0x7c7cf884,0x7777ee99,0x7b7bf68d,0xf2f2ff0d,0x6b6bd6bd,0x6f6fdeb1,0xc5c59154,0x30306050,0x01010203,0x6767cea9,0x2b2b567d,0xfefee719,0xd7d7b562,0xabab4de6,0x7676ec9a,0xcaca8f45,0x82821f9d,0xc9c98940,0x7d7dfa87,0xfafaef15,0x5959b2eb,0x47478ec9,0xf0f0fb0b,0xadad41ec,0xd4d4b367,0xa2a25ffd,0xafaf45ea,0x9c9c23bf,0xa4a453f7,0x7272e496,0xc0c09b5b,0xb7b775c2,0xfdfde11c,0x93933dae,0x26264c6a,0x36366c5a,0x3f3f7e41,0xf7f7f502,0xcccc834f,0x3434685c,0xa5a551f4,0xe5e5d134,0xf1f1f908,0x7171e293,0xd8d8ab73,0x31316253,0x15152a3f,0x0404080c,0xc7c79552,0x23234665,0xc3c39d5e,0x18183028,0x969637a1,0x05050a0f,0x9a9a2fb5,0x07070e09,0x12122436,0x80801b9b,0xe2e2df3d,0xebebcd26,0x27274e69,0xb2b27fcd,0x7575ea9f,0x0909121b,0x83831d9e,0x2c2c5874,0x1a1a342e,0x1b1b362d,0x6e6edcb2,0x5a5ab4ee,0xa0a05bfb,0x5252a4f6,0x3b3b764d,0xd6d6b761,0xb3b37dce,0x2929527b,0xe3e3dd3e,0x2f2f5e71,0x84841397,0x5353a6f5,0xd1d1b968,0x00000000,0xededc12c,0x20204060,0xfcfce31f,0xb1b179c8,0x5b5bb6ed,0x6a6ad4be,0xcbcb8d46,0xbebe67d9,0x3939724b,0x4a4a94de,0x4c4c98d4,0x5858b0e8,0xcfcf854a,0xd0d0bb6b,0xefefc52a,0xaaaa4fe5,0xfbfbed16,0x434386c5,0x4d4d9ad7,0x33336655,0x85851194,0x45458acf,0xf9f9e910,0x02020406,0x7f7ffe81,0x5050a0f0,0x3c3c7844,0x9f9f25ba,0xa8a84be3,0x5151a2f3,0xa3a35dfe,0x404080c0,0x8f8f058a,0x92923fad,0x9d9d21bc,0x38387048,0xf5f5f104,0xbcbc63df,0xb6b677c1,0xdadaaf75,0x21214263,0x10102030,0xffffe51a,0xf3f3fd0e,0xd2d2bf6d,0xcdcd814c,0x0c0c1814,0x13132635,0xececc32f,0x5f5fbee1,0x979735a2,0x444488cc,0x17172e39,0xc4c49357,0xa7a755f2,0x7e7efc82,0x3d3d7a47,0x6464c8ac,0x5d5dbae7,0x1919322b,0x7373e695,0x6060c0a0,0x81811998,0x4f4f9ed1,0xdcdca37f,0x22224466,0x2a2a547e,0x90903bab,0x88880b83,0x46468cca,0xeeeec729,0xb8b86bd3,0x1414283c,0xdedea779,0x5e5ebce2,0x0b0b161d,0xdbdbad76,0xe0e0db3b,0x32326456,0x3a3a744e,0x0a0a141e,0x494992db,0x06060c0a,0x2424486c,0x5c5cb8e4,0xc2c29f5d,0xd3d3bd6e,0xacac43ef,0x6262c4a6,0x919139a8,0x959531a4,0xe4e4d337,0x7979f28b,0xe7e7d532,0xc8c88b43,0x37376e59,0x6d6ddab7,0x8d8d018c,0xd5d5b164,0x4e4e9cd2,0xa9a949e0,0x6c6cd8b4,0x5656acfa,0xf4f4f307,0xeaeacf25,0x6565caaf,0x7a7af48e,0xaeae47e9,0x08081018,0xbaba6fd5,0x7878f088,0x25254a6f,0x2e2e5c72,0x1c1c3824,0xa6a657f1,0xb4b473c7,0xc6c69751,0xe8e8cb23,0xdddda17c,0x7474e89c,0x1f1f3e21,0x4b4b96dd,0xbdbd61dc,0x8b8b0d86,0x8a8a0f85,0x7070e090,0x3e3e7c42,0xb5b571c4,0x6666ccaa,0x484890d8,0x03030605,0xf6f6f701,0x0e0e1c12,0x6161c2a3,0x35356a5f,0x5757aef9,0xb9b969d0,0x86861791,0xc1c19958,0x1d1d3a27,0x9e9e27b9,0xe1e1d938,0xf8f8eb13,0x98982bb3,0x11112233,0x6969d2bb,0xd9d9a970,0x8e8e0789,0x949433a7,0x9b9b2db6,0x1e1e3c22,0x87871592,0xe9e9c920,0xcece8749,0x5555aaff,0x28285078,0xdfdfa57a,0x8c8c038f,0xa1a159f8,0x89890980,0x0d0d1a17,0xbfbf65da,0xe6e6d731,0x424284c6,0x6868d0b8,0x414182c3,0x999929b0,0x2d2d5a77,0x0f0f1e11,0xb0b07bcb,0x5454a8fc,0xbbbb6dd6,0x16162c3a];final DC=[0x63c6a563,0x7cf8847c,0x77ee9977,0x7bf68d7b,0xf2ff0df2,0x6bd6bd6b,0x6fdeb16f,0xc59154c5,0x30605030,0x01020301,0x67cea967,0x2b567d2b,0xfee719fe,0xd7b562d7,0xab4de6ab,0x76ec9a76,0xca8f45ca,0x821f9d82,0xc98940c9,0x7dfa877d,0xfaef15fa,0x59b2eb59,0x478ec947,0xf0fb0bf0,0xad41ecad,0xd4b367d4,0xa25ffda2,0xaf45eaaf,0x9c23bf9c,0xa453f7a4,0x72e49672,0xc09b5bc0,0xb775c2b7,0xfde11cfd,0x933dae93,0x264c6a26,0x366c5a36,0x3f7e413f,0xf7f502f7,0xcc834fcc,0x34685c34,0xa551f4a5,0xe5d134e5,0xf1f908f1,0x71e29371,0xd8ab73d8,0x31625331,0x152a3f15,0x04080c04,0xc79552c7,0x23466523,0xc39d5ec3,0x18302818,0x9637a196,0x050a0f05,0x9a2fb59a,0x070e0907,0x12243612,0x801b9b80,0xe2df3de2,0xebcd26eb,0x274e6927,0xb27fcdb2,0x75ea9f75,0x09121b09,0x831d9e83,0x2c58742c,0x1a342e1a,0x1b362d1b,0x6edcb26e,0x5ab4ee5a,0xa05bfba0,0x52a4f652,0x3b764d3b,0xd6b761d6,0xb37dceb3,0x29527b29,0xe3dd3ee3,0x2f5e712f,0x84139784,0x53a6f553,0xd1b968d1,0x00000000,0xedc12ced,0x20406020,0xfce31ffc,0xb179c8b1,0x5bb6ed5b,0x6ad4be6a,0xcb8d46cb,0xbe67d9be,0x39724b39,0x4a94de4a,0x4c98d44c,0x58b0e858,0xcf854acf,0xd0bb6bd0,0xefc52aef,0xaa4fe5aa,0xfbed16fb,0x4386c543,0x4d9ad74d,0x33665533,0x85119485,0x458acf45,0xf9e910f9,0x02040602,0x7ffe817f,0x50a0f050,0x3c78443c,0x9f25ba9f,0xa84be3a8,0x51a2f351,0xa35dfea3,0x4080c040,0x8f058a8f,0x923fad92,0x9d21bc9d,0x38704838,0xf5f104f5,0xbc63dfbc,0xb677c1b6,0xdaaf75da,0x21426321,0x10203010,0xffe51aff,0xf3fd0ef3,0xd2bf6dd2,0xcd814ccd,0x0c18140c,0x13263513,0xecc32fec,0x5fbee15f,0x9735a297,0x4488cc44,0x172e3917,0xc49357c4,0xa755f2a7,0x7efc827e,0x3d7a473d,0x64c8ac64,0x5dbae75d,0x19322b19,0x73e69573,0x60c0a060,0x81199881,0x4f9ed14f,0xdca37fdc,0x22446622,0x2a547e2a,0x903bab90,0x880b8388,0x468cca46,0xeec729ee,0xb86bd3b8,0x14283c14,0xdea779de,0x5ebce25e,0x0b161d0b,0xdbad76db,0xe0db3be0,0x32645632,0x3a744e3a,0x0a141e0a,0x4992db49,0x060c0a06,0x24486c24,0x5cb8e45c,0xc29f5dc2,0xd3bd6ed3,0xac43efac,0x62c4a662,0x9139a891,0x9531a495,0xe4d337e4,0x79f28b79,0xe7d532e7,0xc88b43c8,0x376e5937,0x6ddab76d,0x8d018c8d,0xd5b164d5,0x4e9cd24e,0xa949e0a9,0x6cd8b46c,0x56acfa56,0xf4f307f4,0xeacf25ea,0x65caaf65,0x7af48e7a,0xae47e9ae,0x08101808,0xba6fd5ba,0x78f08878,0x254a6f25,0x2e5c722e,0x1c38241c,0xa657f1a6,0xb473c7b4,0xc69751c6,0xe8cb23e8,0xdda17cdd,0x74e89c74,0x1f3e211f,0x4b96dd4b,0xbd61dcbd,0x8b0d868b,0x8a0f858a,0x70e09070,0x3e7c423e,0xb571c4b5,0x66ccaa66,0x4890d848,0x03060503,0xf6f701f6,0x0e1c120e,0x61c2a361,0x356a5f35,0x57aef957,0xb969d0b9,0x86179186,0xc19958c1,0x1d3a271d,0x9e27b99e,0xe1d938e1,0xf8eb13f8,0x982bb398,0x11223311,0x69d2bb69,0xd9a970d9,0x8e07898e,0x9433a794,0x9b2db69b,0x1e3c221e,0x87159287,0xe9c920e9,0xce8749ce,0x55aaff55,0x28507828,0xdfa57adf,0x8c038f8c,0xa159f8a1,0x89098089,0x0d1a170d,0xbf65dabf,0xe6d731e6,0x4284c642,0x68d0b868,0x4182c341,0x9929b099,0x2d5a772d,0x0f1e110f,0xb07bcbb0,0x54a8fc54,0xbb6dd6bb,0x162c3a16];final EC=[0xc6a56363,0xf8847c7c,0xee997777,0xf68d7b7b,0xff0df2f2,0xd6bd6b6b,0xdeb16f6f,0x9154c5c5,0x60503030,0x02030101,0xcea96767,0x567d2b2b,0xe719fefe,0xb562d7d7,0x4de6abab,0xec9a7676,0x8f45caca,0x1f9d8282,0x8940c9c9,0xfa877d7d,0xef15fafa,0xb2eb5959,0x8ec94747,0xfb0bf0f0,0x41ecadad,0xb367d4d4,0x5ffda2a2,0x45eaafaf,0x23bf9c9c,0x53f7a4a4,0xe4967272,0x9b5bc0c0,0x75c2b7b7,0xe11cfdfd,0x3dae9393,0x4c6a2626,0x6c5a3636,0x7e413f3f,0xf502f7f7,0x834fcccc,0x685c3434,0x51f4a5a5,0xd134e5e5,0xf908f1f1,0xe2937171,0xab73d8d8,0x62533131,0x2a3f1515,0x080c0404,0x9552c7c7,0x46652323,0x9d5ec3c3,0x30281818,0x37a19696,0x0a0f0505,0x2fb59a9a,0x0e090707,0x24361212,0x1b9b8080,0xdf3de2e2,0xcd26ebeb,0x4e692727,0x7fcdb2b2,0xea9f7575,0x121b0909,0x1d9e8383,0x58742c2c,0x342e1a1a,0x362d1b1b,0xdcb26e6e,0xb4ee5a5a,0x5bfba0a0,0xa4f65252,0x764d3b3b,0xb761d6d6,0x7dceb3b3,0x527b2929,0xdd3ee3e3,0x5e712f2f,0x13978484,0xa6f55353,0xb968d1d1,0x00000000,0xc12ceded,0x40602020,0xe31ffcfc,0x79c8b1b1,0xb6ed5b5b,0xd4be6a6a,0x8d46cbcb,0x67d9bebe,0x724b3939,0x94de4a4a,0x98d44c4c,0xb0e85858,0x854acfcf,0xbb6bd0d0,0xc52aefef,0x4fe5aaaa,0xed16fbfb,0x86c54343,0x9ad74d4d,0x66553333,0x11948585,0x8acf4545,0xe910f9f9,0x04060202,0xfe817f7f,0xa0f05050,0x78443c3c,0x25ba9f9f,0x4be3a8a8,0xa2f35151,0x5dfea3a3,0x80c04040,0x058a8f8f,0x3fad9292,0x21bc9d9d,0x70483838,0xf104f5f5,0x63dfbcbc,0x77c1b6b6,0xaf75dada,0x42632121,0x20301010,0xe51affff,0xfd0ef3f3,0xbf6dd2d2,0x814ccdcd,0x18140c0c,0x26351313,0xc32fecec,0xbee15f5f,0x35a29797,0x88cc4444,0x2e391717,0x9357c4c4,0x55f2a7a7,0xfc827e7e,0x7a473d3d,0xc8ac6464,0xbae75d5d,0x322b1919,0xe6957373,0xc0a06060,0x19988181,0x9ed14f4f,0xa37fdcdc,0x44662222,0x547e2a2a,0x3bab9090,0x0b838888,0x8cca4646,0xc729eeee,0x6bd3b8b8,0x283c1414,0xa779dede,0xbce25e5e,0x161d0b0b,0xad76dbdb,0xdb3be0e0,0x64563232,0x744e3a3a,0x141e0a0a,0x92db4949,0x0c0a0606,0x486c2424,0xb8e45c5c,0x9f5dc2c2,0xbd6ed3d3,0x43efacac,0xc4a66262,0x39a89191,0x31a49595,0xd337e4e4,0xf28b7979,0xd532e7e7,0x8b43c8c8,0x6e593737,0xdab76d6d,0x018c8d8d,0xb164d5d5,0x9cd24e4e,0x49e0a9a9,0xd8b46c6c,0xacfa5656,0xf307f4f4,0xcf25eaea,0xcaaf6565,0xf48e7a7a,0x47e9aeae,0x10180808,0x6fd5baba,0xf0887878,0x4a6f2525,0x5c722e2e,0x38241c1c,0x57f1a6a6,0x73c7b4b4,0x9751c6c6,0xcb23e8e8,0xa17cdddd,0xe89c7474,0x3e211f1f,0x96dd4b4b,0x61dcbdbd,0x0d868b8b,0x0f858a8a,0xe0907070,0x7c423e3e,0x71c4b5b5,0xccaa6666,0x90d84848,0x06050303,0xf701f6f6,0x1c120e0e,0xc2a36161,0x6a5f3535,0xaef95757,0x69d0b9b9,0x17918686,0x9958c1c1,0x3a271d1d,0x27b99e9e,0xd938e1e1,0xeb13f8f8,0x2bb39898,0x22331111,0xd2bb6969,0xa970d9d9,0x07898e8e,0x33a79494,0x2db69b9b,0x3c221e1e,0x15928787,0xc920e9e9,0x8749cece,0xaaff5555,0x50782828,0xa57adfdf,0x038f8c8c,0x59f8a1a1,0x09808989,0x1a170d0d,0x65dabfbf,0xd731e6e6,0x84c64242,0xd0b86868,0x82c34141,0x29b09999,0x5a772d2d,0x1e110f0f,0x7bcbb0b0,0xa8fc5454,0x6dd6bbbb,0x2c3a1616];final FC=[0x50a7f451,0x5365417e,0xc3a4171a,0x965e273a,0xcb6bab3b,0xf1459d1f,0xab58faac,0x9303e34b,0x55fa3020,0xf66d76ad,0x9176cc88,0x254c02f5,0xfcd7e54f,0xd7cb2ac5,0x80443526,0x8fa362b5,0x495ab1de,0x671bba25,0x980eea45,0xe1c0fe5d,0x02752fc3,0x12f04c81,0xa397468d,0xc6f9d36b,0xe75f8f03,0x959c9215,0xeb7a6dbf,0xda595295,0x2d83bed4,0xd3217458,0x2969e049,0x44c8c98e,0x6a89c275,0x78798ef4,0x6b3e5899,0xdd71b927,0xb64fe1be,0x17ad88f0,0x66ac20c9,0xb43ace7d,0x184adf63,0x82311ae5,0x60335197,0x457f5362,0xe07764b1,0x84ae6bbb,0x1ca081fe,0x942b08f9,0x58684870,0x19fd458f,0x876cde94,0xb7f87b52,0x23d373ab,0xe2024b72,0x578f1fe3,0x2aab5566,0x0728ebb2,0x03c2b52f,0x9a7bc586,0xa50837d3,0xf2872830,0xb2a5bf23,0xba6a0302,0x5c8216ed,0x2b1ccf8a,0x92b479a7,0xf0f207f3,0xa1e2694e,0xcdf4da65,0xd5be0506,0x1f6234d1,0x8afea6c4,0x9d532e34,0xa055f3a2,0x32e18a05,0x75ebf6a4,0x39ec830b,0xaaef6040,0x069f715e,0x51106ebd,0xf98a213e,0x3d06dd96,0xae053edd,0x46bde64d,0xb58d5491,0x055dc471,0x6fd40604,0xff155060,0x24fb9819,0x97e9bdd6,0xcc434089,0x779ed967,0xbd42e8b0,0x888b8907,0x385b19e7,0xdbeec879,0x470a7ca1,0xe90f427c,0xc91e84f8,0x00000000,0x83868009,0x48ed2b32,0xac70111e,0x4e725a6c,0xfbff0efd,0x5638850f,0x1ed5ae3d,0x27392d36,0x64d90f0a,0x21a65c68,0xd1545b9b,0x3a2e3624,0xb1670a0c,0x0fe75793,0xd296eeb4,0x9e919b1b,0x4fc5c080,0xa220dc61,0x694b775a,0x161a121c,0x0aba93e2,0xe52aa0c0,0x43e0223c,0x1d171b12,0x0b0d090e,0xadc78bf2,0xb9a8b62d,0xc8a91e14,0x8519f157,0x4c0775af,0xbbdd99ee,0xfd607fa3,0x9f2601f7,0xbcf5725c,0xc53b6644,0x347efb5b,0x7629438b,0xdcc623cb,0x68fcedb6,0x63f1e4b8,0xcadc31d7,0x10856342,0x40229713,0x2011c684,0x7d244a85,0xf83dbbd2,0x1132f9ae,0x6da129c7,0x4b2f9e1d,0xf330b2dc,0xec52860d,0xd0e3c177,0x6c16b32b,0x99b970a9,0xfa489411,0x2264e947,0xc48cfca8,0x1a3ff0a0,0xd82c7d56,0xef903322,0xc74e4987,0xc1d138d9,0xfea2ca8c,0x360bd498,0xcf81f5a6,0x28de7aa5,0x268eb7da,0xa4bfad3f,0xe49d3a2c,0x0d927850,0x9bcc5f6a,0x62467e54,0xc2138df6,0xe8b8d890,0x5ef7392e,0xf5afc382,0xbe805d9f,0x7c93d069,0xa92dd56f,0xb31225cf,0x3b99acc8,0xa77d1810,0x6e639ce8,0x7bbb3bdb,0x097826cd,0xf418596e,0x01b79aec,0xa89a4f83,0x656e95e6,0x7ee6ffaa,0x08cfbc21,0xe6e815ef,0xd99be7ba,0xce366f4a,0xd4099fea,0xd67cb029,0xafb2a431,0x31233f2a,0x3094a5c6,0xc066a235,0x37bc4e74,0xa6ca82fc,0xb0d090e0,0x15d8a733,0x4a9804f1,0xf7daec41,0x0e50cd7f,0x2ff69117,0x8dd64d76,0x4db0ef43,0x544daacc,0xdf0496e4,0xe3b5d19e,0x1b886a4c,0xb81f2cc1,0x7f516546,0x04ea5e9d,0x5d358c01,0x737487fa,0x2e410bfb,0x5a1d67b3,0x52d2db92,0x335610e9,0x1347d66d,0x8c61d79a,0x7a0ca137,0x8e14f859,0x893c13eb,0xee27a9ce,0x35c961b7,0xede51ce1,0x3cb1477a,0x59dfd29c,0x3f73f255,0x79ce1418,0xbf37c773,0xeacdf753,0x5baafd5f,0x146f3ddf,0x86db4478,0x81f3afca,0x3ec468b9,0x2c342438,0x5f40a3c2,0x72c31d16,0x0c25e2bc,0x8b493c28,0x41950dff,0x7101a839,0xdeb30c08,0x9ce4b4d8,0x90c15664,0x6184cb7b,0x70b632d5,0x745c6c48,0x4257b8d0];final GC=[0xa7f45150,0x65417e53,0xa4171ac3,0x5e273a96,0x6bab3bcb,0x459d1ff1,0x58faacab,0x03e34b93,0xfa302055,0x6d76adf6,0x76cc8891,0x4c02f525,0xd7e54ffc,0xcb2ac5d7,0x44352680,0xa362b58f,0x5ab1de49,0x1bba2567,0x0eea4598,0xc0fe5de1,0x752fc302,0xf04c8112,0x97468da3,0xf9d36bc6,0x5f8f03e7,0x9c921595,0x7a6dbfeb,0x595295da,0x83bed42d,0x217458d3,0x69e04929,0xc8c98e44,0x89c2756a,0x798ef478,0x3e58996b,0x71b927dd,0x4fe1beb6,0xad88f017,0xac20c966,0x3ace7db4,0x4adf6318,0x311ae582,0x33519760,0x7f536245,0x7764b1e0,0xae6bbb84,0xa081fe1c,0x2b08f994,0x68487058,0xfd458f19,0x6cde9487,0xf87b52b7,0xd373ab23,0x024b72e2,0x8f1fe357,0xab55662a,0x28ebb207,0xc2b52f03,0x7bc5869a,0x0837d3a5,0x872830f2,0xa5bf23b2,0x6a0302ba,0x8216ed5c,0x1ccf8a2b,0xb479a792,0xf207f3f0,0xe2694ea1,0xf4da65cd,0xbe0506d5,0x6234d11f,0xfea6c48a,0x532e349d,0x55f3a2a0,0xe18a0532,0xebf6a475,0xec830b39,0xef6040aa,0x9f715e06,0x106ebd51,0x8a213ef9,0x06dd963d,0x053eddae,0xbde64d46,0x8d5491b5,0x5dc47105,0xd406046f,0x155060ff,0xfb981924,0xe9bdd697,0x434089cc,0x9ed96777,0x42e8b0bd,0x8b890788,0x5b19e738,0xeec879db,0x0a7ca147,0x0f427ce9,0x1e84f8c9,0x00000000,0x86800983,0xed2b3248,0x70111eac,0x725a6c4e,0xff0efdfb,0x38850f56,0xd5ae3d1e,0x392d3627,0xd90f0a64,0xa65c6821,0x545b9bd1,0x2e36243a,0x670a0cb1,0xe757930f,0x96eeb4d2,0x919b1b9e,0xc5c0804f,0x20dc61a2,0x4b775a69,0x1a121c16,0xba93e20a,0x2aa0c0e5,0xe0223c43,0x171b121d,0x0d090e0b,0xc78bf2ad,0xa8b62db9,0xa91e14c8,0x19f15785,0x0775af4c,0xdd99eebb,0x607fa3fd,0x2601f79f,0xf5725cbc,0x3b6644c5,0x7efb5b34,0x29438b76,0xc623cbdc,0xfcedb668,0xf1e4b863,0xdc31d7ca,0x85634210,0x22971340,0x11c68420,0x244a857d,0x3dbbd2f8,0x32f9ae11,0xa129c76d,0x2f9e1d4b,0x30b2dcf3,0x52860dec,0xe3c177d0,0x16b32b6c,0xb970a999,0x489411fa,0x64e94722,0x8cfca8c4,0x3ff0a01a,0x2c7d56d8,0x903322ef,0x4e4987c7,0xd138d9c1,0xa2ca8cfe,0x0bd49836,0x81f5a6cf,0xde7aa528,0x8eb7da26,0xbfad3fa4,0x9d3a2ce4,0x9278500d,0xcc5f6a9b,0x467e5462,0x138df6c2,0xb8d890e8,0xf7392e5e,0xafc382f5,0x805d9fbe,0x93d0697c,0x2dd56fa9,0x1225cfb3,0x99acc83b,0x7d1810a7,0x639ce86e,0xbb3bdb7b,0x7826cd09,0x18596ef4,0xb79aec01,0x9a4f83a8,0x6e95e665,0xe6ffaa7e,0xcfbc2108,0xe815efe6,0x9be7bad9,0x366f4ace,0x099fead4,0x7cb029d6,0xb2a431af,0x233f2a31,0x94a5c630,0x66a235c0,0xbc4e7437,0xca82fca6,0xd090e0b0,0xd8a73315,0x9804f14a,0xdaec41f7,0x50cd7f0e,0xf691172f,0xd64d768d,0xb0ef434d,0x4daacc54,0x0496e4df,0xb5d19ee3,0x886a4c1b,0x1f2cc1b8,0x5165467f,0xea5e9d04,0x358c015d,0x7487fa73,0x410bfb2e,0x1d67b35a,0xd2db9252,0x5610e933,0x47d66d13,0x61d79a8c,0x0ca1377a,0x14f8598e,0x3c13eb89,0x27a9ceee,0xc961b735,0xe51ce1ed,0xb1477a3c,0xdfd29c59,0x73f2553f,0xce141879,0x37c773bf,0xcdf753ea,0xaafd5f5b,0x6f3ddf14,0xdb447886,0xf3afca81,0xc468b93e,0x3424382c,0x40a3c25f,0xc31d1672,0x25e2bc0c,0x493c288b,0x950dff41,0x01a83971,0xb30c08de,0xe4b4d89c,0xc1566490,0x84cb7b61,0xb632d570,0x5c6c4874,0x57b8d042];final HC=[0xf45150a7,0x417e5365,0x171ac3a4,0x273a965e,0xab3bcb6b,0x9d1ff145,0xfaacab58,0xe34b9303,0x302055fa,0x76adf66d,0xcc889176,0x02f5254c,0xe54ffcd7,0x2ac5d7cb,0x35268044,0x62b58fa3,0xb1de495a,0xba25671b,0xea45980e,0xfe5de1c0,0x2fc30275,0x4c8112f0,0x468da397,0xd36bc6f9,0x8f03e75f,0x9215959c,0x6dbfeb7a,0x5295da59,0xbed42d83,0x7458d321,0xe0492969,0xc98e44c8,0xc2756a89,0x8ef47879,0x58996b3e,0xb927dd71,0xe1beb64f,0x88f017ad,0x20c966ac,0xce7db43a,0xdf63184a,0x1ae58231,0x51976033,0x5362457f,0x64b1e077,0x6bbb84ae,0x81fe1ca0,0x08f9942b,0x48705868,0x458f19fd,0xde94876c,0x7b52b7f8,0x73ab23d3,0x4b72e202,0x1fe3578f,0x55662aab,0xebb20728,0xb52f03c2,0xc5869a7b,0x37d3a508,0x2830f287,0xbf23b2a5,0x0302ba6a,0x16ed5c82,0xcf8a2b1c,0x79a792b4,0x07f3f0f2,0x694ea1e2,0xda65cdf4,0x0506d5be,0x34d11f62,0xa6c48afe,0x2e349d53,0xf3a2a055,0x8a0532e1,0xf6a475eb,0x830b39ec,0x6040aaef,0x715e069f,0x6ebd5110,0x213ef98a,0xdd963d06,0x3eddae05,0xe64d46bd,0x5491b58d,0xc471055d,0x06046fd4,0x5060ff15,0x981924fb,0xbdd697e9,0x4089cc43,0xd967779e,0xe8b0bd42,0x8907888b,0x19e7385b,0xc879dbee,0x7ca1470a,0x427ce90f,0x84f8c91e,0x00000000,0x80098386,0x2b3248ed,0x111eac70,0x5a6c4e72,0x0efdfbff,0x850f5638,0xae3d1ed5,0x2d362739,0x0f0a64d9,0x5c6821a6,0x5b9bd154,0x36243a2e,0x0a0cb167,0x57930fe7,0xeeb4d296,0x9b1b9e91,0xc0804fc5,0xdc61a220,0x775a694b,0x121c161a,0x93e20aba,0xa0c0e52a,0x223c43e0,0x1b121d17,0x090e0b0d,0x8bf2adc7,0xb62db9a8,0x1e14c8a9,0xf1578519,0x75af4c07,0x99eebbdd,0x7fa3fd60,0x01f79f26,0x725cbcf5,0x6644c53b,0xfb5b347e,0x438b7629,0x23cbdcc6,0xedb668fc,0xe4b863f1,0x31d7cadc,0x63421085,0x97134022,0xc6842011,0x4a857d24,0xbbd2f83d,0xf9ae1132,0x29c76da1,0x9e1d4b2f,0xb2dcf330,0x860dec52,0xc177d0e3,0xb32b6c16,0x70a999b9,0x9411fa48,0xe9472264,0xfca8c48c,0xf0a01a3f,0x7d56d82c,0x3322ef90,0x4987c74e,0x38d9c1d1,0xca8cfea2,0xd498360b,0xf5a6cf81,0x7aa528de,0xb7da268e,0xad3fa4bf,0x3a2ce49d,0x78500d92,0x5f6a9bcc,0x7e546246,0x8df6c213,0xd890e8b8,0x392e5ef7,0xc382f5af,0x5d9fbe80,0xd0697c93,0xd56fa92d,0x25cfb312,0xacc83b99,0x1810a77d,0x9ce86e63,0x3bdb7bbb,0x26cd0978,0x596ef418,0x9aec01b7,0x4f83a89a,0x95e6656e,0xffaa7ee6,0xbc2108cf,0x15efe6e8,0xe7bad99b,0x6f4ace36,0x9fead409,0xb029d67c,0xa431afb2,0x3f2a3123,0xa5c63094,0xa235c066,0x4e7437bc,0x82fca6ca,0x90e0b0d0,0xa73315d8,0x04f14a98,0xec41f7da,0xcd7f0e50,0x91172ff6,0x4d768dd6,0xef434db0,0xaacc544d,0x96e4df04,0xd19ee3b5,0x6a4c1b88,0x2cc1b81f,0x65467f51,0x5e9d04ea,0x8c015d35,0x87fa7374,0x0bfb2e41,0x67b35a1d,0xdb9252d2,0x10e93356,0xd66d1347,0xd79a8c61,0xa1377a0c,0xf8598e14,0x13eb893c,0xa9ceee27,0x61b735c9,0x1ce1ede5,0x477a3cb1,0xd29c59df,0xf2553f73,0x141879ce,0xc773bf37,0xf753eacd,0xfd5f5baa,0x3ddf146f,0x447886db,0xafca81f3,0x68b93ec4,0x24382c34,0xa3c25f40,0x1d1672c3,0xe2bc0c25,0x3c288b49,0x0dff4195,0xa8397101,0x0c08deb3,0xb4d89ce4,0x566490c1,0xcb7b6184,0x32d570b6,0x6c48745c,0xb8d04257];final IC=[0x5150a7f4,0x7e536541,0x1ac3a417,0x3a965e27,0x3bcb6bab,0x1ff1459d,0xacab58fa,0x4b9303e3,0x2055fa30,0xadf66d76,0x889176cc,0xf5254c02,0x4ffcd7e5,0xc5d7cb2a,0x26804435,0xb58fa362,0xde495ab1,0x25671bba,0x45980eea,0x5de1c0fe,0xc302752f,0x8112f04c,0x8da39746,0x6bc6f9d3,0x03e75f8f,0x15959c92,0xbfeb7a6d,0x95da5952,0xd42d83be,0x58d32174,0x492969e0,0x8e44c8c9,0x756a89c2,0xf478798e,0x996b3e58,0x27dd71b9,0xbeb64fe1,0xf017ad88,0xc966ac20,0x7db43ace,0x63184adf,0xe582311a,0x97603351,0x62457f53,0xb1e07764,0xbb84ae6b,0xfe1ca081,0xf9942b08,0x70586848,0x8f19fd45,0x94876cde,0x52b7f87b,0xab23d373,0x72e2024b,0xe3578f1f,0x662aab55,0xb20728eb,0x2f03c2b5,0x869a7bc5,0xd3a50837,0x30f28728,0x23b2a5bf,0x02ba6a03,0xed5c8216,0x8a2b1ccf,0xa792b479,0xf3f0f207,0x4ea1e269,0x65cdf4da,0x06d5be05,0xd11f6234,0xc48afea6,0x349d532e,0xa2a055f3,0x0532e18a,0xa475ebf6,0x0b39ec83,0x40aaef60,0x5e069f71,0xbd51106e,0x3ef98a21,0x963d06dd,0xddae053e,0x4d46bde6,0x91b58d54,0x71055dc4,0x046fd406,0x60ff1550,0x1924fb98,0xd697e9bd,0x89cc4340,0x67779ed9,0xb0bd42e8,0x07888b89,0xe7385b19,0x79dbeec8,0xa1470a7c,0x7ce90f42,0xf8c91e84,0x00000000,0x09838680,0x3248ed2b,0x1eac7011,0x6c4e725a,0xfdfbff0e,0x0f563885,0x3d1ed5ae,0x3627392d,0x0a64d90f,0x6821a65c,0x9bd1545b,0x243a2e36,0x0cb1670a,0x930fe757,0xb4d296ee,0x1b9e919b,0x804fc5c0,0x61a220dc,0x5a694b77,0x1c161a12,0xe20aba93,0xc0e52aa0,0x3c43e022,0x121d171b,0x0e0b0d09,0xf2adc78b,0x2db9a8b6,0x14c8a91e,0x578519f1,0xaf4c0775,0xeebbdd99,0xa3fd607f,0xf79f2601,0x5cbcf572,0x44c53b66,0x5b347efb,0x8b762943,0xcbdcc623,0xb668fced,0xb863f1e4,0xd7cadc31,0x42108563,0x13402297,0x842011c6,0x857d244a,0xd2f83dbb,0xae1132f9,0xc76da129,0x1d4b2f9e,0xdcf330b2,0x0dec5286,0x77d0e3c1,0x2b6c16b3,0xa999b970,0x11fa4894,0x472264e9,0xa8c48cfc,0xa01a3ff0,0x56d82c7d,0x22ef9033,0x87c74e49,0xd9c1d138,0x8cfea2ca,0x98360bd4,0xa6cf81f5,0xa528de7a,0xda268eb7,0x3fa4bfad,0x2ce49d3a,0x500d9278,0x6a9bcc5f,0x5462467e,0xf6c2138d,0x90e8b8d8,0x2e5ef739,0x82f5afc3,0x9fbe805d,0x697c93d0,0x6fa92dd5,0xcfb31225,0xc83b99ac,0x10a77d18,0xe86e639c,0xdb7bbb3b,0xcd097826,0x6ef41859,0xec01b79a,0x83a89a4f,0xe6656e95,0xaa7ee6ff,0x2108cfbc,0xefe6e815,0xbad99be7,0x4ace366f,0xead4099f,0x29d67cb0,0x31afb2a4,0x2a31233f,0xc63094a5,0x35c066a2,0x7437bc4e,0xfca6ca82,0xe0b0d090,0x3315d8a7,0xf14a9804,0x41f7daec,0x7f0e50cd,0x172ff691,0x768dd64d,0x434db0ef,0xcc544daa,0xe4df0496,0x9ee3b5d1,0x4c1b886a,0xc1b81f2c,0x467f5165,0x9d04ea5e,0x015d358c,0xfa737487,0xfb2e410b,0xb35a1d67,0x9252d2db,0xe9335610,0x6d1347d6,0x9a8c61d7,0x377a0ca1,0x598e14f8,0xeb893c13,0xceee27a9,0xb735c961,0xe1ede51c,0x7a3cb147,0x9c59dfd2,0x553f73f2,0x1879ce14,0x73bf37c7,0x53eacdf7,0x5f5baafd,0xdf146f3d,0x7886db44,0xca81f3af,0xb93ec468,0x382c3424,0xc25f40a3,0x1672c31d,0xbc0c25e2,0x288b493c,0xff41950d,0x397101a8,0x08deb30c,0xd89ce4b4,0x6490c156,0x7b6184cb,0xd570b632,0x48745c6c,0xd04257b8];abstract class AS implements tR{}class vE extends ZL{final Uint8List key;vE(this.key);}const AI=0x1F;const wE=0xFFFFFFFF;final BS=[0xFFFFFFFF,0x7FFFFFFF,0x3FFFFFFF,0x1FFFFFFF,0x0FFFFFFF,0x07FFFFFF,0x03FFFFFF,0x01FFFFFF,0x00FFFFFF,0x007FFFFF,0x003FFFFF,0x001FFFFF,0x000FFFFF,0x0007FFFF,0x0003FFFF,0x0001FFFF,0x0000FFFF,0x00007FFF,0x00003FFF,0x00001FFF,0x00000FFF,0x000007FF,0x000003FF,0x000001FF,0x000000FF,0x0000007F,0x0000003F,0x0000001F,0x0000000F,0x00000007,0x00000003,0x00000001,0x00000000];int CS(int A,int B){assert((A>=0)&&(A<=wE));B&= AI;A&= BS[B];return ((A<<B)&wE);}int DS(int A,int B){assert((A>=0)&&(A<=wE));B&= AI;return (A>>B);}int ES(int A,int B){assert(B>=0);assert((A>=0)&&(A<=wE));B&= AI;return (A>>B)|CS(A,(32-B));}void wF(int B,dynamic A,int C,Endianness D){assert((B>=0)&&(B<=wE));if(A is!ByteData){A=new ByteData.view(A.buffer);}(A as ByteData).setUint32(C,B,D);}int xE(dynamic A,int B,Endianness C){if(A is!ByteData){A=new ByteData.view(A.buffer);}return (A as ByteData).getUint32(B,C);}const String kS='\u001b[31m';const String MM='\u001b[0m';sC XS()=>new sC.AX();class sC{factory sC({KB style,String current}){if(current==null){if(style==null){current=hL;}else{current=".";}}if(style==null){style=KB.II;}else if(style is!uC){throw new ArgumentError("Only styles defined by the path package are " "allowed.");}return new sC.BX(style as uC,current);}sC.AX():Q=KB.II as uC,UY=null;sC.BX(this.Q,this.UY);final uC Q;final String UY;String get current=>UY!=null?UY:hL;String get RC=>Q.RC;String absolute(String A,[String B,String C,String D,String G,String I,String J]){pL("absolute",[A,B,C,D,G,I,J]);if(B==null&&isAbsolute(A)&&!TB(A)){return A;}return join(current,A,B,C,D,G,I,J);}String mJ(String A)=>VY(A).mJ;String yJ(String A)=>VY(A).yJ;bool isAbsolute(String A)=>Q.bC(A)>0;bool bF(String A)=>!this.isAbsolute(A);bool TB(String A)=>Q.TB(A);String join(String B,[String C,String D,String G,String I,String J,String M,String R]){var A=<String>[B,C,D,G,I,J,M,R];pL("join",A);return MW(A.where((S)=>S!=null));}String MW(Iterable<String> J){var B=new StringBuffer();var D=false;var G=false;for(var A in J.where((A)=>A!='')){if(this.TB(A)&&G){var C=VY(A);var I=B.toString();C.n=I.substring(0,Q.bC(I,withDrive:true));if(Q.mE(C.n)){C.UB[0]=Q.RC;}B.clear();B.write(C.toString());}else if(this.isAbsolute(A)){G=!this.TB(A);B.clear();B.write(A);}else{if(A.length>0&&Q.EH(A[0])){}else if(D){B.write(RC);}B.write(A);}D=Q.mE(A);}return B.toString();}List<String> split(String B){var A=VY(B);A.e=A.e.where((C)=>!C.isEmpty).toList();if(A.n!=null)A.e.insert(0,A.n);return A.e;}String lD(String A){if(!WY(A))return A;var B=VY(A);B.lD();return B.toString();}bool WY(String J){var M=0;var D=J.codeUnits;int B;int A;var G=Q.bC(J);if(G!=0){M=G;A=JC;if(Q==KB.AG){for(var C=0;C<G;C++ ){if(D[C]==JC)return true;}}}for(var C=M;C<D.length;C++ ){var I=D[C];if(Q.b(I)){if(Q==KB.AG&&I==JC)return true;if(A!=null&&Q.b(A))return true;if(A==qB&&(B==null||B==qB||Q.b(B))){return true;}}B=A;A=I;}if(A==null)return true;if(Q.b(A))return true;if(A==qB&&(B==null||Q.b(B)||B==qB)){return true;}return false;}String RK(String C,{String from}){if(from==null&&this.bF(C))return this.lD(C);from=from==null?current:absolute(from);if(this.bF(from)&&this.isAbsolute(C)){return this.lD(C);}if(this.bF(C)||this.TB(C)){C=this.absolute(C);}if(this.bF(C)&&this.isAbsolute(from)){throw new zF('Unable to find a path to "${C}" from "${from}".');}var B=VY(from)..lD();var A=VY(C)..lD();if(B.e.length>0&&B.e[0]=='.'){return A.toString();}if(B.n!=A.n&&((B.n==null||A.n==null)||!Q.QK(B.n,A.n))){return A.toString();}while(B.e.length>0&&A.e.length>0&&Q.QK(B.e[0],A.e[0])){B.e.removeAt(0);B.UB.removeAt(1);A.e.removeAt(0);A.UB.removeAt(1);}if(B.e.length>0&&B.e[0]=='..'){throw new zF('Unable to find a path to "${C}" from "${from}".');}A.e.insertAll(0,new List.filled(B.e.length,'..'));A.UB[0]='';A.UB.insertAll(1,new List.filled(B.e.length,Q.RC));if(A.e.length==0)return '.';if(A.e.length>1&&A.e.last=='.'){A.e.removeLast();A.UB..removeLast()..removeLast()..add('');}A.n='';A.SK();return A.toString();}bool HD(String A,String B)=>XY(A,B)==j.yF;j XY(String A,String B){var D=isAbsolute(A);var G=isAbsolute(B);if(D&&!G){B=absolute(B);if(Q.TB(A))A=absolute(A);}else if(G&&!D){A=absolute(A);if(Q.TB(B))B=absolute(B);}else if(G&&D){var I=Q.TB(B);var J=Q.TB(A);if(I&&!J){B=absolute(B);}else if(J&&!I){A=absolute(A);}}var M=YY(A,B);if(M!=j.sD)return M;String C;try {C=this.RK(B,from:A);}on zF catch (R){return j.tC;}if(!this.bF(C))return j.tC;if(C=='.')return j.yF;if(C=='..')return j.tC;return (C.length>=3&&C.startsWith('..')&&Q.b(C.codeUnitAt(2)))?j.tC:j.qL;}j YY(String C,String D){if(C=='.')C='';var R=Q.bC(C);var o=Q.bC(D);if(R!=o)return j.tC;for(var Z=0;Z<R;Z++ ){var G=C.codeUnitAt(Z);var I=D.codeUnitAt(Z);if(!Q.BH(G,I)){return j.tC;}}var J=JC;int M;var A=R;var B=o;while(A<C.length&&B<D.length){var G=C.codeUnitAt(A);var I=D.codeUnitAt(B);if(Q.BH(G,I)){if(Q.b(G)){M=A;}J=G;A++ ;B++ ;continue;}if(Q.b(G)&&Q.b(J)){M=A;A++ ;continue;}else if(Q.b(I)&&Q.b(J)){B++ ;continue;}if(G==qB&&Q.b(J)){A++ ;if(A==C.length)break;G=C.codeUnitAt(A);if(Q.b(G)){M=A;A++ ;continue;}if(G==qB){A++ ;if(A==C.length||Q.b(C.codeUnitAt(A))){return j.sD;}}}if(I==qB&&Q.b(J)){B++ ;if(B==D.length)break;I=D.codeUnitAt(B);if(Q.b(I)){B++ ;continue;}if(I==qB){B++ ;if(B==D.length||Q.b(D.codeUnitAt(B))){return j.sD;}}}var SB=ZY(D,B);if(SB!=cB.HI){return j.sD;}var aB=ZY(C,A);if(aB!=cB.HI){return j.sD;}return j.tC;}if(B==D.length){if(A==C.length||Q.b(C.codeUnitAt(A))){M=A;}else{M??= NE.max(0,R-1);}var S=ZY(C,M??R-1);if(S==cB.GI)return j.yF;return S==cB.FI?j.sD:j.tC;}var S=ZY(D,B);if(S==cB.GI)return j.yF;if(S==cB.FI){return j.sD;}return (Q.b(D.codeUnitAt(B))||Q.b(J))?j.qL:j.tC;}cB ZY(String B,int I){var C=0;var G=false;var A=I;while(A<B.length){while(A<B.length&&Q.b(B.codeUnitAt(A))){A++ ;}if(A==B.length)break;var D=A;while(A<B.length&&!Q.b(B.codeUnitAt(A))){A++ ;}if(A-D==1&&B.codeUnitAt(D)==qB){}else if(A-D==2&&B.codeUnitAt(D)==qB&&B.codeUnitAt(D+1)==qB){C-- ;if(C<0)break;if(C==0)G=true;}else{C++ ;}if(A==B.length)break;A++ ;}if(C<0)return cB.FI;if(C==0)return cB.GI;if(G)return cB.YS;return cB.HI;}int JD(String A){A=absolute(A);var B=aY(A);if(B!=null)return B;var C=VY(A);C.lD();return aY(C.toString());}int aY(String B){var C=4603;var I=true;var D=true;for(var A=0;A<B.length;A++ ){var G=Q.LO(B.codeUnitAt(A));if(Q.b(G)){D=true;continue;}if(G==qB&&D){if(A+1==B.length)break;var J=B.codeUnitAt(A+1);if(Q.b(J))continue;if(!I&&J==qB&&(A+2==B.length||Q.b(B.codeUnitAt(A+2)))){return null;}}C&= 0x3FFFFFF;C*= 33;C^= G;D=false;I=false;}return C;}String vV(A)=>Q.hF(oL(A));String bW(D){var A=oL(D);if(A.scheme=='file'&&Q==KB.BF){return A.toString();}else if(A.scheme!='file'&&A.scheme!=''&&Q!=KB.BF){return A.toString();}var B=lD(vV(A));var C=RK(B);return split(C).length>split(B).length?B:C;}tD VY(String A)=>new tD.CX(A,Q);}Uri oL(A){if(A is String)return Uri.parse(A);if(A is Uri)return A;throw new ArgumentError.value(A,'uri','Value must be a String or a Uri');}void pL(String I,List<String> A){for(var B=1;B<A.length;B++ ){if(A[B]==null||A[B-1]!=null)continue;int C;for(C=A.length;C>=1;C-- ){if(A[C-1]!=null)break;}var D=new StringBuffer();D.write("${I}(");D.write(A.take(C).map((G)=>G==null?"null":'"${G}"').join(", "));D.write("): part ${B-1} was null, but part ${B} was not.");throw new ArgumentError(D.toString());}}class cB{static const FI=const cB("above root");static const GI=const cB("at root");static const YS=const cB("reaches root");static const HI=const cB("below root");final String name;const cB(this.name);String toString()=>name;}class j{static const qL=const j("within");static const yF=const j("equal");static const tC=const j("different");static const sD=const j("inconclusive");final String name;const j(this.name);String toString()=>name;}const String QR=',';const String RR='"';const String SR='\r\n';class tH extends Converter<List<List>,String> implements StreamTransformer{final String fieldDelimiter;final String KQ;final String ZK;final String eol;const tH({this.fieldDelimiter: QR,String textDelimiter: RR,String textEndDelimiter,this.eol: SR}):this.KQ=textDelimiter,this.ZK=textEndDelimiter!=null?textEndDelimiter:textDelimiter;String convert(List<List> B,{String fieldDelimiter,String textDelimiter,String textEndDelimiter,String eol}){if(B==null)return '';if(eol==null)eol=this.eol;if(eol==null){throw new ArgumentError('Eol string must not be null');}var A=new StringBuffer();var C='';B.forEach((D){A.write(C);C=eol;fV(A,D,fieldDelimiter:fieldDelimiter,textDelimiter:textDelimiter,textEndDelimiter:textEndDelimiter,eol:eol);});return A.toString();}uH startChunkedConversion(Sink<String> A){return new uH(this,A);}String fV(StringBuffer A,List C,{String fieldDelimiter,String textDelimiter,String textEndDelimiter,String eol}){if(C==null||C.isEmpty)return '';fieldDelimiter=fieldDelimiter!=null?fieldDelimiter:this.fieldDelimiter;textDelimiter=textDelimiter!=null?textDelimiter:this.KQ;if(textEndDelimiter==null){textEndDelimiter=this.ZK!=null?this.ZK:textDelimiter;}eol=eol!=null?eol:this.eol;if(fieldDelimiter==null||textDelimiter==null){throw new ArgumentError('Field Delimiter (${fieldDelimiter}) and Text Delimiter (${textDelimiter}) must not be null.');}if(fieldDelimiter==textDelimiter){throw new ArgumentError('Field Delimiter (${fieldDelimiter}) and Text Delimiter (${textDelimiter}) must not be equal.');}var D='';C.fold(A,(StringBuffer A,G){String B=G.toString();if(bY(B,[fieldDelimiter,textDelimiter,textEndDelimiter,eol])){if(bY(B,[textEndDelimiter])){var I="${textEndDelimiter}${textEndDelimiter}";B=B.replaceAll(textEndDelimiter,I);}A..write(D)..write(textDelimiter)..write(B)..write(textEndDelimiter);}else{A..write(D)..write(B);}D=fieldDelimiter;return A;});return A.toString();}bool bY(String C,List<String> D){var A=new Set<int>();D.forEach((G)=>A.addAll(G.codeUnits));var B=C.codeUnits.iterator;while(B.moveNext()){if(A.contains(B.current))return true;}return false;}}class uH extends ChunkedConversionSink<List>{final tH cY;final Sink<String> dY;uH(this.cY,this.dY);void add(List A){dY.add(cY.convert([A,null]));}void close(){dY.close();}}class TC{final String username;final bool JQ;final String eO;final Map metadata;TC(this.username,this.JQ,[this.eO,Map A]):metadata=A is!Map?{}:A;static TC TR(Map A){var B=new TC(A["username"],A["superuser"] is bool?A["superuser"]:false,A["email"],A["metadata"]);for(String C in A.keys.where((D)=>!(const["username","superuser","email","metadata"]).contains(D))){B.HW[C]=A[C];}return B;}TC PO(){return new TC(username,JQ,eO,new Map.from(metadata));}Map<String,dynamic> HW={};}String UR(List<int> A){return const JL().convert(A);}List<int> VR(String A){return const KL().convert(A);}class JL extends Converter<List<int>,String>{final bool TQ;final bool lJ;const JL([bool this.TQ=false,bool this.lJ=false]);static const int vH=61;static const int WR=13;static const int XR=10;static const int YR=76;static const String ZR="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";static const String aR="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";String convert(List<int> G){int J=G.length;if(J==0){return "";}final String D=TQ?aR:ZR;final int M=J.remainder(3);final int o=J-M;int R=((J~/3)*4)+((M>0)?4:0);if(lJ){R+= ((R-1)~/YR)<<1;}List<int> A=new List<int>(R);int B=0,I=0,S=0;while(I<o){int C=((G[I++ ]<<16)&0xFFFFFF)|((G[I++ ]<<8)&0xFFFFFF)|G[I++ ];A[B++ ]=D.codeUnitAt(C>>18);A[B++ ]=D.codeUnitAt((C>>12)&0x3F);A[B++ ]=D.codeUnitAt((C>>6)&0x3F);A[B++ ]=D.codeUnitAt(C&0x3f);if(lJ&& ++S==19&&B<R-2){A[B++ ]=WR;A[B++ ]=XR;S=0;}}if(M==1){int C=G[I];A[B++ ]=D.codeUnitAt(C>>2);A[B++ ]=D.codeUnitAt((C<<4)&0x3F);A[B++ ]=vH;A[B++ ]=vH;}else if(M==2){int C=G[I];int Z=G[I+1];A[B++ ]=D.codeUnitAt(C>>2);A[B++ ]=D.codeUnitAt(((C<<4)|(Z>>4))&0x3F);A[B++ ]=D.codeUnitAt((Z<<2)&0x3F);A[B++ ]=vH;}return new String.fromCharCodes(A);}}class KL extends Converter<String,List<int>>{const KL();static const List<int> wH=const[-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-2,-2,-1,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,62,-2,62,-2,63,52,53,54,55,56,57,58,59,60,61,-2,-2,-2,0,-2,-2,-2,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-2,-2,-2,-2,63,-2,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2];static const int bR=61;List<int> convert(String B){int D=B.length;if(D==0){return new List<int>(0);}int R=0;for(int A=0;A<D;A++ ){int G=wH[B.codeUnitAt(A)];if(G<0){R++ ;if(G==-2){throw new FormatException('Invalid character: ${B[A]}');}}}if((D-R)%4!=0){throw new FormatException('''Size of Base 64 characters in Input
          must be a multiple of 4. Input: ${B}''');}int S=0;for(int A=D-1;A>=0;A-- ){int Z=B.codeUnitAt(A);if(wH[Z]>0)break;if(Z==bR)S++ ;}int J=(((D-R)*6)>>3)-S;List<int> M=new Uint8List(J);for(int A=0,C=0;C<J;){int I=0;for(int o=4;o>0;){int G=wH[B.codeUnitAt(A++ )];if(G>=0){I=((I<<6)&0xFFFFFF)|G;o-- ;}}M[C++ ]=I>>16;if(C<J){M[C++ ]=(I>>8)&0xFF;if(C<J)M[C++ ]=I&0xFF;}}return M;}}class LL{bool UO;int port;int KP;String uJ;String AH;String OO;String NO;bool jO;bool gO;bool XO;bool JO;int ZQ;String host;int QQ;String nJ;String pJ;Map<String,String> YH;Map<String,Map<String,dynamic>> TP;Map<String,Map<String,dynamic>> RQ;bool IQ;String oJ;bool UK;List<String> YO;String SQ;bool rP;bool zN;void set vJ(List A){if(A!=null){var B=(List D)=>D[0]=='default';var C=A.firstWhere(B,orElse:()=>null);if(C!=null){A.removeWhere(B);A.add(C);}}eY=A;}List get vJ=>eY;List eY;bool WQ;int oP;int pP;int LK;int MK;String aP;String FP;String GO;String PQ;String VP;String cO;bool UQ;bool VQ;String dO;bool vP;bool nO;String yP;bool lO;int WP;List<String> XP;Map<String,String> proxies;Map<String,List<String>> IP;List<String> zP;List<String> TO;List<String> QP;int XQ;bool AO;bool kO;bool BO;int nP;bool RP;Map<String,String> UP;bool MQ;String xO;bool hO;String EO;Map<String,List<String>> JP;bool MP;String RO;bool iO;bool mO;int dP;String DO;String ZP;bool YP;int cP;int bP;bool IO;String SO;Map FO;RegExp fY=null;String GQ;dynamic SH;String DQ;bool vO;dynamic get(A,[B]){if(A is!List){A=[A];}for(var C in A){if(map[C]!=null){return map[C];}}if(B is Function){return B();}else{return B;}}dynamic map;void load(Map B){this.map=B;UO=get("debug",false);port=get("port",gY);KP=get(["httpsPort","httpsport"],hY);OO=get("certName","");AH=get("certPassword");iY(AH);NO=get("certKeyName","");jO=get("enableHSTS",false);gO=get("enableCSRFProtection",false);XO=get("disableFileSecurity",false);JO=get("broadcast",false);nJ=get("broadcastUrl");ZQ=get("workers",Platform.numberOfProcessors==1?1:2);QQ=get("updateInterval",200);var A=<String,String>{"/.well-known":"${Directory.current.absolute.path}/.well-known"};YH=get("static",A);if(!YH.containsKey("/.well-known")){YH.addAll(A);}TP=get("linkConfig",{});pJ=get("brokerUrl");oJ=get("brokerName","broker-");YO=get("disabledLinks",[] );UK=get("runBrokerInMain",Platform.numberOfProcessors==1?true:false);nO=get("enableUptimeChecker",true);SQ=get("uptimeCheckUrl");RQ=get("upstream",{});IQ=get("strictTls",false);rP=get("quarantine",false);zN=get("allowAllLinks",true);vJ=get("defaultPermission",null);WQ=get("useRuntimeManager",false);UQ=get("useDartRuntimeManager",false);VQ=get("useJavaRuntimeManager",false);oP=get("passwordHasherIterations",1000);pP=get("passwordHasherKeyLength",32);LK=get('old_passwordHasherIterations',null);MK=get('old_passwordHasherKeyLength',null);aP=get("loginRedirectPath","/");GO=get("authType","file");PQ=get("twoFactorAuth","none");dO=get("downstreamName","conns");vP=get("runPortChecks",true);GQ=get("storageDriver",'simple');SH=get("observe",false);host=get("host","0.0.0.0");XP=get("loggers",[] );proxies=get("proxies",{});IP=get("hooks",{});cO=get("distributionUrl",dR);VP=get("linkRepositoryUrl",cR);zP=get("serverVmFlags",[] );TO=get("dartRuntimeManagerVmFlags",[] );QP=get("javaRuntimeManagerVmFlags",[] );XQ=get("userTimeout",525600);AO=get("allowBrowserCaching",false);yP=get("serverLogLevel","INFO");lO=get("enableLogCompression",true);WP=get("logRotationInterval",0);kO=get("enableIPv6",false);FP=get("guestLoginRedirectPath",null);BO=get("allowPasswordChanges",true);nP=get("passwordExpireAfterDays",0);RP=get("keepCustomAssets",false);UP=get("linkManagerEnvironment",{});MQ=get("timeHttpRequests",false);xO=get("generatedCertificateSubject","/C=US/ST=California/L=Oakland/O=Acuity Brands Inc./OU=Customers/CN=*");hO=get("enableCertificateGeneration",true);EO=get("alternativeBrokerUrl",null);JP=get("httpPathClassification",{});MP=get("isAlwaysOffline",false);RO=get("corsProxyRules","");iO=get("enableGit",false);mO=get("enableSingleSignOnServer",false);dP=get("maxQueueSize",256);DQ=get("ssoProviderUrl",null);vO=get("formatDg5",false);DO=get("allowedCorsRegexString",null);ZP=get("loginAuditFileName","audit.log");YP=get("loginAudit",false);cP=get("loginThrottleDuration",60);bP=get("loginThrottleAttempts",5);IO=get("blockOutsideGuests",false);SO=get("customLogo",null);FO=get("audit",null);}Future<bool> SW([String A="server"])async{if(await uE.yH.DK(".docker").exists()){gY=80;hY=443;}var B=await ML(A);if(!(await B.exists())){load({"downstreamName":"downstream","corsProxyRules":""});await VK(A);return true;}var C=await gR(B);load(C);var D=WH();if(const JsonEncoder().convert(C)!=const JsonEncoder().convert(D)){await VK(A);}return false;}int hY=8443;int gY=8080;Map WH(){var A={"debug":UO,"host":host,"port":port,"httpsPort":KP,"certName":OO,"certKeyName":NO,"certPassword":AH,"enableHSTS":jO,"enableCSRFProtection":gO,"strictFileUpload":{"enabled":false,"useClamAV":false,"extensions":const["dg5","dgi","crt","key","woff","ttf","gif","svg","png","jpg","xml","json","sql","csv"]},"disableFileSecurity":XO,"isAlwaysOffline":MP,"broadcast":JO,"workers":ZQ,"updateInterval":QQ,"static":YH,"linkConfig":TP,"disabledLinks":YO,"enableUptimeChecker":nO,"uptimeCheckUrl":SQ,"upstream":RQ,"strictTls":IQ,"quarantine":rP,"allowAllLinks":zN,"defaultPermission":vJ,"useRuntimeManager":WQ,"useDartRuntimeManager":UQ,"useJavaRuntimeManager":VQ,"passwordHasherIterations":oP,"passwordHasherKeyLength":pP,"loginRedirectPath":aP,"guestLoginRedirectPath":FP,"authType":GO,"twoFactorAuth":PQ,"runPortChecks":vP,"storageDriver":GQ,"downstreamName":dO,"loggers":XP,"proxies":proxies,"hooks":IP,"distributionUrl":cO,"linkRepositoryUrl":VP,"serverVmFlags":zP,"userTimeout":XQ,"allowBrowserCaching":AO,"serverLogLevel":yP,"enableLogCompression":lO,"logRotationInterval":WP,"enableIPv6":kO,"dartRuntimeManagerVmFlags":TO,"javaRuntimeManagerVmFlags":QP,"allowPasswordChanges":BO,"passwordExpireAfterDays":nP,"keepCustomAssets":RP,"linkManagerEnvironment":UP,"timeHttpRequests":MQ,"generatedCertificateSubject":xO,"enableCertificateGeneration":hO,"alternativeBrokerUrl":EO,"httpPathClassification":JP,"corsProxyRules":RO,"enableGit":iO,"enableSingleSignOnServer":mO,"maxQueueSize":dP,"ssoProviderUrl":DQ,"formatDg5":vO,"allowedCorsRegexString":DO,"loginAuditFileName":ZP,"loginAudit":YP,"loginThrottleDuration":cP,"loginThrottleAttempts":bP,"blockOutsideGuests":IO,"customLogo":SO,"audit":FO};if(nJ!=null){A["broadcastUrl"]=nJ;}if(oJ!=null){A["brokerName"]=oJ;}if(pJ!=null){A["brokerUrl"]=pJ;}if(UK!=null){A["runBrokerInMain"]=UK;}if(map["ldap"]!=null){A["ldap"]=map["ldap"];}if(map["ldap2"]!=null){A["ldap2"]=map["ldap2"];}if(map["duo"]!=null){A["duo"]=map["duo"];}if(map["strictFileUpload"]!=null){A["strictFileUpload"]=map["strictFileUpload"];}if(map["externalAuth"]!=null){A["externalAuth"]=map["externalAuth"];}if(map["authServer"]!=null){A["authServer"]=map["authServer"];}if(map['openId']!=null){A['openId']=map['openId'];}if(map['proxy']!=null){A['proxy']=map['proxy'];}if(LK!=null){A['old_passwordHasherIterations']=LK;}if(MK!=null){A["old_passwordHasherKeyLength"]=MK;}if(SH==true||SH is String){A["observe"]=SH;}if(map['smtp']!=null){A['smtp']=map['smtp'];}return A;}bool jY=false;Future VK([String A="server"])async{if(jY){return;}jY=true;var B=await ML(A);await hR(B,WH());jY=false;}void iY(String A){if(A==null||A.isEmpty){uJ=A;return;}var B=kR(A);if(B==null||B.isEmpty){uJ=A;kY(A);return;}uJ=B;}void kY(String B){var A=lR(B);if(A==null||A.isEmpty){return;}AH=A;VK();}}const String cR="https://dsa.s3.amazonaws.com/links/links.json";const String dR="https://dsa.s3.amazonaws.com/dists/dists.json";LL eR;DB WD;fR(){if(WD==null){RE=true;WD=new DB("DGServer");WD.jP.listen((A){List<String> B=A.message.split("\n");for(String C in B){print("[${A.level.name}] ${C}");}if(A.error!=null){print(A.error);}if(A.stackTrace!=null&&WD.OP(W.eL)){print(A.stackTrace);}});}}Future<QE> ML(String A)async{var B=["${A}.json","${A}.toml","${A}.yaml"];for(var D in B){var C=uE.yH.DK(D);if(await C.exists()){return C;}}return uE.yH.DK(B.first);}Future<dynamic> gR(QE B)async{if(!(await B.exists())){return null;}var A=await B.readAsString();var C=jL(B.path);if(C==".toml"){var D=new TM();return PE(D.RB(A).value);}else if(C==".yaml"){return PE(tT(A));}else{if(A.trim().isEmpty||A==" "){A="{}";}return PE(tE.convert(A));}}Future hR(QE B,dynamic D)async{if(!(await B.exists())){await B.create();}var A="";var C=jL(B.path);if(C==".toml"){var G=new qS();A=G.encode(D);}else if(C==".yaml"){A=FN(D);}else{A=NL.convert(D);}if(!A.endsWith("\n")){A=A+"\n";}final I=C!='.toml'&&C!='.yaml';await B.writeAsString(A,verifyJson:I);}JsonEncoder NL=const JsonEncoder.withIndent("  ");JsonDecoder tE=const JsonDecoder();Utf8Decoder iR=const Utf8Decoder(allowMalformed:true);dynamic PE(A){if(A is Map){var B={};for(var C in A.keys){B[PE(C)]=PE(A[C]);}return B;}else if(A is List){return A.map((D)=>PE(D)).toList();}else{return A;}}final jR=new Uint8List.fromList([0x00,0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x88,0x99,0x88,0x77,0x66,0x55,0x44,0xFF,0xFF,0x44,0x55,0x66,0x77,0x88,0x99,0x88,0x77,0x66,0x55,0x44,0x33,0x22,0x11,0xAA]);final vE OL=new vE(jR);uF qF;uF get rF{if(qF!=null)return qF;qF=new uF();return qF;}String kR(String A){if(A==null||A.isEmpty)return null;rF..reset()..init(false,OL);String B;try {var D=VR(A);var G=PL(rF,D);var C=UTF8.decode(G);var I=int.parse(C.substring(0,2),radix:10);B=C.substring(2,2+I);}catch (J){return null;}return B;}String lR(String B){if(B==null||B.isEmpty)return null;String G;rF..reset()..init(true,OL);var J=B.length.toString().padLeft(2,'0');var A=J+B;var D=UTF8.encode(A);var I=16-(D.length%16);if(I!=16){var C=A.length+I;C=(C<16?16:C);A=A.padRight(C,'.');D=UTF8.encode(A);}try {var M=PL(rF,D);G=UR(M);}catch (R){WD.YQ("Error encoding password",R);return null;}return G;}Uint8List PL(uF D,Uint8List B){var C=new Uint8List(B.length);for(var A=0;A<B.lengthInBytes;){var G=D.cW(B,A,C,A);A+= G;}return C;}class QL{static final TC RL=new TC("guest",false);}class SL{static CI get TL=>CI.KS;}Future UL(String D,Set<String> A)async{var B=new Directory(rD("files","proj",D,"lib"));if(!(await B.exists())){return;}await for(Directory G in B.list().where((I)=>I is Directory)){var C=xF(G.path);var J=A.add(C);if(J){await UL(C,A);}}}Future<List<int>> oR(Set<String> I)async{var J=new Directory("files/proj");var C=new oD();for(var M in I){var G=new Directory("files/proj/${M}");if(!(await G.exists())){continue;}await for(FileSystemEntity A in G.list(recursive:true)){var B=VS(A.path,from:J.path);if(Platform.isWindows){B=B.replaceAll("\\","/");}if(B.contains('/.')){continue;}if(A is File){var R=(await A.stat()).size;var S=await A.readAsBytes();var D=new IB(B,R,S);C.kJ(D);}else if(A is Directory){if(await A.list().isEmpty){var D=new IB(B+"/.DGSERVER_KEEP_DIRECTORY",0,[] );C.kJ(D);}}}}return new iQ().encode(C);}pR(List<int> Z,{HttpRequest request,String owner})async{var C=new hQ().iV(Z);if(C.tO("_proj.json")!=null){var B=C.tO("_proj.json");B.GH();var o=tE.convert(iR.convert(B.GD));var SB=o["id"];C.iB.forEach((A){A.name="${SB}/${A.name}";});}Set<String> S=C.iB.map((I)=>I.name.split("/").first).toSet();WD.LP("Importing Projects ${S}");for(var D in S){var aB=C.iB.where((I)=>I.name.startsWith("${D}/")).toList();for(var A in aB){if(!A.name.endsWith("/")){A.GH();var J=new File("files/proj/${A.name}");if(!(await J.exists())){await J.create(recursive:true);}await J.writeAsBytes(A.GD);}else{var G=new Directory("files/proj/${A.name}");if(!(await G.exists())){await G.create(recursive:true);}}}var M=new File("files/proj/${D}/_proj.json");if(!(await M.exists())){WD.YQ("Skipping Import of ${D}: failed to find project file.");try {var G=new Directory("files/proj/${D}");await G.delete(recursive:true);}catch (SC){}continue;}Map B=tE.convert(await M.readAsString());var R=B["owner"];if(request!=null){R=(await mR(request)).username;}else if(owner!=null){R=owner;}B["owner"]=R;B["canWrite"]=[] ;await M.writeAsString(NL.convert(B));WD.LP("Project ${D} Imported.");}}Future<TC> mR(HttpRequest I,[VL B])async{var A=B!=null?B:nR();if(A==null){return QL.RL;}var C=await A.VX("sso");if(C is Map){return TC.TR(C);}if(A.qJ is TC&&A.qJ.username==A.username){return A.qJ;}var D=A.username;TC G=await SL.TL.callMethod("getUser",D);if(G!=null){return A.qJ=G;}else{SL.TL.callMethod("invalidateUserCache",D);return QL.RL;}}VL nR()=>Zone.current["session"];class VL{}abstract class xH{}abstract class QE implements xH{}abstract class sF implements xH{}abstract class uE{static uE yH=new sR();sF get n;QE DK(String A){return n.dV(A);}}class YL implements QE{final File file;YL(this.file);Future create()async{await file.create(recursive:true);}Future delete()async{await file.delete(recursive:true);}Future<bool> exists(){return file.exists();}xH get parent{return new tF(file.parent);}String get path=>file.path;Future<List<int>> readAsBytes(){return file.readAsBytes();}Future<String> readAsString(){return file.readAsString();}Future writeAsBytes(List<int> A){return file.writeAsBytes(A);}Future writeAsString(String A,{bool verifyJson: false})async{return HS(file,A,verifyJson:verifyJson);}}class tF implements sF{final Directory EE;tF(this.EE);QE dV(String A){var B=rD(EE.path,A);return new YL(new File(B));}Future create(){return EE.create(recursive:true);}Future delete(){return EE.delete(recursive:true);}Future<bool> exists(){return EE.exists();}sF get parent=>new tF(EE.parent);String get path=>EE.path;}class sR extends uE{sF get n=>new tF(Directory.current);}final FS=US;Future<File> GS(File B,dynamic G,Future<File> I(File file,dynamic content),{bool verifyJson: false})async{final C=await Directory.current.createTemp();final J=xF(B.path);var A=new File("${C.path}${FS}${J}");A=await I(A,G);var D=true;if(verifyJson){final M=await A.readAsString();try {JSON.decode(M);}on FormatException catch (R,S){D=false;BI.AQ("Couldn't parse JSON after trying to write ${B.path}",R,S);}}if(D){A=await A.rename(B.absolute.path);C.delete();return A;}else{BI.AQ("${B.path} wasn't saved, the original will be preserved");return B;}}Future<File> HS(File B,String A,{bool verifyJson: false})async{return GS(B,A,(File C,A)=>C.writeAsString(A,flush:true),verifyJson:verifyJson);}DB yE;const bool IS=identical(1,1.0);bool zE(rC B,String A,[bool D=false]){if(!IS){bool C=new bool.fromEnvironment(A,defaultValue:null);if(C!=null){return C;}}if(B.zone[A] is bool){return B.zone[A];}return D;}DB get BI{if(yE!=null){return yE;}RE=true;yE=new DB("DSA");yE.jP.listen((A){List<String> D=A.message.split("\n");bool G=zE(A,"dsa.logger.inline_errors",true);bool I=zE(A,"dsa.logger.sequence",false);if(G){if(A.error!=null){D.addAll(A.error.toString().split("\n"));}if(A.stackTrace!=null){D.addAll(A.stackTrace.toString().split("\n").where((J)=>J.isNotEmpty).toList());}}String C=A.KK;if(A.zone["dsa.logger.name"] is String){C=A.zone["dsa.logger.name"];}bool M=zE(A,"dsa.logger.show_timestamps",false);if(!zE(A,"dsa.logger.show_name",true)){C=null;}for(String R in D){String B="";if(I){B+= "[${A.xP}]";}if(M){B+= "[${A.LQ}]";}B+= "[${A.level.name}]";if(C!=null){B+= "[${C}]";}B+= " ";B+= R;if(zE(A,"dsa.logger.print",true)){print(B);}}if(!G){if(A.error!=null){print(A.error);}if(A.stackTrace!=null){print(A.stackTrace);}}});JS(const String.fromEnvironment("dsa.logger.default_level",defaultValue:"INFO"));return yE;}void JS(String A){A=A.trim().toUpperCase();if(A=="DEBUG"){A="ALL";}Map<String,W> C={};for(var B in W.SS){C[B.name]=B;}var B=C[A];if(B!=null){BI.level=B;}}class CI extends Stream implements StreamSink{static CI KS;}final PM=new RegExp(r"\r\n?|\n");class cI extends YE{int get line=>lY;int lY=0;int get column=>mY;int mY=0;ZD get state=>new QM(this,position,line,column);bool get nY=>X(-1)==BL&&X()==pH;set position(int A){var C=position;super.position=A;if(A>C){var B=oY(string.substring(C,A));lY+= B.length;if(B.isEmpty){mY+= A-C;}else{mY=A-B.last.end;}}else{var B=oY(string.substring(A,C));if(nY)B.removeLast();lY-= B.length;if(B.isEmpty){mY-= C-A;}else{mY=A-string.lastIndexOf(PM,A)-1;}}}cI(String A,{sourceUrl,int position}):super(A,sourceUrl:sourceUrl,position:position);int V(){var A=super.V();pY(A);return A;}void pY(int A){if(A==pH||(A==BL&&X()!=pH)){lY+= 1;mY=0;}else{mY+= 1;}}bool HB(Pattern B){if(!super.HB(B))return false;var A=oY(kE[0]);lY+= A.length;if(A.isEmpty){mY+= kE[0].length;}else{mY=kE[0].length-A.last.end;}return true;}List<Match> oY(String B){var A=PM.allMatches(B).toList();if(nY)A.removeLast();return A;}}class QM implements ZD{final cI qY;final int position;final int line;final int column;QM(this.qY,this.position,this.line,this.column);}const int pD=0x7fffffff;abstract class qD<U>{}class sH<U> implements qD<U>{const sH();bool HD(U A,U B)=>A==B;int JD(U A)=>A.hashCode;bool GK(Object A)=>true;}class CL<U> implements qD<Iterable<U>>{final qD<U> rY;const CL([qD<U> A=const sH()]):rY=A;bool HD(Iterable<U> A,Iterable<U> B){if(identical(A,B))return true;if(A==null||B==null)return false;var C=A.iterator;var D=B.iterator;while(true){bool G=C.moveNext();if(G!=D.moveNext())return false;if(!G)return true;if(!rY.HD(C.current,D.current))return false;}}int JD(Iterable<U> B){int A=0;for(U C in B){int D=rY.JD(C);A=(A+D)&pD;A=(A+(A<<10))&pD;A^= (A>>6);}A=(A+(A<<3))&pD;A^= (A>>11);A=(A+(A<<15))&pD;return A;}bool GK(Object A)=>A is Iterable<U>;}abstract class DL<U,eG extends Iterable<U>> implements qD<eG>{final qD<U> rY;const DL(this.rY);bool HD(eG D,eG G){if(identical(D,G))return true;if(D==null||G==null)return false;HashMap<U,int> C=new HashMap(equals:rY.HD,hashCode:rY.JD,isValidKey:rY.GK);int I=0;for(var B in D){int A=C[B];if(A==null)A=0;C[B]=A+1;I++ ;}for(var B in G){int A=C[B];if(A==null||A==0)return false;C[B]=A-1;I-- ;}return I==0;}int JD(eG B){int A=0;for(U C in B){int D=rY.JD(C);A=(A+D)&pD;}A=(A+(A<<3))&pD;A^= (A>>11);A=(A+(A<<15))&pD;return A;}}class EL<U> extends DL<U,Iterable<U>>{const EL([qD<U> A=const sH()]):super(A);bool GK(Object A)=>A is Iterable<U>;}class DG extends aI{String get source=>super.source;Uri get d=>L.d;DG(String A,EB B,String C):super(A,B,C);}const int YI=10;const int lS=13;class wD{final Uri cK;final sY=<int>[0];final Uint32List tY;int get length=>tY.length;int get lE=>sY.length;int uY;wD(String A,{url}):this.HX(A.runes,url:url);wD.HX(Iterable<int> D,{url}):cK=url is String?Uri.parse(url):url,tY=new Uint32List.fromList(D.toList()){for(var A=0;A<tY.length;A++ ){var B=tY[A];if(B==lS){var C=A+1;if(C>=tY.length||tY[C]!=YI)B=YI;}if(B==YI)sY.add(A+1);}}p L(int B,[int A]){if(A==null)A=length-1;return new wC(this,B,A);}YD location(int A)=>new YD.IX(this,A);int MH(int A){if(A<0){throw new RangeError("Offset may not be negative, was ${A}.");}else if(A>length){throw new RangeError("Offset ${A} must not be greater than the number " "of characters in the file, ${length}.");}if(A<sY.first)return -1;if(A>=sY.last)return sY.length-1;if(vY(A))return uY;uY=wY(A)-1;return uY;}bool vY(int A){if(uY==null)return false;if(A<sY[uY])return false;if(uY>=sY.length-1||A<sY[uY+1]){return true;}if(uY>=sY.length-2||A<sY[uY+2]){uY++ ;return true;}return false;}int wY(int D){int A=0;int B=sY.length-1;while(A<B){var C=A+((B-A)~/2);if(sY[C]>D){B=C;}else{A=C+1;}}return B;}int CK(int A,{int line}){if(A<0){throw new RangeError("Offset may not be negative, was ${A}.");}else if(A>length){throw new RangeError("Offset ${A} must be not be greater than the " "number of characters in the file, ${length}.");}if(line==null){line=MH(A);}else if(line<0){throw new RangeError("Line may not be negative, was ${line}.");}else if(line>=lE){throw new RangeError("Line ${line} must be less than the number of " "lines in the file, ${lE}.");}var B=sY[line];if(B>A){throw new RangeError("Line ${line} comes after offset ${A}.");}return A-B;}int BP(int A,[int B]){if(B==null)B=0;if(A<0){throw new RangeError("Line may not be negative, was ${A}.");}else if(A>=lE){throw new RangeError("Line ${A} must be less than the number of " "lines in the file, ${lE}.");}else if(B<0){throw new RangeError("Column may not be negative, was ${B}.");}var C=sY[A]+B;if(C>length||(A+1<lE&&C>=sY[A+1])){throw new RangeError("Line ${A} doesn't have ${B} columns.");}return C;}String EP(int A,[int B])=>new String.fromCharCodes(tY.sublist(A,B));}class YD extends mS implements rB{final wD file;final int offset;Uri get d=>file.cK;int get line=>file.MH(offset);int get column=>file.CK(offset);YD.IX(this.file,this.offset){if(offset<0){throw new RangeError("Offset may not be negative, was ${offset}.");}else if(offset>file.length){throw new RangeError("Offset ${offset} must not be greater than the number " "of characters in the file, ${file.length}.");}}p YB()=>new wC(file,offset,offset);}abstract class p implements bI{}class wC extends OM implements p{final wD file;final int xY;final int yY;Uri get d=>file.cK;int get length=>yY-xY;YD get start=>new YD.IX(file,xY);YD get end=>new YD.IX(file,yY);String get text=>file.EP(xY,yY);String get context=>file.EP(file.BP(start.line),end.line==file.lE-1?null:file.BP(end.line+1));wC(this.file,this.xY,this.yY){if(yY<xY){throw new ArgumentError('End ${yY} must come after start ${xY}.');}else if(yY>file.length){throw new RangeError("End ${yY} must not be greater than the number " "of characters in the file, ${file.length}.");}else if(xY<0){throw new RangeError("Start may not be negative, was ${xY}.");}}int compareTo(EB A){if(A is!wC)return super.compareTo(A);wC B=A;var C=xY.compareTo(B.xY);return C==0?yY.compareTo(B.yY):C;}bool operator==(A){if(A is!p)return super==A;if(A is!wC){return super==A&&d==A.d;}return xY==A.xY&&yY==A.yY&&d==A.d;}int get hashCode=>super.hashCode;p expand(p A){if(d!=A.d){throw new ArgumentError("Source URLs \"${d}\" and " " \"${A.d}\" don't match.");}if(A is wC){var B=NE.min(this.xY,A.xY);var C=NE.max(this.yY,A.yY);return new wC(file,B,C);}else{var B=NE.min(this.xY,A.start.offset);var C=NE.max(this.yY,A.end.offset);return new wC(file,B,C);}}}abstract class WL{static const String qR='files';static final String XL=rD(qR,'proj');static final Directory rR=new Directory(XL);}abstract class uC extends KB{String get RC;bool EH(String A);bool b(int A);bool mE(String A);int bC(String A,{bool withDrive: false});String DP(String A){var B=bC(A);if(B>0)return A.substring(0,B);return TB(A)?A[0]:null;}bool TB(String A);String hF(Uri A);bool BH(int A,int B)=>A==B;bool QK(String A,String B)=>A==B;int LO(int A)=>A;String MO(String A)=>A;}class oS extends dI{}class ZD{}class rB implements Comparable<rB>{}abstract class mS implements rB{String get jW{var A=d==null?'unknown source':d;return '${A}:${line+1}:${column+1}';}int bO(rB A){if(d!=A.d){throw new ArgumentError("Source URLs \"${d}\" and " "\"${A.d}\" don't match.");}return (offset-A.offset).abs();}EB YB()=>new EB(this,this,"");int compareTo(rB A){if(d!=A.d){throw new ArgumentError("Source URLs \"${d}\" and " "\"${A.d}\" don't match.");}return offset-A.offset;}bool operator==(A)=>A is rB&&d==A.d&&offset==A.offset;int get hashCode=>d.hashCode+offset;String toString()=>'<${runtimeType}: ${offset} ${jW}>';}bool RE=false;W LS=W.dL;W bL=W.DI;class DB{final String name;String get wO=>(parent==null||parent.name=='')?name:'${parent.wO}.${name}';final DB parent;W zY;final Map<String,DB> AZ;final Map<String,DB> eD;StreamController<rC> BZ;factory DB(String A){return MS.putIfAbsent(A,()=>new DB.yW(A));}factory DB.yW(String A){if(A.startsWith('.')){throw new ArgumentError("name shouldn't start with a '.'");}int B=A.lastIndexOf('.');DB C;String D;if(B==-1){if(A!='')C=new DB('');D=A;}else{C=new DB(A.substring(0,B));D=A.substring(B+1);}return new DB.zW(D,C,new Map<String,DB>());}DB.zW(this.name,this.parent,Map<String,DB> A):this.AZ=A,this.eD=new UnmodifiableMapView(A){if(parent!=null)parent.AZ[name]=this;}W get level{if(RE){if(zY!=null)return zY;if(parent!=null)return parent.level;}return bL;}set level(W A){if(RE&&parent!=null){zY=A;}else{if(parent!=null){throw new UnsupportedError('Please set "hierarchicalLoggingEnabled" to true if you want to ' 'change the level on a non-root logger.');}bL=A;}}Stream<rC> get jP=>CZ();bool OP(W A)=>(A>=level);void JK(W B,A,[Object J,StackTrace G,Zone I]){Object M;if(OP(B)){if(A is Function){A=A();}String C;if(A is String){C=A;}else{C=A.toString();M=A;}if(G==null&&B>=LS){G=StackTrace.current;J??= 'autogenerated stack trace for ${B} ${C}';}if(I==null)I=Zone.current;var R=new rC(B,C,wO,J,G,I,M);if(RE){var D=this;while(D!=null){D.DZ(R);D=D.parent;}}else{cL.DZ(R);}}}void LP(A,[Object B,StackTrace C])=>JK(W.DI,A,B,C);void YQ(A,[Object B,StackTrace C])=>JK(W.fL,A,B,C);void AQ(A,[Object B,StackTrace C])=>JK(W.gL,A,B,C);Stream<rC> CZ(){if(RE||parent==null){if(BZ==null){BZ=new StreamController<rC>.broadcast(sync:true);}return BZ.stream;}else{return cL.CZ();}}void DZ(rC A){if(BZ!=null){BZ.add(A);}}static final DB cL=new DB('');static final Map<String,DB> MS=<String,DB>{};}class W implements Comparable<W>{final String name;final int value;const W(this.name,this.value);static const W NS=const W('ALL',0);static const W dL=const W('OFF',2000);static const W OS=const W('FINEST',300);static const W PS=const W('FINER',400);static const W eL=const W('FINE',500);static const W QS=const W('CONFIG',700);static const W DI=const W('INFO',800);static const W fL=const W('WARNING',900);static const W gL=const W('SEVERE',1000);static const W RS=const W('SHOUT',1200);static const List<W> SS=const[NS,OS,PS,eL,QS,DI,fL,gL,RS,dL];bool operator==(Object A)=>A is W&&value==A.value;bool operator<(W A)=>value<A.value;bool operator<=(W A)=>value<=A.value;bool operator>(W A)=>value>A.value;bool operator>=(W A)=>value>=A.value;int compareTo(W A)=>value-A.value;int get hashCode=>value;String toString()=>name;}class rC{final W level;final String message;final Object YW;final String KK;final DateTime LQ;final int xP;static int TS=0;final Object error;final StackTrace stackTrace;final Zone zone;rC(this.level,this.message,this.KK,[this.error,this.stackTrace,this.zone,this.YW]):LQ=new DateTime.now(),xP=rC.TS++ ;String toString()=>'[${level.name}] ${KK}: ${message}';}VB zQ(String A,String B,String C,String D,List<String> G,Map<String,String> I,J,Function M,lB R,{bool negatable,bool splitCommas,bool hide: false}){return new VB.wW(A,B,C,D,G,I,J,M,R,negatable:negatable,splitCommas:splitCommas,hide:hide);}class VB{final String name;final String cD;final List<String> YF;final defaultValue;final Function callback;final String EK;final String dK;final Map<String,String> gE;final lB type;final bool negatable;final bool CQ;final bool hide;bool get LD=>type==lB.xK;bool get PP=>type==lB.oH;VB.wW(this.name,this.cD,this.EK,this.dK,List<String> A,Map<String,String> B,this.defaultValue,this.callback,lB C,{this.negatable,bool splitCommas,this.hide: false}):this.YF=A==null?null:new UnmodifiableListView(A),this.gE=B==null?null:new UnmodifiableMapView(B),this.type=C,this.CQ=splitCommas==null?C==lB.oH:splitCommas{if(name.isEmpty){throw new ArgumentError('Name cannot be empty.');}else if(name.startsWith('-')){throw new ArgumentError('Name ${name} cannot start with "-".');}if(wK.hasMatch(name)){throw new ArgumentError('Name "${name}" contains invalid characters.');}if(cD!=null){if(cD.length!=1){throw new ArgumentError('Abbreviation must be null or have length 1.');}else if(cD=='-'){throw new ArgumentError('Abbreviation cannot be "-".');}if(wK.hasMatch(cD)){throw new ArgumentError('Abbreviation is an invalid character.');}}}dynamic CP(A){if(A!=null)return A;if(!PP)return defaultValue;if(defaultValue!=null)return [defaultValue];return [] ;}static final wK=new RegExp(r'''[ \t\r\n"'\\/]''');}class lB{static const xK=const lB.xW("OptionType.FLAG");static const AR=const lB.xW("OptionType.SINGLE");static const oH=const lB.xW("OptionType.MULTIPLE");final String name;const lB.xW(this.name);}class tD{uC Q;String n;bool TB;List<String> e;List<String> UB;String get yJ=>EZ()[1];bool get isAbsolute=>n!=null;factory tD.CX(String A,uC D){var I=D.DP(A);var M=D.TB(A);if(I!=null)A=A.substring(I.length);var J=<String>[] ;var G=<String>[] ;var B=0;if(A.isNotEmpty&&D.b(A.codeUnitAt(0))){G.add(A[0]);B=1;}else{G.add('');}for(var C=B;C<A.length;C++ ){if(D.b(A.codeUnitAt(C))){J.add(A.substring(B,C));G.add(A[C]);B=C+1;}}if(B<A.length){J.add(A.substring(B));G.add('');}return new tD.DX(D,I,M,J,G);}tD.DX(this.Q,this.n,this.TB,this.e,this.UB);String get mJ{var A=this.PO();A.SK();if(A.e.isEmpty)return n==null?'':n;return A.e.last;}void SK(){while(!e.isEmpty&&e.last==''){e.removeLast();UB.removeLast();}if(UB.length>0)UB[UB.length-1]='';}void lD({bool canonicalize: false}){var C=0;var A=<String>[] ;for(var B in e){if(B=='.'||B==''){}else if(B=='..'){if(A.length>0){A.removeLast();}else{C++ ;}}else{A.add(canonicalize?Q.MO(B):B);}}if(!isAbsolute){A.insertAll(0,new List.filled(C,'..'));}if(A.length==0&&!isAbsolute){A.add('.');}var D=new List<String>.generate(A.length,(G)=>Q.RC,growable:true);D.insert(0,isAbsolute&&A.length>0&&Q.mE(n)?Q.RC:'');e=A;UB=D;if(n!=null&&Q==KB.AG){if(canonicalize)n=n.toLowerCase();n=n.replaceAll('/','\\');}SK();}String toString(){var A=new StringBuffer();if(n!=null)A.write(n);for(var B=0;B<e.length;B++ ){A.write(UB[B]);A.write(e[B]);}A.write(UB.last);return A.toString();}List<String> EZ(){var A=e.lastWhere((C)=>C!='',orElse:()=>null);if(A==null)return ['',''];if(A=='..')return ['..',''];var B=A.lastIndexOf('.');if(B<=0)return [A,''];return [A.substring(0,B),A.substring(B)];}tD PO()=>new tD.DX(Q,n,TB,new List.from(e),new List.from(UB));}final BR=new RegExp(r'^-([a-zA-Z0-9])$');final DR=new RegExp(r'^-([a-zA-Z0-9]+)(.*)$');final ER=new RegExp(r'^--([a-zA-Z\-_0-9]+)(=(.*))?$');class qE{final String QO;final qE parent;final CB lC;final List<String> gB;final oB=<String>[] ;final Map<String,dynamic> RD=<String,dynamic>{};qE(this.QO,this.lC,this.gB,[this.parent,List<String> A]){if(A!=null)this.oB.addAll(A);}String get current=>gB[0];VD RB(){var I=gB.toList();var C=null;while(gB.length>0){if(current=='--'){gB.removeAt(0);break;}var D=lC.gD[current];if(D!=null){yB(oB.isEmpty,'Cannot specify arguments before a command.');var A=gB.removeAt(0);var J=new qE(A,D,gB,this,oB);try {C=J.RB();}on nF catch (G){if(A==null)rethrow;throw new nF(G.message,[A]..addAll(G.gD));}oB.clear();break;}if(mP())continue;if(kP(this))continue;if(PK())continue;if(!lC.CO)break;oB.add(gB.removeAt(0));}lC.OD.forEach((M,B){if(B.callback==null)return;B.callback(B.CP(RD[M]));});oB.addAll(gB);gB.clear();return yQ(lC,RD,QO,C,oB,I);}void sP(VB A){yB(gB.length>0,'Missing argument for "${A.name}".');setOption(RD,A,current);gB.removeAt(0);}bool mP(){var B=BR.firstMatch(current);if(B==null)return false;var A=lC.JH(B[1]);if(A==null){yB(parent!=null,'Could not find an option or flag "-${B[1]}".');return parent.mP();}gB.removeAt(0);if(A.LD){XH(RD,A,true);}else{sP(A);}return true;}bool kP(qE G){var A=DR.firstMatch(current);if(A==null)return false;var B=A[1].substring(0,1);var D=lC.JH(B);if(D==null){yB(parent!=null,'Could not find an option with short name "-${B}".');return parent.kP(G);}else if(!D.LD){var I='${A[1].substring(1)}${A[2]}';setOption(RD,D,I);}else{yB(A[2]=='','Option "-${B}" is a flag and cannot handle value ' '"${A[1].substring(1)}${A[2]}".');for(var C=0;C<A[1].length;C++ ){var B=A[1].substring(C,C+1);G.lP(B);}}gB.removeAt(0);return true;}void lP(String A){var B=lC.JH(A);if(B==null){yB(parent!=null,'Could not find an option with short name "-${A}".');parent.lP(A);return;}yB(B.LD,'Option "-${A}" must be a flag to be in a collapsed "-".');XH(RD,B,true);}bool PK(){var C=ER.firstMatch(current);if(C==null)return false;var A=C[1];var B=lC.OD[A];if(B!=null){gB.removeAt(0);if(B.LD){yB(C[3]==null,'Flag option "${A}" should not be given a value.');XH(RD,B,true);}else if(C[3]!=null){setOption(RD,B,C[3]);}else{sP(B);}}else if(A.startsWith('no-')){A=A.substring('no-'.length);B=lC.OD[A];if(B==null){yB(parent!=null,'Could not find an option named "${A}".');return parent.PK();}gB.removeAt(0);yB(B.LD,'Cannot negate non-flag option "${A}".');yB(B.negatable,'Cannot negate option "${A}".');XH(RD,B,false);}else{yB(parent!=null,'Could not find an option named "${A}".');return parent.PK();}return true;}void yB(bool A,String B){if(!A)throw new nF(B);}void setOption(Map C,VB A,String B){assert(!A.LD);if(!A.PP){FZ(A,B);C[A.name]=B;return;}var D=C.putIfAbsent(A.name,()=><String>[] );if(A.CQ){for(var G in B.split(",")){FZ(A,G);D.add(G);}}else{FZ(A,B);D.add(B);}}void XH(Map B,VB A,bool C){assert(A.LD);B[A.name]=C;}void FZ(VB A,String B){if(A.YF==null)return;yB(A.YF.contains(B),'"${B}" is not an allowed value for option "${A.name}".');}}final sC SE=XS();String get hL{var B=Uri.base;if(B==iL)return AF;iL=B;if(KB.II==KB.BF){AF=B.resolve('.').toString();return AF;}else{var A=B.toFilePath();var C=A.length-1;assert(A[C]=='/'||A[C]=='\\');AF=C==0?A:A.substring(0,C);return AF;}}Uri iL;String AF;String get US=>SE.RC;String xF(String A)=>SE.mJ(A);String jL(String A)=>SE.yJ(A);String rD(String A,[String B,String C,String D,String G,String I,String J,String M])=>SE.join(A,B,C,D,G,I,J,M);String VS(String A,{String from})=>SE.RK(A,from:from);String WS(A)=>SE.bW(A);class zF implements Exception{String message;zF(this.message);String toString()=>"PathException: ${message}";}class KI extends UC{final Function GZ;KI(A,this.GZ):super(A);q h(LB B){var A=HZ.h(B);if(A.MD){return A.wB(GZ(A.value));}else{return A;}}bool WB(N A){return A is KI&&super.WB(A)&&GZ==A.GZ;}}class wL extends UC{N IZ;N JZ;wL(A,this.IZ,this.JZ):super(A);q h(LB C){var A=C;do{A=IZ.h(A);}while((A as q).MD);var B=HZ.h(A);if(B.GE){return B;}A=B;do{A=JZ.h(A);}while((A as q).MD);return A.wB(B.value);}List<N> get eD=>[HZ,IZ,JZ];void replace(N A,N B){super.replace(A,B);if(IZ==A){IZ=B;}if(JZ==A){JZ=B;}}}class BM extends UC{BM(A):super(A);q h(LB A){var B=HZ.h(A);if(B.MD){var C=A.buffer is String?A.buffer.substring(A.position,B.position):A.buffer.sublist(A.position,B.position);return B.wB(C);}else{return B;}}}class GM extends UC{GM(A):super(A);q h(LB B){var A=HZ.h(B);if(A.MD){var C=new uD(A.value,B.buffer,B.position,A.position);return A.wB(C);}else{return A;}}}class VE extends N{final vC KZ;final String LZ;VE(this.KZ,this.LZ);q h(LB A){var C=A.buffer;var B=A.position;if(B<C.length&&KZ.test(C.codeUnitAt(B))){return A.wB(C[B],B+1);}return A.ID(LZ);}String toString()=>'${super.toString()}[${LZ}]';bool WB(N A){return A is VE&&super.WB(A)&&KZ==A.KZ&&LZ==A.LZ;}}abstract class vC{}class yL implements vC{final vC qP;yL(this.qP);bool test(int A)=>!qP.test(A);}vC dS(Iterable<WE> M){var I=new List.from(M,growable:false);I.sort((C,D){return C.start!=D.start?C.start-D.start:C.stop-D.stop;});var A=new List();for(var B in I){if(A.isEmpty){A.add(B);}else{var J=A.last;if(J.stop+1>=B.start){var R=new WE(J.start,B.stop);A[A.length-1]=R;}else{A.add(B);}}}if(A.length==1){return A[0].start==A[0].stop?new XI(A[0].start):A[0];}else{return new KM(A.length,A.map((G)=>G.start).toList(growable:false) as List<int>,A.map((G)=>G.stop).toList(growable:false) as List<int>);}}N a(A,[String B]){return new VE(new XI(FF(A)),B!=null?B:'"${A}" expected');}class XI implements vC{final int value;const XI(this.value);bool test(int A)=>identical(this.value,A);}N BG([String A]){return new VE(eS,A!=null?A:'digit expected');}class HM implements vC{const HM();bool test(int A)=>48<=A&&A<=57;}const eS=const HM();N JM(String A,[String B]){return new VE(gS.RB(A).value,B!=null?B:'[${A}] expected');}N fS(){var B=XD().map((A)=>new WE(FF(A),FF(A)));var C=XD().JE(a('-')).JE(XD()).map((A)=>new WE(FF(A[0]),FF(A[2])));var D=C.gF(B).TH().map((A)=>dS(A as Iterable<WE>));return a('^').mC().JE(D).map((A)=>A[0]==null?A[1]:new yL(A[1]));}final gS=fS();class KM implements vC{final int length;final List<int> EQ;final List<int> FQ;KM(this.length,this.EQ,this.FQ);bool test(int D){var A=0;var B=length;while(A<B){var C=A+((B-A)>>1);var G=EQ[C]-D;if(G==0){return true;}else if(G<0){A=C+1;}else{B=C;}}return 0<A&&D<=FQ[A-1];}}class WE implements vC{final int start;final int stop;WE(this.start,this.stop);bool test(int A)=>start<=A&&A<=stop;}N hS([String A]){return new VE(iS,A!=null?A:'whitespace expected');}class LM implements vC{const LM();bool test(int A){if(A<256){return A==0x09||A==0x0A||A==0x0B||A==0x0C||A==0x0D||A==0x20||A==0x85||A==0xA0;}else{return A==0x1680||A==0x180E||A==0x2000||A==0x2001||A==0x2002||A==0x2003||A==0x2004||A==0x2005||A==0x2006||A==0x2007||A==0x2008||A==0x2009||A==0x200A||A==0x2028||A==0x2029||A==0x202F||A==0x205F||A==0x3000||A==0xFEFF;}}}const iS=const LM();int FF(A){if(A is num){return A.round();}var B=A.toString();if(B.length!=1){throw new ArgumentError('${B} is not a character');}return B.codeUnitAt(0);}class UC extends N{N HZ;UC(this.HZ);q h(LB A){return HZ.h(A);}List<N> get eD=>[HZ];void replace(N A,N B){super.replace(A,B);if(HZ==A){HZ=B;}}}class NI extends UC{final String LZ;NI(A,this.LZ):super(A);q h(LB B){var A=HZ.h(B);if(A.GE||A.position==A.buffer.length){return A;}return A.ID(LZ,A.position);}String toString()=>'${super.toString()}[${LZ}]';bool WB(N A){return A is NI&&super.WB(A)&&LZ==A.LZ;}}class AM extends UC{AM(A):super(A);q h(LB B){var A=HZ.h(B);if(A.MD){return B.wB(A.value);}else{return A;}}}class TI extends UC{final String LZ;TI(A,this.LZ):super(A);q h(LB A){var B=HZ.h(A);if(B.GE){return A.wB(null);}else{return A.ID(LZ);}}String toString()=>'${super.toString()}[${LZ}]';bool WB(N A){return A is TI&&super.WB(A)&&LZ==A.LZ;}}class VI extends UC{final MZ;VI(A,this.MZ):super(A);q h(LB A){var B=HZ.h(A);if(B.MD){return B;}else{return A.wB(MZ);}}bool WB(N A){return A is VI&&super.WB(A)&&MZ==A.MZ;}}abstract class WI extends N{final List<N> NZ;WI(this.NZ);List<N> get eD=>NZ;void replace(N B,N C){super.replace(B,C);for(var A=0;A<NZ.length;A++ ){if(NZ[A]==B){NZ[A]=C;}}}}class EF extends WI{factory EF(Iterable<N> A){return new EF.EX(new List.from(A,growable:false));}EF.EX(List<N> A):super(A);q h(LB C){var A;for(var B=0;B<NZ.length;B++ ){A=NZ[B].h(C);if(A.MD){return A;}}return A;}N gF(N A){return new EF(new List()..addAll(NZ)..add(A));}}class vD extends WI{factory vD(Iterable<N> A){return new vD.FX(new List.from(A,growable:false));}vD.FX(List<N> A):super(A);q h(LB G){var C=G;var D=new List(NZ.length);for(var A=0;A<NZ.length;A++ ){var B=NZ[A].h(C);if(B.GE){return B;}D[A]=B.value;C=B;}return C.wB(D);}N JE(N A){return new vD(new List()..addAll(NZ)..add(A));}}class LB{const LB(this.buffer,this.position);final buffer;final int position;q wB(B,[int A]){return new zL(buffer,A==null?this.position:A,B);}q ID(String B,[int A]){return new QI(buffer,A==null?this.position:A,B);}String toString()=>'Context[${dH()}]';String dH()=>uD.EM(buffer,position);}abstract class q extends LB{const q(A,B):super(A,B);bool get MD=>false;bool get GE=>false;get value;String get message;}class zL extends q{const zL(A,B,this.value):super(A,B);bool get MD=>true;final value;String get message=>null;String toString()=>'Success[${dH()}]: ${value}';}class QI extends q{const QI(A,B,this.message):super(A,B);bool get GE=>true;get value=>throw new CM(this);final String message;String toString()=>'Failure[${dH()}]: ${message}';}class CM extends Error{final QI ID;CM(this.ID);String toString()=>'${ID.message} at ${ID.dH()}';}abstract class SI{const SI();N start();N O(Function A,[B,C,D,G,I,J]){var M=[B,C,D,G,I,J].takeWhile((R)=>R!=null).toList(growable:false);return new dC(A,M);}N aV({Function start: null,List arguments: const[] }){return OZ(new dC(start!=null?start:this.start,arguments));}N OZ(dC C){var I=new Map();N J(dC C){var A=I[C];if(A==null){var D=[C];A=C.resolve();while(A is dC){if(D.contains(A)){throw new StateError('Recursive references detected: ${D}');}D.add(A);A=A.resolve();}for(var Z in D){I[Z]=A;}}return A;}var G=[J(C)];var M=new Set.from(G);while(G.isNotEmpty){var R=G.removeLast();for(var B in R.eD){if(B is dC){var S=J(B);R.replace(B,S);B=S;}if(!M.contains(B)){M.add(B);G.add(B);}}}return I[C];}}class IM extends UC{IM(SI A):super(A.aV());}class dC extends N{final Function function;final List arguments;dC(this.function,this.arguments);N resolve()=>Function.apply(function,arguments);bool operator==(A){if(A is!dC||A.function!=function||A.arguments.length!=arguments.length){return false;}for(var B=0;B<arguments.length;B++ ){var C=arguments[B],D=A.arguments[B];if(C is N&&C is!dC&&D is N&&D is!dC){if(!C.NP(D)){return false;}}else{if(C!=D){return false;}}}return true;}int get hashCode=>function.hashCode;q h(LB A)=>throw new UnsupportedError('References cannot be parsed.');}abstract class N{q h(LB A);q RB(A){return h(new LB(A,0));}Iterable jD(B){var A=new List();YV().map((C)=>A.add(C)).JE(XD()).gF(XD()).oC().RB(B);return A;}Iterable TW(B){var A=new List();map((C)=>A.add(C)).gF(XD()).oC().RB(B);return A;}N mC([A])=>new VI(this,A);N oC()=>VH(0,CF);N TH()=>VH(1,CF);N VH(int A,int B){return new xL(this,A,B);}N cH(int A)=>VH(A,A);N JE(N A)=>new vD([this,A]);N operator&(N A)=>this.JE(A);N gF(N A)=>new EF([this,A]);N operator|(N A)=>this.gF(A);N YV()=>new AM(this);N XW([String A])=>new TI(this,A);N gP([String A])=>XW(A).JE(XD()).PD(1);N BK()=>new BM(this);N xB()=>new GM(this);N trim([N A,N B]){if(A==null)A=hS();if(B==null)B=A;return new wL(this,A,B);}N end([String A='end of input expected']){return new NI(this,A);}N map(Function A)=>new KI(this,A);N PD(int A){return this.map((List B){return B[A<0?B.length+A:A];});}N aW(List<int> C){return this.map((List B){return C.map((A){return B[A<0?B.length+A:A];}).toList();});}N jF(N B,{bool includeSeparators: true,bool optionalSeparatorAtEnd: false}){var D=new vD([B,this]).oC();var I=new vD(optionalSeparatorAtEnd?[this,D,B.mC(B)]:[this,D]);return I.map((List C){var A=new List();A.add(C[0]);for(var G in C[1]){if(includeSeparators){A.add(G[0]);}A.add(G[1]);}if(includeSeparators&&optionalSeparatorAtEnd&&!identical(C[2],B)){A.add(C[2]);}return A;});}bool NP(N B,[Set<N> A]){if(A==null){A=new Set();}if(this==B||A.contains(this)){return true;}A.add(this);return runtimeType==B.runtimeType&&WB(B)&&CW(B,A);}bool WB(N A)=>true;bool CW(N D,Set<N> G){var B=eD,C=D.eD;if(B.length!=C.length){return false;}for(var A=0;A<B.length;A++ ){if(!B[A].NP(C[A],G)){return false;}}return true;}List<N> get eD=>const[] ;void replace(N A,N B){}}N XD([String A='input expected']){return new MI(A);}class MI extends N{final String LZ;MI(this.LZ);q h(LB A){var B=A.position;var C=A.buffer;return B<C.length?A.wB(C[B],B+1):A.ID(LZ);}bool WB(N A){return A is MI&&super.WB(A)&&LZ==A.LZ;}}N OI(A,[String B]){return FM(1,(C)=>A.indexOf(C)>=0,B!=null?B:'any of ${A} expected');}N DF(String A,[String B]){return FM(A.length,(String C)=>A==C,B!=null?B:'${A} expected');}typedef bool DM(_0);N FM(int A,DM B,String C){return new UI(A,B,C);}class UI extends N{final int PZ;final DM KZ;final String LZ;UI(this.PZ,this.KZ,this.LZ);q h(LB A){final C=A.position;final B=C+PZ;if(B<=A.buffer.length){var D=A.buffer is String?A.buffer.substring(C,B):A.buffer.sublist(C,B);if(KZ(D)){return A.wB(D,B);}}return A.ID(LZ);}String toString()=>'${super.toString()}[${LZ}]';bool WB(N A){return A is UI&&super.WB(A)&&PZ==A.PZ&&KZ==A.KZ&&LZ==A.LZ;}}const int CF=-1;abstract class LI extends UC{final int QZ;final int RZ;LI(N A,this.QZ,this.RZ):super(A){assert(0<=QZ);assert(RZ==CF||QZ<=RZ);}String toString(){var A=RZ==CF?'*':RZ;return '${super.toString()}[${QZ}..${A}]';}bool WB(N A){return A is LI&&super.WB(A)&&QZ==A.QZ&&RZ==A.RZ;}}class xL extends LI{xL(N A,int B,int C):super(A,B,C);q h(LB D){var B=D;var C=new List();while(C.length<QZ){var A=HZ.h(B);if(A.GE){return A;}C.add(A.value);B=A;}while(RZ==CF||C.length<RZ){var A=HZ.h(B);if(A.GE){return B.wB(C);}C.add(A.value);B=A;}return B.wB(C);}}class uD{final value;final buffer;final int start;final int stop;const uD(this.value,this.buffer,this.start,this.stop);get input=>buffer is String?buffer.substring(start,stop):buffer.sublist(start,stop);int get length=>stop-start;int get line=>uD.RI(buffer,start)[0];int get column=>uD.RI(buffer,start)[1];String toString()=>'Token[${EM(buffer,start)}]: ${value}';bool operator==(A){return A is uD&&value==A.value&&start==A.start&&stop==A.stop;}int get hashCode=>value.hashCode+start.hashCode+stop.hashCode;static N bS()=>cS;static final N cS=a('\n')|(a('\r')&a('\n').mC());static List<int> RI(String G,int A){var B=1,C=0;for(var D in bS().xB().TW(G)){if(A<D.stop){return [B,A-C+1];}B++ ;C=D.stop;}return [B,A-C+1];}static String EM(A,int B){if(A is String){var C=uD.RI(A,B);return '${C[0]}:${C[1]}';}else{return '${B}';}}}class rL extends uC{rL();final name='posix';final RC='/';final UB=const['/'];final wP=new RegExp(r'/');final fP=new RegExp(r'[^/]$');final uP=new RegExp(r'^/');final tP=null;bool EH(String A)=>A.contains('/');bool b(int A)=>A==JC;bool mE(String A)=>A.isNotEmpty&&!b(A.codeUnitAt(A.length-1));int bC(String A,{bool withDrive: false}){if(A.isNotEmpty&&b(A.codeUnitAt(0)))return 1;return 0;}bool TB(String A)=>false;String hF(Uri A){if(A.scheme==''||A.scheme=='file'){return Uri.decodeComponent(A.path);}throw new ArgumentError("Uri ${A} must have scheme 'file:'.");}}main(List<String> R)async{fR();var A=new CB(allowTrailingOptions:true);A.xG("list",bQ());A.xG("import",cQ());A.xG("export",eQ());A.xG("change-owner",dQ());var TD=new LL();eR=TD;await TD.SW();G({String message,String command}){if(message!=null){print("ERROR: ${message}");}print("Usage: projects ${command!=null?command:"<command>"} [options]");if(command==null){print("Commands: ${A.gD.keys.join(", ")}");if(A.fH.isNotEmpty){print(A.fH);}}else{var I=A.gD[command];if(I.fH.isNotEmpty){print(I.fH);}}exit(1);}VD D;try {D=A.RB(R);}on FormatException catch (gK){var I;if(R.isNotEmpty&&A.gD.keys.contains(R[0])){I=R[0];}G(command:I,message:gK.message);}var J=new fQ();if(D.fD==null){G();}var B=D.fD;if(D.fD.name=="list"){List<UD> M=await J.list();var S=B["output"];Future<Map> o()async{for(var hK in M){await hK.KO();}var SB=M.map((iK)=>iK.fW()).toList();return SB;}if(S=="human"){for(var C in M){print("- ${C.id}${C.PH?' (template)':''}:");print("  Title: ${C.name}");print("  Owner: ${C.owner}");print("  Size: ${await C.KO()} bytes");}}else if(S=="json"){print(nK.convert(await o()));}else if(S=="yaml"){print(FN(await o()));}else if(S=="csv"){var jK=new tH();var oE=await o();var aB=[] ;if(oE.isNotEmpty){var gH=new Set<String>();for(Map Z in oE){gH.addAll(Z.keys);aB.add(Z.values.toList());}aB.insert(0,gH);}var SB=jK.convert(aB);print(SB);}}else if(D.fD.name=="export"){if(B.oB.length!=1){G(command:"export",message:"Output file not given.");}var SC=new File(B.oB[0]);if(!(await SC.parent.exists())){await SC.parent.create(recursive:true);}var kK=await J.list();var M=B["all"]?kK.map((Z)=>Z.id).toList():B["projects"];var lK=await J.rV(M);await SC.writeAsBytes(lK);print("Export Complete.");}else if(D.fD.name=="import"){if(B.oB.length!=1){G(command:"import",message:"Input file not given.");}var hH=new File(B.oB[0]);if(!(await hH.exists())){print("ERROR: Input file does not exist.");exit(1);}var mK=await hH.readAsBytes();await J.EW(mK);print("Import Completed.");}else if(D.fD.name=="change-owner"){var cC=B["project"];var iH=B["owner"];if(cC==null){G(command:"change-owner",message:"Project not specified.");}if(iH==null){G(command:"change-owner",message:"User not specified.");}var C=await J.get(cC);if(C==null){print("No Such Project '${cC}'");exit(1);}C.owner=iH;await C.WH();print("Owner Changed.");}else{print("Unknown Command: ${D.fD.name}");exit(1);}}JsonEncoder nK=const JsonEncoder.withIndent("  ");CB bQ(){var A=new CB();A.yG("output",allowed:["human","json","csv","yaml"],abbr:"o",defaultsTo:"human",help:"Output Format");return A;}CB cQ(){var A=new CB();return A;}CB dQ(){var A=new CB();A.yG("project",abbr:"p",help:"Project");A.yG("owner",abbr:"o",help:"Owner");return A;}CB eQ(){var A=new CB();A.XV("all",abbr:"a",help:"Export All Projects",negatable:false);A.yG("project",abbr:"p",help:"Project",allowMultiple:true);return A;}class fQ{Future<List<UD>> list()async{var C=WL.rR;if(!(await C.exists())){return [] ;}var D=<UD>[] ;await for(Directory A in C.list().where((I)=>I is Directory)){var G=new File(rD(A.path,UD.jH));if(!(await G.exists())){continue;}var J=tE.convert(await G.readAsString());var B=new UD();var M=xF(A.path);B.FE=A;B.VO(M,J);D.add(B);}return D;}Future<UD> get(String D)async{var A=new Directory(rD(WL.XL,D));if(!(await A.exists())){return null;}var C=new File(rD(A.path,UD.jH));if(!(await C.exists())){return null;}var G=tE.convert(await C.readAsString());var B=new UD();var I=xF(A.path);B.FE=A;B.VO(I,G);return B;}Future<List<int>> rV(B)async{var A=[] ;if(B is Iterable){A=B.toList();}else{A=[B];}var C=new Set<String>();C.addAll(A);for(var D in A){await UL(D,C);}var G=await oR(C);return G;}Future EW(List<int> A)async{await pR(A);}}class UD{static const String jH='_proj.json';Directory FE;String id;String name;String owner;bool PH;int size;Map cF;void VO(String B,Map A){this.cF=A;id=B;name=A["name"];owner=A["owner"];PH=A["isTemplate"];}Future<int> KO()async{var A=0;await for(FileSystemEntity B in FE.list(recursive:true)){var C=await B.stat();A+= C.size;}this.size=A;return A;}Map fW(){return {"id":id,"name":name,"owner":owner,"size":size,"isTemplate":PH};}void update(){cF["name"]=name;cF["owner"]=owner;cF["isTemplate"]=PH;}Future WH([File A])async{update();if(A==null){A=new File(rD(FE.path,jH));}if(!(await A.exists())){await A.create(recursive:true);}await A.writeAsString(nK.convert(cF)+"\n");}}class FL<U> extends Object with ListMixin<U> implements Queue<U>{static const int GL=8;List<U> SZ;int TZ;int UZ;FL([int A]):TZ=0,UZ=0{if(A==null||A<GL){A=GL;}else if(!HL(A)){A=IL(A);}assert(HL(A));SZ=new List<U>(A);}void add(U A){VZ(A);}void addAll(Iterable<U> G){if(G is List){var B=G;int A=B.length;int C=this.length;if(C+A>=SZ.length){WZ(C+A);SZ.setRange(C,C+A,B,0);UZ+= A;}else{int D=SZ.length-UZ;if(A<D){SZ.setRange(UZ,UZ+A,B,0);UZ+= A;}else{int I=A-D;SZ.setRange(UZ,UZ+D,B,0);SZ.setRange(0,I,B,D);UZ=I;}}}else{for(U J in G)VZ(J);}}String toString()=>IterableBase.iterableToFullString(this,"{","}");void addLast(U A){VZ(A);}void addFirst(U A){TZ=(TZ-1)&(SZ.length-1);SZ[TZ]=A;if(TZ==UZ)XZ();}U removeFirst(){if(TZ==UZ)throw new StateError("No element");U A=SZ[TZ];SZ[TZ]=null;TZ=(TZ+1)&(SZ.length-1);return A;}U removeLast(){if(TZ==UZ)throw new StateError("No element");UZ=(UZ-1)&(SZ.length-1);U A=SZ[UZ];SZ[UZ]=null;return A;}int get length=>(UZ-TZ)&(SZ.length-1);void set length(int A){if(A<0)throw new RangeError("Length ${A} may not be negative.");int C=A-length;if(C>=0){if(SZ.length<=A){WZ(A);}UZ=(UZ+C)&(SZ.length-1);return;}int B=UZ+C;if(B>=0){SZ.fillRange(B,UZ,null);}else{B+= SZ.length;SZ.fillRange(0,UZ,null);SZ.fillRange(B,SZ.length,null);}UZ=B;}U operator[](int A){if(A<0||A>=length){throw new RangeError("Index ${A} must be in the range [0..${length}).");}return SZ[(TZ+A)&(SZ.length-1)];}void operator[]=(int A,U B){if(A<0||A>=length){throw new RangeError("Index ${A} must be in the range [0..${length}).");}SZ[(TZ+A)&(SZ.length-1)]=B;}static bool HL(int A)=>(A&(A-1))==0;static int IL(int A){assert(A>0);A=(A<<1)-1;for(;;){int B=A&(A-1);if(B==0)return A;A=B;}}void VZ(U A){SZ[UZ]=A;UZ=(UZ+1)&(SZ.length-1);if(TZ==UZ)XZ();}void XZ(){List<U> A=new List<U>(SZ.length*2);int B=SZ.length-TZ;A.setRange(0,B,SZ,TZ);A.setRange(B,B+TZ,SZ,0);TZ=0;UZ=SZ.length;SZ=A;}int YZ(List<U> A){assert(A.length>=length);if(TZ<=UZ){int C=UZ-TZ;A.setRange(0,C,SZ,TZ);return C;}else{int B=SZ.length-TZ;A.setRange(0,B,SZ,TZ);A.setRange(B,B+UZ,SZ,0);return UZ+B;}}void WZ(int A){assert(A>=length);A+= A>>1;int C=IL(A);List<U> B=new List<U>(C);UZ=YZ(B);SZ=B;TZ=0;}}abstract class XE<PB,l> implements Map<PB,l>{factory XE()=>new CG();}class CG<PB,l> implements XE<PB,l>{final Map<PB,l> ZZ;final Map<l,PB> aZ;XE<l,PB> bZ;CG():this.GX(new HashMap(),new HashMap());CG.GX(this.ZZ,this.aZ);l operator[](Object A)=>ZZ[A];void operator[]=(PB A,l B){cZ(A,B,false);}void replace(PB A,l B){cZ(A,B,true);}void addAll(Map<PB,l> A)=>A.forEach((B,C)=>cZ(B,C,false));bool containsKey(Object A)=>ZZ.containsKey(A);bool containsValue(Object A)=>aZ.containsKey(A);void forEach(void A(PB key,l value))=>ZZ.forEach(A);bool get isEmpty=>ZZ.isEmpty;bool get isNotEmpty=>ZZ.isNotEmpty;Iterable<PB> get keys=>ZZ.keys;int get length=>ZZ.length;Iterable<l> get values=>aZ.keys;XE<l,PB> get JW{if(bZ==null){bZ=new CG.GX(aZ,ZZ);}return bZ;}l putIfAbsent(PB A,l C()){var B=ZZ[A];if(B!=null)return B;if(!ZZ.containsKey(A))return cZ(A,C(),false);return null;}l remove(Object A){aZ.remove(ZZ[A]);return ZZ.remove(A);}void clear(){ZZ.clear();aZ.clear();}l cZ(PB B,l A,bool D){if(B==null)throw new ArgumentError("null key");if(A==null)throw new ArgumentError("null value");var C=ZZ[B];if(C==A)return A;if(aZ.containsKey(A)){if(!D)throw new ArgumentError("Mapping for ${A} exists");ZZ.remove(aZ[A]);}aZ.remove(C);ZZ[B]=A;aZ[A]=B;return A;}}Iterable jS(Iterable<Iterable> A)=>A.expand((B)=>B);abstract class EB implements Comparable<EB>{factory EB(rB A,rB B,String C)=>new ZI(A,B,C);}class ZI extends OM{final rB start;final rB end;final String text;ZI(this.start,this.end,this.text){if(end.d!=start.d){throw new ArgumentError("Source URLs \"${start.d}\" and " " \"${end.d}\" don't match.");}else if(end.offset<start.offset){throw new ArgumentError('End ${end} must come after start ${start}.');}else if(text.length!=start.bO(end)){throw new ArgumentError('Text "${text}" must be ${start.bO(end)} ' 'characters long.');}}}class NM implements Exception{String get message=>dZ;final String dZ;EB get L=>eZ;final EB eZ;NM(this.dZ,this.eZ);String toString({color}){if(L==null)return message;return "Error on "+L.message(message,color:color);}}class aI extends NM implements FormatException{dynamic get source=>fZ;final fZ;int get offset=>L==null?null:L.start.offset;aI(String A,EB B,[this.fZ]):super(A,B);}abstract class OM implements EB{Uri get d=>start.d;int get length=>end.offset-start.offset;int compareTo(EB A){var B=start.compareTo(A.start);return B==0?end.compareTo(A.end):B;}String message(String C,{color}){var A=new StringBuffer();A.write('line ${start.line+1}, column ${start.column+1}');if(d!=null)A.write(' of ${WS(d)}');A.write(': ${C}');var B=this.DW(color:color);if(!B.isEmpty){A.writeln();A.write(B);}return A.toString();}String DW({color}){if(color==true)color=kS;if(color==false)color=null;var C=start.column;var A=new StringBuffer();String B;if(this is bI){var D=(this as bI).context;var G=nS(D,text,C);if(G!=null&&G>0){A.write(D.substring(0,G));D=D.substring(G);}var M=D.indexOf('\n');B=M==-1?D:D.substring(0,M+1);C=NE.min(C,B.length);}else if(length==0){return "";}else{B=text.split("\n").first;C=0;}var I=NE.min(C+end.offset-start.offset,B.length);if(color!=null){A.write(B.substring(0,C));A.write(color);A.write(B.substring(C,I));A.write(MM);A.write(B.substring(I));}else{A.write(B);}if(!B.endsWith('\n'))A.write('\n');for(var J=0;J<C;J++ ){if(B.codeUnitAt(J)==AL){A.writeCharCode(AL);}else{A.writeCharCode(FR);}}if(color!=null)A.write(color);A.write('^'*NE.max(I-C,1));if(color!=null)A.write(MM);return A.toString();}bool operator==(A)=>A is EB&&start==A.start&&end==A.end;int get hashCode=>start.hashCode+(31*end.hashCode);String toString()=>'<${runtimeType}: from ${start} to ${end} "${text}">';}class YE extends dI implements oS{final wD gZ;int get line=>gZ.MH(position);int get column=>gZ.CK(position);ZD get state=>new RM(this,position);p hZ;YD get location=>gZ.location(position);p get hB=>location.YB();YE(String A,{sourceUrl,int position}):gZ=new wD(A,url:sourceUrl),super(A,sourceUrl:sourceUrl,position:position);factory YE.bX(String string,{sourceUrl,int position})=cI;p ZB(ZD B,[ZD A]){var C=A==null?position:A.position;return gZ.L(B.position,C);}bool jD(Pattern A){if(!super.jD(A)){hZ=null;return false;}hZ=gZ.L(position,kE.end);return true;}void error(String A,{Match match,int position,int length}){SM(string,match,position,length);if(match==null&&position==null&&length==null)match=kE;if(position==null){position=match==null?this.position:match.start;}if(length==null)length=match==null?1:match.end-match.start;var B=gZ.L(position,position+length);throw new DG(A,B,string);}}class RM implements ZD{final YE iZ;final int position;int get line=>iZ.gZ.MH(position);int get column=>iZ.gZ.CK(position);RM(this.iZ,this.position);}class bI extends ZI{}final pS=new RegExp("/").pattern=="\\/";class dI{final Uri d;final String string;int get position=>jZ;set position(int A){if(A<0||A>string.length){throw new ArgumentError("Invalid position ${A}");}jZ=A;}int jZ=0;Match get kE=>kZ;Match kZ;String get oB=>string.substring(position);bool get KD=>position==string.length;dI(this.string,{sourceUrl,int position}):d=sourceUrl is String?Uri.parse(sourceUrl):sourceUrl{if(position!=null)this.position=position;}int V(){if(KD)lZ("more input");return string.codeUnitAt(jZ++ );}int X([int A]){if(A==null)A=0;var B=position+A;if(B<0||B>=string.length)return null;return string.codeUnitAt(B);}bool HB(Pattern B){var A=jD(B);if(A)jZ=kZ.end;return A;}void IH(Pattern A,{String name}){if(HB(A))return;if(name==null){if(A is RegExp){var B=A.pattern;if(!pS)B=B.replaceAll("/","\\/");name="/${B}/";}else{name=A.toString().replaceAll("\\","\\\\").replaceAll('"','\\"');name='"${name}"';}}lZ(name);}bool jD(Pattern A){kZ=A.matchAsPrefix(string,position);return kZ!=null;}String substring(int B,[int A]){if(A==null)A=position;return string.substring(B,A);}void error(String A,{Match match,int position,int length}){SM(string,match,position,length);if(match==null&&position==null&&length==null)match=kE;if(position==null){position=match==null?this.position:match.start;}if(length==null)length=match==null?1:match.end-match.start;var B=new wD(string,url:d);var C=B.L(position,position+length);throw new DG(A,C,string);}void lZ(String A){error("expected ${A}.",position:this.position,length:0);}}abstract class KB{static final KB ZS=new rL();static final KB AG=new tL();static final KB BF=new sL();static final KB II=aS();static KB aS(){if(Uri.base.scheme!='file')return KB.BF;if(!Uri.base.path.endsWith('/'))return KB.BF;if(new Uri(path:'a/b').toFilePath()=='a\\b')return KB.AG;return KB.ZS;}String get name;sC get context=>new sC(style:this);String get RC;String DP(String A);String hF(Uri A);String toString()=>name;}class TM extends IM{TM():super(new uS());}class qS{String encode(Map<String,dynamic> B){var A=new sS();A.xJ(B,name:[] );return A.toString();}}abstract class rS{}typedef void eI<l>(l _0);class sS{static final RegExp tS=new RegExp(r'^[A-Za-z0-9_-]+$');final StringBuffer mZ=new StringBuffer();void FK(){if(mZ.isNotEmpty)mZ.writeln();}void FW(List<String> B,{bool array: false}){if(B.isNotEmpty){FK();FK();mZ.write(array?'[[':'[');for(int A=0;A<B.length;A++ ){if(A!=0)mZ.write('.');pO(B[A]);}mZ.write(array?']]':']');}}bK(A){while(A is rS)A=A.aX();return A;}void xJ(Map<String,dynamic> I,{List<String> name,bool array: false}){var C={};var D={};I.forEach((B,A){A=bK(A);if(A is Map){D[B]=A;return;}if(A is Iterable&&A.length>0){A=A.map(bK);if(A.every((G)=>G is Map)){D[B]=A;return;}}C[B]=A;});if(array||C.isNotEmpty){FW(name,array:array);C.forEach(GW);}D.forEach((B,A){name.add(B);if(A is Map){xJ(A,name:name);}else if(A is Iterable){A.forEach((G){xJ(G,name:name,array:true);});}name.removeLast();});}void GW(String A,B){FK();pO(A);mZ.write(' = ');qO(B);}void pO(String A){if(tS.hasMatch(A)){mZ.write(A);}else{oO(A);}}void qO(A){A=bK(A);eI B=BW(A);if(B==null)throw new hI(A);B(A);}eI BW(A){if(A is num)return pV;if(A is bool)return kV;if(A is DateTime)return lV;if(A is String)return qV;if(A is Iterable)return jV;return null;}void pV(num A){mZ.write('${A}');}void kV(bool A){mZ.write(A?'true':'false');}void lV(DateTime A){mZ.write(A.toIso8601String());}Type kW(Iterable B){if(B.isEmpty)return null;if(identical(1,1.0)&&B.every((A)=>A is num)&&B.any((A)=>A is int)&&B.any((A)=>A is!int)){return num;}return B.map((A)=>A.runtimeType).reduce((C,D){if(C!=D)throw new iI(B);return C;});}void jV(Iterable B){var D=kW(B);mZ.write('[');for(var A=0;A<B.length;A++ ){var C=B.elementAt(A);if(A!=0)mZ.write(', ');qO(C);if(D==num&&C is int)mZ.write('.0');}mZ.write(']');}eI<String> AW(String A){var C=[KC.VC['"'],KC.VC['\\']];bool B(String D)=>KC.VC.values.where((G)=>!C.contains(G)).any(D.codeUnits.contains);if(A.contains('\n')||A.contains('\r')){if(A.split(new RegExp('\n|\r')).any(B)){return nV;}return oV;}if(A.contains("'")||B(A)){return oO;}return mV;}void qV(String A){var B=AW(A);B(A);}void nZ(String A,{String quotes,Iterable<int> esc: const[] ,bool multiline: false}){if(esc.isNotEmpty){A=A.codeUnits.map((int B){if(esc.contains(B)){return '\\${KC.VC.JW[B]}';}return new String.fromCharCode(B);}).join();}if(multiline){if(quotes=='"""')A=A.replaceAll('"""',r'\"\"\"');}else if(A.contains('\n')||A.contains('\r')){throw new EG('Newlines are only allowed in multi-line strings!');}if(!esc.contains(quotes.codeUnitAt(0))&&A.contains(quotes)){throw new EG('"${quotes}" are prohibited in non-basic strings.');}mZ.write(quotes);if(multiline)mZ.writeln();mZ.write(A);mZ.write(quotes);}void oO(String A)=>nZ(A,quotes:'"',esc:KC.VC.values);void nV(String B)=>nZ(B,quotes:'"""',esc:KC.VC.values.where((A)=>A!=KC.VC['"']&&A!=KC.VC['n']&&A!=KC.VC['r']),multiline:true);void mV(String A)=>nZ(A,quotes:"'");void oV(String A)=>nZ(A,quotes:"'''",multiline:true);String toString()=>mZ.toString();}class fI{final String ZF;fI(this.ZF);bool operator==(A)=>A is fI&&A.ZF==ZF;int get hashCode=>ZF.hashCode;String toString()=>'The escape sequence "${ZF}" is invalid!';}class EG{final String eF;EG(this.eF);bool operator==(A)=>A is EG&&A.eF==eF;int get hashCode=>eF.hashCode;String toString()=>eF;}class GF{final String name;GF(this.name);bool operator==(A)=>A is GF&&A.name==name;int get hashCode=>name.hashCode;String toString()=>'Cannot redefine "${name}"!';}class gI{final String name;gI(this.name);bool operator==(A)=>A is gI&&A.name==name;int get hashCode=>name.hashCode;String toString()=>'Cannot define table "${name}"! Parent must be a table!';}class hI{final value;hI(this.value);bool operator==(A)=>A is hI&&A.value==value;int get hashCode=>value.hashCode;String toString()=>'"${value}" cannot be encoded as a TOMl value!';}class iI{final Iterable dD;iI(this.dD);bool operator==(A)=>A is iI&&A.dD==dD;int get hashCode=>dD.hashCode;String toString()=>'The items of "${dD}" must all be of the same type!';}class KC extends SI{static final XE<String,int> VC=new XE()..addAll({'b':0x08,'t':0x09,'n':0x0A,'f':0x0C,'r':0x0D,'"':0x22,r'\':0x5C});start()=>O(wJ).end();xB(A,[bool C=false,bool B]){if(B==null)B=C;if(A is Function)A=O(A);var D=O(iD,C);var G=O(iD,B);return A.BK().trim(D,G);}iD([bool A=false])=>A?O(iD)|O(ND):O(eK)|O(aC);eK()=>a(' ')|a('\t');ND()=>a('\n')|a('\r')&a('\n');aC()=>a('#')&O(ND).gP().oC();value()=>O(FH)|O(KH)|O(OH)|O(zG)|O(HQ)|O(dD)|O(NH);N oZ({N quotes,N esc,bool multiline: false}){var A=quotes;if(multiline)A=(A&O(fO).mC()).PD(0);var C=quotes;if(!multiline)C|= O(ND);var B=C.gP();if(esc!=null)B=esc|B;return (A&B.oC()&quotes).trim(O(iD)).PD(1).map((List D)=>D.join());}HQ()=>O(UW)|O(HO)|O(WW)|O(RW);HO()=>oZ(quotes:a('"'),esc:O(HH));HH()=>a('\\')&(O(aK)|O(WK));aK()=>a('u')&O(HP).cH(4).BK()|a('U')&O(HP).cH(8).BK();WK()=>XD();HP()=>JM('0-9a-fA-F');UW()=>oZ(quotes:DF('"""'),esc:O(VW),multiline:true);VW()=>O(fK)|O(HH);fK()=>a('\\')&O(fO).TH()&O(eK).oC();fO()=>O(eK).oC()&O(ND);RW()=>oZ(quotes:DF("'"));WW()=>oZ(quotes:DF("'''"),multiline:true);OH()=>O(xB,pZ);pZ()=>OI('+-').mC()&(a('0')|O(WO));WO()=>BG().TH().jF(a('_'));KH()=>O(xB,qZ);qZ()=>O(pZ)&(O(uV)&O(rO).mC()|O(rO));uV()=>a('.')&O(WO);rO()=>OI('eE')&O(pZ);zG()=>O(xB,rZ);rZ()=>DF('true')|DF('false');FH()=>O(xB,sZ);sZ()=>O(wV)&a('T')&O(xV);wV()=>O(gV)&a('-')&O(DE)&a('-')&O(DE);xV()=>O(ZW)&O(iW);ZW()=>O(DE)&a(':')&O(DE)&a(':')&O(DE)&(a('.')&BG().VH(1,6)).mC();iW()=>a('Z')|O(hW);hW()=>OI('+-')&O(DE)&a(':')&O(DE);DE()=>BG().cH(2);gV()=>BG().cH(4);dD()=>FD(FH)|FD(KH)|FD(OH)|FD(zG)|FD(HQ)|FD(dD)|FD(NH);FD(A)=>O(xB,a('['),false,true)&O(A).jF(O(xB,a(','),true),optionalSeparatorAtEnd:true,includeSeparators:false).mC([] )&O(xB,a(']'),true,false);LE()=>O(aH).trim(O(iD,true))&O(HK);aH()=>a('[')&O(gW)&a(']');XK()=>O(YK).trim(O(iD,true))&O(HK);YK()=>a('[')&O(aH)&a(']');NH()=>O(xB,a('{'))&O(QH).jF(xB(a(',')),optionalSeparatorAtEnd:false,includeSeparators:false).mC([] )&O(xB,a('}'));key()=>O(xB,ZV)|O(dW);ZV()=>JM('A-Za-z0-9_-').TH();dW()=>O(HO);gW()=>O(key).jF(a('.'),includeSeparators:false);QH()=>O(key)&a('=')&O(value);HK()=>O(QH).jF(O(ND)&O(iD,true).oC(),includeSeparators:false,optionalSeparatorAtEnd:true).mC([] );wJ()=>O(iD,true).oC()&O(HK)&(O(LE)|O(XK)).oC();}class uS extends KC{HH()=>super.HH().PD(1);WK()=>super.WK().map((String A){if(KC.VC.containsKey(A)){return new String.fromCharCode(KC.VC[A]);}throw new fI('\\${A}');});aK()=>super.aK().PD(1).map((A)=>new String.fromCharCode(int.parse(A,radix:16)));fK()=>super.fK().map((A)=>'');OH()=>super.OH().map((A)=>int.parse(A.replaceAll('_','')));KH()=>super.KH().map((A)=>double.parse(A.replaceAll('_','')));zG()=>super.zG().map((A)=>A=='true');FH()=>super.FH().map(DateTime.parse);FD(A)=>super.FD(A).PD(1);LE()=>super.LE().map((List A)=>{'type':'table','parent':A[0].sublist(0,A[0].length-1),'name':A[0].last,'pairs':A[1]});aH()=>super.aH().PD(1);XK()=>super.XK().map((List A)=>{'type':'table-array','parent':A[0].sublist(0,A[0].length-1),'name':A[0].last,'pairs':A[1]});YK()=>super.YK().PD(1);NH()=>super.NH().PD(1).map((List C){var A={};C.forEach((Map B){A[B['key']]=B['value'];});return A;});QH()=>super.QH().aW([0,2]).map((List A)=>{'key':A[0],'value':A[1]});wJ()=>super.wJ().map((List o){var J={};var SB=new Set();void M(String A){if(SB.contains(A))throw new GF(A);SB.add(A);}Function aB(Map SC,[String cC])=>(Map G){var A=cC==null?G['key']:'${cC}.${G['key']}';M(A);if(SC.containsKey(G['key']))throw new GF(A);SC[G['key']]=G['value'];};o[1].forEach(aB(J));o[2].forEach((Map C){var B=J;var A=[] ;C['parent'].forEach((String I){B=B.putIfAbsent(I,()=>{});if(B is List){I='${I}[${B.length-1}]';B=B.last;}A.add(I);if(B is!Map)throw new gI(A.join('.'));});A.add(C['name']);A=A.join('.');var R;if(C['type']=='table-array'){var S=B.putIfAbsent(C['name'],(){M(A);return [] ;});if(S is Map)throw new GF(A);var TD=S.length;S.add(R={});A='${A}[${TD}]';}else{R=B.putIfAbsent(C['name'],()=>{});}M(A);C['pairs'].forEach(aB(R,A));});Z(D){if(D is Map){return new UnmodifiableMapView(new Map.fromIterables(D.keys,D.values.map(Z)));}if(D is List){return new UnmodifiableListView(D.map(Z));}return D;}return Z(J);});}abstract class PR<PB,l> implements Map<PB,l>{static sE(){throw new UnsupportedError("Cannot modify an unmodifiable Map");}void operator[]=(PB A,l B)=>sE();l putIfAbsent(PB A,l B())=>sE();void addAll(Map<PB,l> A)=>sE();l remove(Object A)=>sE();void clear()=>sE();}class sL extends uC{sL();final name='url';final RC='/';final UB=const['/'];final wP=new RegExp(r'/');final fP=new RegExp(r"(^[a-zA-Z][-+.a-zA-Z\d]*://|[^/])$");final uP=new RegExp(r"[a-zA-Z][-+.a-zA-Z\d]*://[^/]*");final tP=new RegExp(r"^/");bool EH(String A)=>A.contains('/');bool b(int A)=>A==JC;bool mE(String A){if(A.isEmpty)return false;if(!b(A.codeUnitAt(A.length-1)))return true;return A.endsWith("://")&&bC(A)==A.length;}int bC(String A,{bool withDrive: false}){if(A.isEmpty)return 0;if(b(A.codeUnitAt(0)))return 1;for(var C=0;C<A.length;C++ ){var D=A.codeUnitAt(C);if(b(D))return 0;if(D==EI){if(C==0)return 0;if(A.startsWith('//',C+1))C+= 3;var B=A.indexOf('/',C);if(B<=0)return A.length;if(!withDrive||A.length<B+3)return B;if(!A.startsWith('file://'))return B;if(!vL(A,B+1))return B;return A.length==B+3?B+3:B+4;}}return 0;}bool TB(String A)=>A.isNotEmpty&&b(A.codeUnitAt(0));String hF(Uri A)=>A.toString();}class yK{static const rE=3;final List NK;StringBuffer buffer;int hD=0;List<int> CH;int RH=0;int fF=0;yK(this.NK);String zV(){buffer=new StringBuffer();cV();for(var B in NK){if(B is String){if(buffer.isNotEmpty)buffer.write("\n\n");buffer.write(B);fF=1;continue;}var A=B as VB;if(A.hide)continue;write(0,yO(A));write(1,AP(A));if(A.EK!=null)write(2,A.EK);if(A.gE!=null){var C=A.gE.keys.toList(growable:false);C.sort();ND();for(var D in C){write(1,zO(D));write(2,A.gE[D]);}ND();}else if(A.YF!=null){write(2,bV(A));}else if(A.defaultValue!=null){if(A.LD&&A.defaultValue==true){write(2,'(defaults to on)');}else if(!A.LD){write(2,'(defaults to "${A.defaultValue}")');}}if(RH>1)ND();}return buffer.toString();}String yO(VB A){if(A.cD!=null){return '-${A.cD}, ';}else{return '';}}String AP(VB A){var B;if(A.negatable){B='--[no-]${A.name}';}else{B='--${A.name}';}if(A.dK!=null)B+= "=<${A.dK}>";return B;}String zO(String A){return '      [${A}]';}void cV(){int C=0;int A=0;for(var B in NK){if(B is!VB)continue;if(B.hide)continue;C=NE.max(C,yO(B).length);A=NE.max(A,AP(B).length);if(B.gE!=null){for(var D in B.gE.keys){A=NE.max(A,zO(D).length);}}}A+= 4;CH=[C,A];}void ND(){fF++ ;hD=0;RH=0;}void write(int B,String C){var A=C.split('\n');while(A.length>0&&A[0].trim()==''){A.removeRange(0,1);}while(A.length>0&&A[A.length-1].trim()==''){A.removeLast();}for(var D in A){nW(B,D);}}void nW(int A,String B){while(fF>0){buffer.write('\n');fF-- ;}while(hD!=A){if(hD<rE-1){buffer.write(zK('',CH[hD]));}else{buffer.write('\n');}hD=(hD+1)%rE;}if(A<CH.length){buffer.write(zK(B,CH[A]));}else{buffer.write(B);}hD=(hD+1)%rE;if(A==rE-1)fF++ ;if(A==rE-1){RH++ ;}else{RH=0;}}String bV(VB B){var A=new StringBuffer();A.write('[');bool C=true;for(var D in B.YF){if(!C)A.write(', ');A.write(D);if(D==B.defaultValue){A.write(' (default)');}C=false;}A.write(']');return A.toString();}}String zK(String B,int C){final A=new StringBuffer();A.write(B);while(A.length<C){A.write(' ');}return A.toString();}bool uL(int A)=>(A>=kL&&A<=lL)||(A>=mL&&A<=nL);bool vL(String A,int B){if(A.length<B+2)return false;if(!uL(A.codeUnitAt(B)))return false;if(A.codeUnitAt(B+1)!=EI)return false;if(A.length==B+2)return true;return A.codeUnitAt(B+2)==JC;}int nS(String B,String C,int D){var J=C=='';var A=B.indexOf(C);while(A!=-1){var G=B.lastIndexOf('\n',A)+1;var I=A-G;if(D==I||(J&&D==I+1)){return G;}A=B.indexOf(C,A+1);}return null;}void SM(String C,Match D,int A,int B){if(D!=null&&(A!=null||B!=null)){throw new ArgumentError("Can't pass both match and position/length.");}if(A!=null){if(A<0){throw new RangeError("position must be greater than or equal to 0.");}else if(A>C.length){throw new RangeError("position must be less than or equal to the " "string length.");}}if(B!=null&&B<0){throw new RangeError("length must be greater than or equal to 0.");}if(A!=null&&B!=null&&A+B>C.length){throw new RangeError("position plus length must not go beyond the end of " "the string.");}}const JI=0x20;class tL extends uC{tL();final name='windows';final RC='\\';final UB=const['/','\\'];final wP=new RegExp(r'[/\\]');final fP=new RegExp(r'[^/\\]$');final uP=new RegExp(r'^(\\\\[^\\]+\\[^\\/]+|[a-zA-Z]:[/\\])');final tP=new RegExp(r"^[/\\](?![/\\])");bool EH(String A)=>A.contains('/');bool b(int A)=>A==JC||A==UE;bool mE(String A){if(A.isEmpty)return false;return !b(A.codeUnitAt(A.length-1));}int bC(String A,{bool withDrive: false}){if(A.isEmpty)return 0;if(A.codeUnitAt(0)==JC)return 1;if(A.codeUnitAt(0)==UE){if(A.length<2||A.codeUnitAt(1)!=UE)return 1;var B=A.indexOf('\\',2);if(B>0){B=A.indexOf('\\',B+1);if(B>0)return B;}return A.length;}if(A.length<3)return 0;if(!uL(A.codeUnitAt(0)))return 0;if(A.codeUnitAt(1)!=EI)return 0;if(!b(A.codeUnitAt(2)))return 0;return 3;}bool TB(String A)=>bC(A)==1;String hF(Uri B){if(B.scheme!=''&&B.scheme!='file'){throw new ArgumentError("Uri ${B} must have scheme 'file:'.");}var A=B.path;if(B.host==''){if(A.length>=3&&A.startsWith('/')&&vL(A,1)){A=A.replaceFirst("/","");}}else{A='\\\\${B.host}${A}';}return Uri.decodeComponent(A.replaceAll("/","\\"));}bool BH(int A,int B){if(A==B)return true;if(A==JC)return B==UE;if(A==UE)return B==JC;if(A^B!=JI)return false;var C=A|JI;return C>=mL&&C<=nL;}bool QK(String A,String C){if(identical(A,C))return true;if(A.length!=C.length)return false;for(var B=0;B<A.length;B++ ){if(!BH(A.codeUnitAt(B),C.codeUnitAt(B))){return false;}}return true;}int LO(int A){if(A==JC)return UE;if(A<kL)return A;if(A>lL)return A;return A|JI;}String MO(String A)=>A.toLowerCase();}tT(String A,{sourceUrl})=>uT(A,sourceUrl:sourceUrl).value;FB uT(String A,{sourceUrl})=>vT(A,sourceUrl:sourceUrl).tJ;dE vT(String D,{sourceUrl}){var A=new cM(D,sourceUrl:sourceUrl);var B=A.load();if(B==null){return new dE.NX(new MB.RX(null,A.L),A.L,null,const[] );}var C=A.load();if(C!=null){throw new Y("Only expected one document.",C.L);}return B;}Map vS()=>new HashMap(equals:wS,hashCode:UM);bool wS(A,B)=>new xS().HD(A,B);class xS{final tZ=[] ;final uZ=[] ;bool HD(A,B){if(A is MB)A=A.value;if(B is MB)B=B.value;for(var C=0;C<tZ.length;C++ ){var D=identical(A,tZ[C]);var G=identical(B,uZ[C]);if(D&&G)return true;if(D||G)return false;}tZ.add(A);uZ.add(B);try {if(A is List&&B is List){return vZ(A,B);}else if(A is Map&&B is Map){return wZ(A,B);}else if(A is num&&B is num){return xZ(A,B);}else{return A==B;}}finally {tZ.removeLast();uZ.removeLast();}}bool vZ(List B,List C){if(B.length!=C.length)return false;for(var A=0;A<B.length;A++ ){if(!HD(B[A],C[A]))return false;}return true;}bool wZ(Map A,Map B){if(A.length!=B.length)return false;for(var C in A.keys){if(!B.containsKey(C))return false;if(!HD(A[C],B[C]))return false;}return true;}bool xZ(num A,num B){if(A.isNaN&&B.isNaN)return true;return A==B;}}int UM(G){var B=[] ;C(A){if(B.any((I)=>identical(I,A)))return -1;B.add(A);try {if(A is Map){var D=const EL();return D.JD(A.keys.map(C))^D.JD(A.values.map(C));}else if(A is Iterable){return const CL().JD(A.map(UM));}else if(A is MB){return A.value.hashCode;}else{return A.hashCode;}}finally {B.removeLast();}}return C(G);}class g{final c type;final p L;g(this.type,this.L);String toString()=>type.toString();}class FG implements g{get type=>c.yS;final p L;final PF versionDirective;final List<MC> bH;final bool isImplicit;FG(this.L,{this.versionDirective,List<MC> tagDirectives,this.isImplicit: true}):bH=tagDirectives==null?[] :tagDirectives;String toString()=>"DOCUMENT_START";}class GG implements g{get type=>c.XM;final p L;final bool isImplicit;GG(this.L,{this.isImplicit: true});String toString()=>"DOCUMENT_END";}class jI implements g{get type=>c.YM;final p L;final String name;jI(this.L,this.name);String toString()=>"ALIAS ${name}";}abstract class kI implements g{String get anchor;String get tag;String toString(){var A=new StringBuffer('${type}');if(anchor!=null)A.write(" &${anchor}");if(tag!=null)A.write(" ${tag}");return A.toString();}}class LC extends kI{get type=>c.ZM;final p L;final String anchor;final String tag;final String value;final OB Q;LC(this.L,this.value,this.Q,{this.anchor,this.tag});String toString()=>"${super.toString()} \"${value}\"";}class HF extends kI{get type=>c.aM;final p L;final String anchor;final String tag;final sB Q;HF(this.L,this.Q,{this.anchor,this.tag});}class IF extends kI{get type=>c.bM;final p L;final String anchor;final String tag;final sB Q;IF(this.L,this.Q,{this.anchor,this.tag});}class c{static const VM=const c.JX("STREAM_START");static const WM=const c.JX("STREAM_END");static const yS=const c.JX("DOCUMENT_START");static const XM=const c.JX("DOCUMENT_END");static const YM=const c.JX("ALIAS");static const ZM=const c.JX("SCALAR");static const aM=const c.JX("SEQUENCE_START");static const HG=const c.JX("SEQUENCE_END");static const bM=const c.JX("MAPPING_START");static const IG=const c.JX("MAPPING_END");final String name;const c.JX(this.name);String toString()=>name;}class Y extends aI{Y(String A,EB B):super(A,B);}class cM{final lI yZ;final zZ=new Map<String,FB>();p get L=>Aa;p Aa;cM(String B,{sourceUrl}):yZ=new lI(B,sourceUrl:sourceUrl){var A=yZ.RB();Aa=A.L;assert(A.type==c.VM);}dE load(){if(yZ.KD)return null;var A=yZ.RB();if(A.type==c.WM){Aa=Aa.expand(A.L);return null;}var B=Ba(A);Aa=Aa.expand(B.L);zZ.clear();return B;}dE Ba(FG A){var C=Ca(yZ.RB());var B=yZ.RB() as GG;assert(B.type==c.XM);return new dE.NX(C,A.L.expand(B.L),A.versionDirective,A.bH,startImplicit:A.isImplicit,endImplicit:B.isImplicit);}FB Ca(g A){switch (A.type){case c.YM:return Da(A);case c.ZM:return Ea(A);case c.aM:return Fa(A);case c.bM:return Ga(A);default:throw "Unreachable";}}void Ha(String A,FB B){if(A==null)return;zZ[A]=B;}FB Da(jI A){var B=zZ[A.name];if(B!=null)return B;throw new Y("Undefined alias.",A.L);}FB Ea(LC A){var B;if(A.tag=="!"){B=new MB.QX(A.value,A);}else if(A.tag!=null){B=Ia(A);}else{B=Ja(A);}Ha(A.anchor,B);return B;}FB Fa(HF A){if(A.tag!="!"&&A.tag!=null&&A.tag!="tag:yaml.org,2002:seq"){throw new Y("Invalid tag for sequence.",A.L);}var D=<FB>[] ;var C=new DN.PX(D,A.L,A.Q);Ha(A.anchor,C);var B=yZ.RB();while(B.type!=c.HG){D.add(Ca(B));B=yZ.RB();}EN(C,A.L.expand(B.L));return C;}FB Ga(IF A){if(A.tag!="!"&&A.tag!=null&&A.tag!="tag:yaml.org,2002:map"){throw new Y("Invalid tag for mapping.",A.L);}var D=vS();var C=new CN.OX(D,A.L,A.Q);Ha(A.anchor,C);var B=yZ.RB();while(B.type!=c.IG){var G=Ca(B);var I=Ca(yZ.RB());D[G]=I;B=yZ.RB();}EN(C,A.L.expand(B.L));return C;}MB Ia(LC A){switch (A.tag){case "tag:yaml.org,2002:null":var B=Ka(A);if(B!=null)return B;throw new Y("Invalid null scalar.",A.L);case "tag:yaml.org,2002:bool":var B=La(A);if(B!=null)return B;throw new Y("Invalid bool scalar.",A.L);case "tag:yaml.org,2002:int":var B=Ma(A,allowFloat:false);if(B!=null)return B;throw new Y("Invalid int scalar.",A.L);case "tag:yaml.org,2002:float":var B=Ma(A,allowInt:false);if(B!=null)return B;throw new Y("Invalid float scalar.",A.L);case "tag:yaml.org,2002:str":return new MB.QX(A.value,A);default:throw new Y('Undefined tag: ${A.tag}.',A.L);}}MB Ja(LC A)=>Na(A)??new MB.QX(A.value,A);MB Na(LC A){var B=A.value.length;if(B==0)return new MB.QX(null,A);var C=A.value.codeUnitAt(0);switch (C){case oF:case qH:case rH:return Ma(A);case KR:case HR:return B==4?Ka(A):null;case MR:case IR:return B==4?La(A):null;case JR:case GR:return B==5?La(A):null;case OR:return B==1?new MB.QX(null,A):null;default:if(C>=OE&&C<=pF)return Ma(A);return null;}}MB Ka(LC A){switch (A.value){case "":case "null":case "Null":case "NULL":case "~":return new MB.QX(null,A);default:return null;}}MB La(LC A){switch (A.value){case "true":case "True":case "TRUE":return new MB.QX(true,A);case "false":case "False":case "FALSE":return new MB.QX(false,A);default:return null;}}FB Ma(LC A,{bool allowInt: true,bool allowFloat: true}){var B=Oa(A.value,allowInt:allowInt,allowFloat:allowFloat);return B==null?null:new MB.QX(B,A);}num Oa(String A,{bool allowInt: true,bool allowFloat: true}){assert(allowInt||allowFloat);var B=A.codeUnitAt(0);var G=A.length;if(allowInt&&G==1){var I=B-OE;return I>=0&&I<=9?I:null;}var C=A.codeUnitAt(1);if(allowInt&&B==OE){if(C==NR)return int.parse(A,onError:(D)=>null);if(C==LR){var M=A.substring(2);return int.parse(M,radix:8,onError:(D)=>null);}}if((B>=OE&&B<=pF)||((B==qH||B==rH)&&C>=OE&&C<=pF)){var J=null;if(allowInt){J=int.parse(A,radix:10,onError:(D)=>null);}if(allowFloat)J??= double.parse(A,(D)=>null);return J;}if(!allowFloat)return null;if((B==oF&&C>=OE&&C<=pF)||(B==rH||B==qH)&&C==oF){if(G==5){switch (A){case "+.inf":case "+.Inf":case "+.INF":return double.INFINITY;case "-.inf":case "-.Inf":case "-.INF":return -double.INFINITY;}}return double.parse(A,(D)=>null);}if(G==4&&B==oF){switch (A){case ".inf":case ".Inf":case ".INF":return double.INFINITY;case ".nan":case ".NaN":case ".NAN":return double.NAN;}}return null;}}class lI{final tI Pa;final Qa=new List<P>();var Ra=P.dM;final Sa=new Map<String,MC>();bool get KD=>Ra==P.mM;lI(String A,{sourceUrl}):Pa=new tI(A,sourceUrl:sourceUrl);g RB(){try {if(KD)throw new StateError("No more events.");var B=Ta();return B;}on DG catch (A){throw new Y(A.message,A.L);}}g Ta(){switch (Ra){case P.dM:return Ua();case P.mI:return Va();case P.eM:return Wa();case P.nI:return Xa();case P.fM:return Ya(block:true);case P.zS:return Ya(block:true,indentlessSequence:true);case P.AT:return Ya();case P.gM:Pa.HB();return Za();case P.oI:return Za();case P.JG:return aa();case P.hM:Pa.HB();return ba();case P.KG:return ba();case P.LG:return ca();case P.iM:return da(first:true);case P.pI:return da();case P.jM:return ea();case P.qI:return fa();case P.rI:return ga();case P.kM:return ha(first:true);case P.MG:return ha();case P.sI:return ia();case P.lM:return ia(empty:true);default:throw "Unreachable";}}g Ua(){var A=Pa.HB();assert(A.type==K.wM);Ra=P.mI;return new g(c.VM,A.L);}g Va(){var A=Pa.XB();while(A.type==K.cG){A=Pa.tB();}if(A.type!=K.ZG&&A.type!=K.aG&&A.type!=K.bG&&A.type!=K.NF){ja();Qa.add(P.nI);Ra=P.fM;return new FG(A.L.start.YB());}if(A.type==K.NF){Ra=P.mM;Pa.HB();return new g(c.WM,A.L);}var C=A.L;var B=ja();var D=B.first;var G=B.last;A=Pa.XB();if(A.type!=K.bG){throw new Y("Expected document start.",A.L);}Qa.add(P.nI);Ra=P.eM;Pa.HB();return new FG(C.expand(A.L),versionDirective:D,tagDirectives:G,isImplicit:false);}g Wa(){var A=Pa.XB();switch (A.type){case K.ZG:case K.aG:case K.bG:case K.cG:case K.NF:Ra=Qa.removeLast();return ka(A.L.start);default:return Ya(block:true);}}g Xa(){Sa.clear();Ra=P.mI;var A=Pa.XB();if(A.type==K.cG){Pa.HB();return new GG(A.L,isImplicit:false);}else{return new GG(A.L.start.YB(),isImplicit:true);}}g Ya({bool block: false,bool indentlessSequence: false}){var A=Pa.XB();if(A is IJ){Pa.HB();Ra=Qa.removeLast();return new jI(A.L,A.name);}var D;var G;var B=A.L.start.YB();I(A){D=A.name;B=B.expand(A.L);return Pa.tB();}J(A){G=A;B=B.expand(A.L);return Pa.tB();}if(A is XG){A=I(A);if(A is YG)A=J(A);}else if(A is YG){A=J(A);if(A is XG)A=I(A);}var C;if(G!=null){if(G.vB==null){C=G.ZH;}else{var M=Sa[G.vB];if(M==null){throw new Y("Undefined tag handle.",G.L);}C=M.prefix+G.ZH;}}if(indentlessSequence&&A.type==K.cE){Ra=P.JG;return new HF(B.expand(A.L),sB.EJ,anchor:D,tag:C);}if(A is ZE){if(C==null&&A.Q!=OB.WG)C="!";Ra=Qa.removeLast();Pa.HB();return new LC(B.expand(A.L),A.value,A.Q,anchor:D,tag:C);}if(A.type==K.yM){Ra=P.iM;return new HF(B.expand(A.L),sB.FJ,anchor:D,tag:C);}if(A.type==K.zM){Ra=P.kM;return new IF(B.expand(A.L),sB.FJ,anchor:D,tag:C);}if(block&&A.type==K.xM){Ra=P.gM;return new HF(B.expand(A.L),sB.EJ,anchor:D,tag:C);}if(block&&A.type==K.dG){Ra=P.hM;return new IF(B.expand(A.L),sB.EJ,anchor:D,tag:C);}if(D!=null||C!=null){Ra=Qa.removeLast();return new LC(B,'',OB.WG,anchor:D,tag:C);}throw new Y("Expected node content.",B);}g Za(){var A=Pa.XB();if(A.type==K.cE){A=Pa.tB();if(A.type==K.cE||A.type==K.yD){Ra=P.oI;return ka(A.L.end);}else{Qa.add(P.oI);return Ya(block:true);}}if(A.type==K.yD){Pa.HB();Ra=Qa.removeLast();return new g(c.HG,A.L);}throw new Y("While parsing a block collection, expected '-'.",A.L.start.YB());}g aa(){var A=Pa.XB();if(A.type!=K.cE){Ra=Qa.removeLast();return new g(c.HG,A.L.start.YB());}var B=A.L.start;A=Pa.tB();if(A.type==K.cE||A.type==K.yC||A.type==K.hC||A.type==K.yD){Ra=P.JG;return ka(B);}else{Qa.add(P.JG);return Ya(block:true);}}g ba(){var A=Pa.XB();if(A.type==K.yC){var B=A.L.start;A=Pa.tB();if(A.type==K.yC||A.type==K.hC||A.type==K.yD){Ra=P.LG;return ka(B);}else{Qa.add(P.LG);return Ya(block:true,indentlessSequence:true);}}if(A.type==K.hC){Ra=P.LG;return ka(A.L.start);}if(A.type==K.yD){Pa.HB();Ra=Qa.removeLast();return new g(c.IG,A.L);}throw new Y("Expected a key while parsing a block mapping.",A.L.start.YB());}g ca(){var A=Pa.XB();if(A.type!=K.hC){Ra=P.KG;return ka(A.L.start);}var B=A.L.start;A=Pa.tB();if(A.type==K.yC||A.type==K.hC||A.type==K.yD){Ra=P.KG;return ka(B);}else{Qa.add(P.KG);return Ya(block:true,indentlessSequence:true);}}g da({bool first: false}){if(first)Pa.HB();var A=Pa.XB();if(A.type!=K.aE){if(!first){if(A.type!=K.zD){throw new Y("While parsing a flow sequence, expected ',' or ']'.",A.L.start.YB());}A=Pa.tB();}if(A.type==K.yC){Ra=P.jM;Pa.HB();return new IF(A.L,sB.FJ);}else if(A.type!=K.aE){Qa.add(P.pI);return Ya();}}Pa.HB();Ra=Qa.removeLast();return new g(c.HG,A.L);}g ea(){var A=Pa.XB();if(A.type==K.hC||A.type==K.zD||A.type==K.aE){var B=A.L.start;Ra=P.qI;return ka(B);}else{Qa.add(P.qI);return Ya();}}g fa(){var A=Pa.XB();if(A.type==K.hC){A=Pa.tB();if(A.type!=K.zD&&A.type!=K.aE){Qa.add(P.rI);return Ya();}}Ra=P.rI;return ka(A.L.start);}g ga(){Ra=P.pI;return new g(c.IG,Pa.XB().L.start.YB());}g ha({bool first: false}){if(first)Pa.HB();var A=Pa.XB();if(A.type!=K.bE){if(!first){if(A.type!=K.zD){throw new Y("While parsing a flow mapping, expected ',' or '}'.",A.L.start.YB());}A=Pa.tB();}if(A.type==K.yC){A=Pa.tB();if(A.type!=K.hC&&A.type!=K.zD&&A.type!=K.bE){Qa.add(P.sI);return Ya();}else{Ra=P.sI;return ka(A.L.start);}}else if(A.type!=K.bE){Qa.add(P.lM);return Ya();}}Pa.HB();Ra=Qa.removeLast();return new g(c.IG,A.L);}g ia({bool empty: false}){var A=Pa.XB();if(empty){Ra=P.MG;return ka(A.L.start);}if(A.type==K.hC){A=Pa.tB();if(A.type!=K.zD&&A.type!=K.bE){Qa.add(P.MG);return Ya();}}Ra=P.MG;return ka(A.L.start);}g ka(rB A)=>new LC(A.YB(),'',OB.WG);OF<PF,List<MC>> ja(){var A=Pa.XB();var B;var C=<MC>[] ;while(A.type==K.ZG||A.type==K.aG){if(A is GJ){if(B!=null){throw new Y("Duplicate %YAML directive.",A.L);}if(A.HE!=1||A.kD==0){throw new Y("Incompatible YAML document. This parser only supports YAML 1.1 " "and 1.2.",A.L);}else if(A.kD>2){BN("Warning: this parser only supports YAML 1.1 and 1.2.",A.L);}B=new PF(A.HE,A.kD);}else if(A is HJ){var D=new MC(A.vB,A.prefix);la(D,A.L);C.add(D);}A=Pa.tB();}la(new MC("!","!"),A.L.start.YB(),allowDuplicates:true);la(new MC("!!","tag:yaml.org,2002:"),A.L.start.YB(),allowDuplicates:true);return new OF(B,C);}void la(MC A,p B,{bool allowDuplicates: false}){if(Sa.containsKey(A.vB)){if(allowDuplicates)return;throw new Y("Duplicate %TAG directive.",B);}Sa[A.vB]=A;}}class P{static const dM=const P("STREAM_START");static const mI=const P("DOCUMENT_START");static const eM=const P("DOCUMENT_CONTENT");static const nI=const P("DOCUMENT_END");static const fM=const P("BLOCK_NODE");static const zS=const P("BLOCK_NODE_OR_INDENTLESS_SEQUENCE");static const AT=const P("FLOW_NODE");static const gM=const P("BLOCK_SEQUENCE_FIRST_ENTRY");static const oI=const P("BLOCK_SEQUENCE_ENTRY");static const JG=const P("INDENTLESS_SEQUENCE_ENTRY");static const hM=const P("BLOCK_MAPPING_FIRST_KEY");static const KG=const P("BLOCK_MAPPING_KEY");static const LG=const P("BLOCK_MAPPING_VALUE");static const iM=const P("FLOW_SEQUENCE_FIRST_ENTRY");static const pI=const P("FLOW_SEQUENCE_ENTRY");static const jM=const P("FLOW_SEQUENCE_ENTRY_MAPPING_KEY");static const qI=const P("FLOW_SEQUENCE_ENTRY_MAPPING_VALUE");static const rI=const P("FLOW_SEQUENCE_ENTRY_MAPPING_END");static const kM=const P("FLOW_MAPPING_FIRST_KEY");static const MG=const P("FLOW_MAPPING_KEY");static const sI=const P("FLOW_MAPPING_VALUE");static const lM=const P("FLOW_MAPPING_EMPTY_VALUE");static const mM=const P("END");final String name;const P(this.name);String toString()=>name;}class tI{static const eC=0x9;static const fC=0xA;static const gC=0xD;static const WC=0x20;static const BT=0x24;static const CT=0x28;static const DT=0x29;static const JF=0x2B;static const KF=0x2C;static const NG=0x2D;static const ET=0x2E;static const uI=0x3F;static const OG=0x3A;static const FT=0x3B;static const GT=0x3D;static const PG=0x5B;static const MF=0x5D;static const vI=0x7B;static const QG=0x7D;static const wI=0x23;static const nM=0x26;static const oM=0x2A;static const pM=0x21;static const IT=0x7C;static const JT=0x3C;static const KT=0x3E;static const xD=0x27;static const RG=0x22;static const SG=0x25;static const xI=0x40;static const qM=0x60;static const LT=0x7E;static const MT=0x0;static const NT=0x7;static const OT=0x8;static const PT=0xB;static const QT=0xC;static const RT=0x1B;static const rM=0x2F;static const yI=0x5C;static const ST=0x5F;static const TG=0x85;static const TT=0xA0;static const UT=0x2028;static const VT=0x2029;static const zI=0xFEFF;static const xC=0x30;static const UG=0x39;static const VG=0x61;static const WT=0x62;static const XT=0x65;static const sM=0x66;static const YT=0x6E;static const ZT=0x72;static const aT=0x74;static const bT=0x75;static const cT=0x76;static const dT=0x78;static const eT=0x7A;static const AJ=0x41;static const tM=0x46;static const fT=0x4C;static const gT=0x4E;static const hT=0x50;static const iT=0x55;static const jT=0x5A;final YE ma;var na=false;var oa=false;final pa=new FL<k>();var qa=0;var ra=false;final sa=<int>[-1];var ta=true;final ua=<BJ>[null];int get va=>sa.last;bool get wa=>ua.length==1;bool get xa=>ma.KD||ya;bool get ya=>za(0);bool get Ab=>Bb(0);bool get Cb=>Db(0);bool get Eb{var A=ma.X();if(A==null)return false;switch (A){case NG:case FT:case rM:case OG:case xI:case nM:case GT:case JF:case BT:case ET:case LT:case uI:case oM:case xD:case CT:case DT:case SG:return true;default:return (A>=xC&&A<=UG)||(A>=VG&&A<=eT)||(A>=AJ&&A<=jT);}}bool get Fb{if(!Gb)return false;switch (ma.X()){case KF:case PG:case MF:case vI:case QG:return false;default:return true;}}bool get Hb{var A=ma.X();return A!=null&&(A>=xC&&A<=UG);}bool get Ib{var A=ma.X();if(A==null)return false;return (A>=xC&&A<=UG)||(A>=VG&&A<=sM)||(A>=AJ&&A<=tM);}bool get Jb=>Kb(0);bool get Lb{var A=ma.X();if(A==null)return false;switch (A){case fC:case gC:case zI:return false;case eC:case TG:return true;default:return (A>=0x00020&&A<=0x00007E)||(A>=0x000A0&&A<=0x00D7FF)||(A>=0x0E000&&A<=0x00FFFD)||(A>=0x10000&&A<=0x10FFFF);}}bool get Gb{var A=ma.X();if(A==null)return false;switch (A){case fC:case gC:case zI:case WC:return false;case TG:return true;default:return (A>=0x00020&&A<=0x00007E)||(A>=0x000A0&&A<=0x00D7FF)||(A>=0x0E000&&A<=0x00FFFD)||(A>=0x10000&&A<=0x10FFFF);}}bool get Mb{return ma.column==0&&Bb(3)&&(ma.jD('---')||ma.jD('...'));}tI(String A,{sourceUrl}):ma=new YE.bX(A,sourceUrl:sourceUrl);k HB(){if(oa)throw new StateError("Out of tokens.");if(!ra)Nb();var A=pa.removeFirst();ra=false;qa++ ;oa=A is k&&A.type==K.NF;return A;}k tB(){HB();return XB();}k XB(){if(oa)return null;if(!ra)Nb();return pa.first;}void Nb(){while(true){if(pa.isNotEmpty){Ob();if(!ua.any((A)=>A!=null&&A.eH==qa)){break;}}Pb();}ra=true;}void Pb(){if(!na){Qb();return;}Rb();Ob();Sb(ma.column);if(ma.KD){Tb();return;}if(ma.column==0){if(ma.X()==SG){Ub();return;}if(Bb(3)){if(ma.jD('---')){Vb(K.bG);return;}if(ma.jD('...')){Vb(K.cG);return;}}}switch (ma.X()){case PG:Wb(K.yM);return;case vI:Wb(K.zM);return;case MF:Xb(K.aE);return;case QG:Xb(K.bE);return;case KF:Yb();return;case oM:Zb(anchor:false);return;case nM:Zb(anchor:true);return;case pM:ab();return;case xD:bb(singleQuote:true);return;case RG:bb(singleQuote:false);return;case IT:if(!wa)cb();db(literal:true);return;case KT:if(!wa)cb();db(literal:false);return;case SG:case xI:case qM:cb();return;case NG:if(Kb(1)){eb();}else{fb();}return;case uI:if(Kb(1)){eb();}else{gb();}return;case OG:if(!wa&&pa.isNotEmpty){var A=pa.last;if(A.type==K.aE||A.type==K.bE||(A.type==K.AN&&(A as ZE).Q.LW)){hb();return;}}if(Kb(1)){eb();}else{hb();}return;default:if(!Lb)cb();eb();return;}throw 'Inaccessible';}void cb()=>ma.error("Unexpected character.",length:1);void Ob(){for(var A=0;A<ua.length;A++ ){var B=ua[A];if(B==null)continue;if(!wa)continue;if(B.line==ma.line)continue;if(B.TK){throw new Y("Expected ':'.",ma.hB);}ua[A]=null;}}void ib(){var A=wa&&va==ma.column;assert(ta||!A);if(!ta)return;jb();ua[ua.length-1]=new BJ(qa+pa.length,ma.line,ma.column,ma.location,required:A);}void jb(){var A=ua.last;if(A!=null&&A.TK){throw new Y("Could not find expected ':' for simple key.",A.location.YB());}ua[ua.length-1]=null;}void kb(){ua.add(null);}void lb(){if(wa)return;ua.removeLast();}void mb(int A,K C,rB D,{int tokenNumber}){if(!wa)return;if(va!=-1&&va>=A)return;sa.add(A);var B=new k(C,D.YB());if(tokenNumber==null){pa.add(B);}else{pa.insert(tokenNumber-qa,B);}}void Sb(int A){if(!wa)return;while(va>A){pa.add(new k(K.yD,ma.hB));sa.removeLast();}}void nb()=>Sb(-1);void Qb(){na=true;pa.add(new k(K.wM,ma.hB));}void Tb(){nb();jb();ta=false;pa.add(new k(K.NF,ma.hB));}void Ub(){nb();jb();ta=false;var A=ob();if(A!=null)pa.add(A);}void Vb(K A){nb();jb();ta=false;var B=ma.state;ma.V();ma.V();ma.V();pa.add(new k(A,ma.ZB(B)));}void Wb(K A){ib();kb();ta=true;pb(A);}void Xb(K A){jb();lb();ta=false;pb(A);}void Yb(){jb();ta=true;pb(K.zD);}void fb(){if(wa){if(!ta){throw new Y("Block sequence entries are not allowed here.",ma.hB);}mb(ma.column,K.xM,ma.location);}else{}jb();ta=true;pb(K.cE);}void gb(){if(wa){if(!ta){throw new Y("Mapping keys are not allowed here.",ma.hB);}mb(ma.column,K.dG,ma.location);}ta=wa;pb(K.yC);}void hb(){var A=ua.last;if(A!=null){pa.insert(A.eH-qa,new k(K.yC,A.location.YB()));mb(A.column,K.dG,A.location,tokenNumber:A.eH);ua[ua.length-1]=null;ta=false;}else if(wa){if(!ta){throw new Y("Mapping values are not allowed here. Did you miss a colon " "earlier?",ma.hB);}mb(ma.column,K.dG,ma.location);ta=true;}else if(ta){ta=false;pb(K.yC);}pb(K.hC);}void pb(K A){var B=ma.state;ma.V();pa.add(new k(A,ma.ZB(B)));}void Zb({bool anchor: true}){ib();ta=false;pa.add(qb(anchor:anchor));}void ab(){ib();ta=false;pa.add(rb());}void db({bool literal: false}){jb();ta=true;pa.add(sb(literal:literal));}void bb({bool singleQuote: false}){ib();ta=false;pa.add(tb(singleQuote:singleQuote));}void eb(){ib();ta=false;pa.add(ub());}void Rb(){var A=false;while(true){if(ma.column==0)ma.HB("\uFEFF");while(ma.X()==WC||((!wa||!A)&&ma.X()==eC)){ma.V();}if(ma.X()==eC){ma.error("Tab characters are not allowed as indentation.",length:1);}vb();if(ya){wb();if(wa)ta=true;A=true;}else{break;}}}k ob(){var A=ma.state;ma.V();var B;var C=xb();if(C=="YAML"){B=yb(A);}else if(C=="TAG"){B=zb(A);}else{BN("Warning: unknown directive.",ma.ZB(A));while(!xa){ma.V();}return null;}Ac();vb();if(!xa){throw new Y("Expected comment or line break after directive.",ma.ZB(A));}wb();return B;}String xb(){var B=ma.position;while(Gb){ma.V();}var A=ma.substring(B);if(A.isEmpty){throw new Y("Expected directive name.",ma.hB);}else if(!Ab){throw new Y("Unexpected character in directive name.",ma.hB);}return A;}k yb(ZD A){Ac();var B=Bc();ma.IH('.');var C=Bc();return new GJ(ma.ZB(A),B,C);}int Bc(){var B=ma.position;while(Hb){ma.V();}var A=ma.substring(B);if(A.isEmpty){throw new Y("Expected version number.",ma.hB);}return int.parse(A);}k zb(ZD A){Ac();var B=Cc(directive:true);if(!Cb){throw new Y("Expected whitespace.",ma.hB);}Ac();var C=Dc();if(!Ab){throw new Y("Expected whitespace.",ma.hB);}return new HJ(ma.ZB(A),B,C);}k qb({bool anchor: true}){var C=ma.state;ma.V();var D=ma.position;while(Fb){ma.V();}var B=ma.substring(D);var A=ma.X();if(B.isEmpty||(!Ab&&A!=uI&&A!=OG&&A!=KF&&A!=MF&&A!=QG&&A!=SG&&A!=xI&&A!=qM)){throw new Y("Expected alphanumeric character.",ma.hB);}if(anchor){return new XG(ma.ZB(C),B);}else{return new IJ(ma.ZB(C),B);}}k rb(){var A;var B;var C=ma.state;if(ma.X(1)==JT){ma.V();ma.V();A='';B=Dc();ma.IH('>');}else{A=Cc();if(A.length>1&&A.startsWith('!')&&A.endsWith('!')){B=Dc(flowSeparators:false);}else{B=Dc(head:A,flowSeparators:false);if(B.isEmpty){A=null;B='!';}else{A='!';}}}return new YG(ma.ZB(C),A,B);}String Cc({bool directive: false}){ma.IH('!');var A=new StringBuffer('!');var B=ma.position;while(Eb){ma.V();}A.write(ma.substring(B));if(ma.X()==pM){A.writeCharCode(ma.V());}else{if(directive&&A.toString()!='!')ma.IH('!');}return A.toString();}String Dc({String head,bool flowSeparators: true}){var B=head==null?0:head.length;var C=new StringBuffer();if(B>1)C.write(head.substring(1));var D=ma.position;var A=ma.X();while(Eb||(flowSeparators&&(A==KF||A==PG||A==MF))){ma.V();A=ma.X();}return Uri.decodeFull(ma.substring(D));}k sb({bool literal: false}){var R=ma.state;ma.V();var J=XC.kT;var D=0;var A=ma.X();if(A==JF||A==NG){J=A==JF?XC.DJ:XC.CJ;ma.V();if(Hb){if(ma.X()==xC){throw new Y("0 may not be used as an indentation indicator.",ma.ZB(R));}D=ma.V()-xC;}}else if(Hb){if(ma.X()==xC){throw new Y("0 may not be used as an indentation indicator.",ma.ZB(R));}D=ma.V()-xC;A=ma.X();if(A==JF||A==NG){J=A==JF?XC.DJ:XC.CJ;ma.V();}}Ac();vb();if(!xa){throw new Y("Expected comment or line break.",ma.hB);}wb();var C=0;if(D!=0){C=va>=0?va+D:D;}var G=Ec(C);C=G.first;var M=G.last;var B=new StringBuffer();var I='';var S=false;var Z=false;var o=ma.state;while(ma.column==C&&!ma.KD){if(Mb)break;Z=Cb;if(!literal&&I.isNotEmpty&&!S&&!Z){if(M.isEmpty)B.writeCharCode(WC);}else{B.write(I);}I='';B.write(M);S=Cb;var SB=ma.position;while(!xa){ma.V();}B.write(ma.substring(SB));o=ma.state;if(!ma.KD)I=Fc();var G=Ec(C);C=G.first;M=G.last;}if(J!=XC.CJ)B.write(I);if(J==XC.DJ)B.write(M);return new ZE(ma.ZB(R,o),B.toString(),literal?OB.mT:OB.nT);}OF<int,String> Ec(int A){var B=0;var C=new StringBuffer();while(true){while((A==0||ma.column<A)&&ma.X()==WC){ma.V();}if(ma.column>B)B=ma.column;if(!ya)break;C.write(Fc());}if(A==0){A=B;if(A<va+1)A=va+1;}return new OF(A,C.toString());}k tb({bool singleQuote: false}){var Z=ma.state;var A=new StringBuffer();ma.V();while(true){if(Mb){ma.error("Unexpected document indicator.");}if(ma.KD){throw new Y("Unexpected end of file.",ma.hB);}var D=false;while(!Ab){var G=ma.X();if(singleQuote&&G==xD&&ma.X(1)==xD){ma.V();ma.V();A.writeCharCode(xD);}else if(G==(singleQuote?xD:RG)){break;}else if(!singleQuote&&G==yI&&za(1)){ma.V();wb();D=true;break;}else if(!singleQuote&&G==yI){var J=ma.state;var B=null;switch (ma.X(1)){case xC:A.writeCharCode(MT);break;case VG:A.writeCharCode(NT);break;case WT:A.writeCharCode(OT);break;case aT:case eC:A.writeCharCode(eC);break;case YT:A.writeCharCode(fC);break;case cT:A.writeCharCode(PT);break;case sM:A.writeCharCode(QT);break;case ZT:A.writeCharCode(gC);break;case XT:A.writeCharCode(RT);break;case WC:case RG:case rM:case yI:A.writeCharCode(ma.X(1));break;case gT:A.writeCharCode(TG);break;case ST:A.writeCharCode(TT);break;case fT:A.writeCharCode(UT);break;case hT:A.writeCharCode(VT);break;case dT:B=2;break;case bT:B=4;break;case iT:B=8;break;default:throw new Y("Unknown escape character.",ma.ZB(J));}ma.V();ma.V();if(B!=null){var C=0;for(var R=0;R<B;R++ ){if(!Ib){ma.V();throw new Y("Expected ${B}-digit hexidecimal number.",ma.ZB(J));}C=(C<<4)+Gc(ma.V());}if((C>=0xD800&&C<=0xDFFF)||C>0x10FFFF){throw new Y("Invalid Unicode character escape code.",ma.ZB(J));}A.writeCharCode(C);}}else{A.writeCharCode(ma.V());}}if(ma.X()==(singleQuote?xD:RG)){break;}var I=new StringBuffer();var S='';var M=new StringBuffer();while(Cb||ya){if(Cb){if(!D){I.writeCharCode(ma.V());}else{ma.V();}}else{if(!D){I.clear();S=Fc();D=true;}else{M.write(Fc());}}}if(D){if(S.isNotEmpty&&M.isEmpty){A.writeCharCode(WC);}else{A.write(M);}}else{A.write(I);I.clear();}}ma.V();return new ZE(ma.ZB(Z),A.toString(),singleQuote?OB.uM:OB.vM);}k ub(){var J=ma.state;var G=ma.state;var B=new StringBuffer();var A='';var C='';var D=new StringBuffer();var I=va+1;while(true){if(Mb)break;if(ma.X()==wI)break;if(Jb){if(A.isNotEmpty){if(C.isEmpty){B.writeCharCode(WC);}else{B.write(C);}A='';C='';}else{B.write(D);D.clear();}}var M=ma.position;while(Jb){ma.V();}B.write(ma.substring(M));G=ma.state;if(!Cb&&!ya)break;while(Cb||ya){if(Cb){if(A.isNotEmpty&&ma.column<I&&ma.X()==eC){ma.error("Expected a space but found a tab.",length:1);}if(A.isEmpty){D.writeCharCode(ma.V());}else{ma.V();}}else{if(A.isEmpty){A=Fc();D.clear();}else{C=Fc();}}}if(wa&&ma.column<I)break;}if(A.isNotEmpty)ta=true;return new ZE(ma.ZB(J,G),B.toString(),OB.WG);}void wb(){var A=ma.X();if(A!=gC&&A!=fC)return;ma.V();if(A==gC&&ma.X()==fC)ma.V();}String Fc(){var A=ma.X();if(A!=gC&&A!=fC){throw new Y("Expected newline.",ma.hB);}ma.V();if(A==gC&&ma.X()==fC)ma.V();return "\n";}bool Db(int B){var A=ma.X(B);return A==WC||A==eC;}bool za(int B){var A=ma.X(B);return A==gC||A==fC;}bool Bb(int B){var A=ma.X(B);return A==null||A==WC||A==eC||A==gC||A==fC;}bool Kb(int A){switch (ma.X(A)){case OG:return Hc(A+1);case wI:var B=ma.X(A-1);return B!=WC&&B!=eC;default:return Hc(A);}}bool Hc(int B){var A=ma.X(B);switch (A){case KF:case PG:case MF:case vI:case QG:return wa;case WC:case eC:case fC:case gC:case zI:return false;case TG:return true;default:return A!=null&&((A>=0x00020&&A<=0x00007E)||(A>=0x000A0&&A<=0x00D7FF)||(A>=0x0E000&&A<=0x00FFFD)||(A>=0x10000&&A<=0x10FFFF));}}int Gc(int A){if(A<=UG)return A-xC;if(A<=tM)return 10+A-AJ;return 10+A-VG;}void Ac(){while(Cb){ma.V();}}void vb(){if(ma.X()!=wI)return;while(!xa){ma.V();}}}class BJ{final int eH;final rB location;final int line;final int column;final bool TK;BJ(this.eH,this.line,this.column,this.location,{bool required}):TK=required;}class XC{static const CJ=const XC("STRIP");static const kT=const XC("CLIP");static const DJ=const XC("KEEP");final String name;const XC(this.name);String toString()=>name;}class OB{static const lT=const OB.KX("ANY");static const WG=const OB.KX("PLAIN");static const mT=const OB.KX("LITERAL");static const nT=const OB.KX("FOLDED");static const uM=const OB.KX("SINGLE_QUOTED");static const vM=const OB.KX("DOUBLE_QUOTED");final String name;bool get LW=>this==uM||this==vM;const OB.KX(this.name);String toString()=>name;}class sB{static const EJ=const sB.LX("BLOCK");static const FJ=const sB.LX("FLOW");final String name;const sB.LX(this.name);String toString()=>name;}class k{final K type;final p L;k(this.type,this.L);String toString()=>type.toString();}class GJ implements k{get type=>K.ZG;final p L;final int HE;final int kD;GJ(this.L,this.HE,this.kD);String toString()=>"VERSION_DIRECTIVE ${HE}.${kD}";}class HJ implements k{get type=>K.aG;final p L;final String vB;final String prefix;HJ(this.L,this.vB,this.prefix);String toString()=>"TAG_DIRECTIVE ${vB} ${prefix}";}class XG implements k{get type=>K.pT;final p L;final String name;XG(this.L,this.name);String toString()=>"ANCHOR ${name}";}class IJ implements k{get type=>K.oT;final p L;final String name;IJ(this.L,this.name);String toString()=>"ALIAS ${name}";}class YG implements k{get type=>K.qT;final p L;final String vB;final String ZH;YG(this.L,this.vB,this.ZH);String toString()=>"TAG ${vB} ${ZH}";}class ZE implements k{get type=>K.AN;final p L;final String value;final OB Q;ZE(this.L,this.value,this.Q);String toString()=>"SCALAR ${Q} \"${value}\"";}class K{static const wM=const K.MX("STREAM_START");static const NF=const K.MX("STREAM_END");static const ZG=const K.MX("VERSION_DIRECTIVE");static const aG=const K.MX("TAG_DIRECTIVE");static const bG=const K.MX("DOCUMENT_START");static const cG=const K.MX("DOCUMENT_END");static const xM=const K.MX("BLOCK_SEQUENCE_START");static const dG=const K.MX("BLOCK_MAPPING_START");static const yD=const K.MX("BLOCK_END");static const yM=const K.MX("FLOW_SEQUENCE_START");static const aE=const K.MX("FLOW_SEQUENCE_END");static const zM=const K.MX("FLOW_MAPPING_START");static const bE=const K.MX("FLOW_MAPPING_END");static const cE=const K.MX("BLOCK_ENTRY");static const zD=const K.MX("FLOW_ENTRY");static const yC=const K.MX("KEY");static const hC=const K.MX("VALUE");static const oT=const K.MX("ALIAS");static const pT=const K.MX("ANCHOR");static const qT=const K.MX("TAG");static const AN=const K.MX("SCALAR");final String name;const K.MX(this.name);String toString()=>name;}class OF<U,BU>{final U first;final BU last;OF(this.first,this.last);String toString()=>'(${first}, ${last})';}void BN(String A,[EB B])=>sT(A,B);typedef dynamic rT(String _0,[EB _1]);rT sT=(A,[B]){if(B!=null)A=B.message(A);print(A);};String FN(B){var A=new StringBuffer();wT(B,A);return A.toString();}void wT(A,StringSink B){JJ(A,0,B,true);}void JJ(A,int C,StringSink B,bool D){if(A is Map){yT(A,C,B,D);}else if(A is Iterable){AU(A,C,B,D);}else if(A is String){B..writeln('"${xT(A)}"');}else if(A is double){B.writeln("!!float ${A}");}else{B.writeln(A);}}String xT(String A)=>A.replaceAll('"',r'\"').replaceAll("\n",r"\n");void yT(Map C,int B,StringSink A,bool G){if(!G){A.writeln();B+= 2;}final I=zT(C);I.forEach((D){final J=C[D];GN(B,A);A..write(D)..write(': ');JJ(J,B,A,false);});}Iterable<String> zT(Map I){final B=[] ;final C=[] ;final D=[] ;I.forEach((A,G){if(G is String){B.add(A);}else if(G is Map){C.add(A);}else{D.add(A);}});return jS([B..sort(),C..sort(),D..sort()]) as Iterable<String>;}void AU(Iterable C,int B,StringSink A,bool D){if(!D){A.writeln();B+= 2;}C.forEach((G){GN(B,A);A.write('- ');JJ(G,B,A,false);});}void GN(int A,StringSink B)=>B.write(' '*A);class dE{final FB tJ;final EB L;final PF versionDirective;final List<MC> bH;final bool startImplicit;final bool endImplicit;dE.NX(this.tJ,this.L,this.versionDirective,List<MC> A,{this.startImplicit: false,this.endImplicit: false}):bH=new UnmodifiableListView(A);String toString()=>tJ.toString();}class PF{final int HE;final int kD;PF(this.HE,this.kD);String toString()=>"%YAML ${HE}.${kD}";}class MC{final String vB;final String prefix;MC(this.vB,this.prefix);String toString()=>"%TAG ${vB} ${prefix}";}abstract class FB{EB get L=>Ic;EB Ic;get value;}class CN extends FB with MapMixin,PR{final Map<dynamic,FB> IE;final sB Q;Map get value=>this;Iterable get keys=>IE.keys.map((A)=>A.value);CN.OX(Map<dynamic,FB> A,EB B,this.Q):IE=new UnmodifiableMapView<dynamic,FB>(A){Ic=B;}operator[](B){var A=IE[B];return A==null?null:A.value;}}class DN extends FB with ListMixin{final List<FB> IE;final sB Q;List get value=>this;int get length=>IE.length;set length(int A){throw new UnsupportedError("Cannot modify an unmodifiable List");}DN.PX(List<FB> A,EB B,this.Q):IE=new UnmodifiableListView<FB>(A){Ic=B;}operator[](int A)=>IE[A].value;operator[]=(int A,B){throw new UnsupportedError("Cannot modify an unmodifiable List");}}class MB extends FB{final value;final OB Q;MB.QX(this.value,LC A):Q=A.Q{Ic=A.L;}MB.RX(this.value,EB A):Q=OB.lT{Ic=A;}String toString()=>value.toString();}void EN(FB A,EB B){A.Ic=B;}