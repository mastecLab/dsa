import "dart:typed_data";import "dart:async";import "dart:io";import "dart:convert";import "dart:math";import "dart:math" as uD;import "dart:collection";class v{final Map<String,UB> qV;final Map<String,v> rV;final Map<String,UB> CD;final Map<String,v> RD;final sV=[] ;final bool SN;factory v({bool allowTrailingOptions: false})=>new v.LV(<String,UB>{},<String,v>{},allowTrailingOptions:allowTrailingOptions);v.LV(Map<String,UB> A,Map<String,v> B,{bool allowTrailingOptions: false}):this.qV=A,this.CD=new UnmodifiableMapView(A),this.rV=B,this.RD=new UnmodifiableMapView(B),this.SN=allowTrailingOptions!=null?allowTrailingOptions:false;v KE(String B,[v A]){if(rV.containsKey(B)){throw new ArgumentError('Duplicate command "${B}".');}if(A==null)A=new v();rV[B]=A;return A;}void ON(String A,{String abbr,String help,bool defaultsTo: false,bool negatable: true,void callback(bool value),bool hide: false}){tV(A,abbr,help,null,null,null,defaultsTo,callback,jB.AK,negatable:negatable,hide:hide);}void lD(String A,{String abbr,String help,String valueHelp,List<String> allowed,Map<String,String> allowedHelp,String defaultsTo,void callback(value),bool allowMultiple: false,bool splitCommas,bool hide: false}){if(!allowMultiple&&splitCommas!=null){throw new ArgumentError('splitCommas may not be set if allowMultiple is false.');}tV(A,abbr,help,valueHelp,allowed,allowedHelp,defaultsTo,callback,allowMultiple?jB.KH:jB.fP,splitCommas:splitCommas,hide:hide);}void tV(String A,String B,String G,String I,List<String> J,Map<String,String> M,S,void W(value),jB e,{bool negatable: false,bool splitCommas,bool hide: false}){if(qV.containsKey(A)){throw new ArgumentError('Duplicate option "${A}".');}if(B!=null){var C=mG(B);if(C!=null){throw new ArgumentError('Abbreviation "${B}" is already used by "${C.name}".');}}var D=eP(A,B,G,I,J,M,S,W,e,negatable:negatable,splitCommas:splitCommas,hide:hide);qV[A]=D;sV.add(D);}GD QB(List<String> A)=>new SE(null,this,A.toList()).QB();String get FH=>new BK(sV).aU();UB mG(String A){return CD.values.firstWhere((B)=>B.OD==A,orElse:()=>null);}}class OF extends FormatException{final List<String> RD;OF(String B,[Iterable<String> A]):RD=A==null?const[] :new List.unmodifiable(A),super(B);}GD dP(v A,Map<String,dynamic> B,String C,GD D,List<String> G,List<String> I){return new GD.MV(A,B,C,D,G,I);}class GD{final v uV;final Map<String,dynamic> vV;final String name;final GD MB;final List<String> eC;final List<String> arguments;GD.MV(this.uV,this.vV,this.name,this.MB,List<String> A,List<String> B):this.eC=new UnmodifiableListView(A),this.arguments=new UnmodifiableListView(B);operator[](String A){if(!uV.CD.containsKey(A)){throw new ArgumentError('Could not find an option named "${A}".');}return uV.CD[A].IO(vV[A]);}Iterable<String> get CD{var A=new Set<String>.from(vV.keys);uV.CD.forEach((B,C){if(C.wC!=null)A.add(B);});return A;}}const lB=0x2e;const CC=0x2f;const fH=0x3a;const tK=0x41;const uK=0x5a;const vK=0x61;const wK=0x7a;const yD=0x5c;const int DK=0x09;const int LH=0x0A;const int EK=0x0D;const int jP=0x20;const int MH=0x2B;const int NH=0x2D;const int PF=0x2E;const int HD=0x30;const int QF=0x39;const int kP=0x46;const int lP=0x4E;const int mP=0x54;const int OH=0x61;const int FK=0x66;const int nP=0x6E;const int oP=0x6F;const int pP=0x74;const int qP=0x78;const int rP=0x7E;abstract class fK{}abstract class SQ{}class XF extends YQ{static const gK=16;bool wV;List<List<int>> xV;int yV;int zV;int AW;int BW;int CW;int get blockSize=>gK;void reset(){yV=0;zV=AW=BW=CW=0;wV=false;xV=null;}void init(bool M,fK S){var I=(S as aE).key;int B=(I.lengthInBytes/4).floor();if(((B!=4)&&(B!=6)&&(B!=8))||((B*4)!=I.lengthInBytes)){throw new ArgumentError("Key length must be 128/192/256 bits");}this.wV=M;yV=B+6;xV=new List.generate(yV+1,(int A)=>new List<int>(4));var W=new ByteData.view((S as aE).key.buffer);for(var A=0,J=0;A<I.lengthInBytes;A+= 4,J++ ){var C=cE(W,A,Endianness.LITTLE_ENDIAN);xV[J>>2][J&3]=C;}int e=(yV+1)<<2;for(int A=B;A<e;A++ ){int D=xV[(A-1)>>2][(A-1)&3].toInt();if((A%B)==0){D=hK(YF(D,8))^XQ[((A/B)-1).floor()];}else if((B>6)&&((A%B)==4)){D=hK(D);}var C=xV[(A-B)>>2][(A-B)&3]^D;xV[A>>2][A&3]=C;}if(!M){for(var G=1;G<yV;G++ ){for(var A=0;A<4;A++ ){var C=WQ(xV[G][A].toInt());xV[G][A]=C;}}}}int zU(Uint8List C,int A,Uint8List D,int B){if(xV==null){throw new StateError("AES engine not initialised");}if((A+(32/2))>C.lengthInBytes){throw new ArgumentError("Input buffer too short");}if((B+(32/2))>D.lengthInBytes){throw new ArgumentError("Output buffer too short");}var G=new ByteData.view(C.buffer);var I=new ByteData.view(D.buffer);if(wV){DW(G,A);EW(xV);FW(I,B);}else{DW(G,A);GW(xV);FW(I,B);}return gK;}void EW(List<List<int>> B){int A,C,D,G,I;zV^= B[0][0].toInt();AW^= B[0][1].toInt();BW^= B[0][2].toInt();CW^= B[0][3].toInt();A=1;while(A<yV-1){C=uB[zV&255]^vB[(AW>>8)&255]^wB[(BW>>16)&255]^xB[(CW>>24)&255]^B[A][0].toInt();D=uB[AW&255]^vB[(BW>>8)&255]^wB[(CW>>16)&255]^xB[(zV>>24)&255]^B[A][1].toInt();G=uB[BW&255]^vB[(CW>>8)&255]^wB[(zV>>16)&255]^xB[(AW>>24)&255]^B[A][2].toInt();I=uB[CW&255]^vB[(zV>>8)&255]^wB[(AW>>16)&255]^xB[(BW>>24)&255]^B[A][3].toInt();A++ ;zV=uB[C&255]^vB[(D>>8)&255]^wB[(G>>16)&255]^xB[(I>>24)&255]^B[A][0].toInt();AW=uB[D&255]^vB[(G>>8)&255]^wB[(I>>16)&255]^xB[(C>>24)&255]^B[A][1].toInt();BW=uB[G&255]^vB[(I>>8)&255]^wB[(C>>16)&255]^xB[(D>>24)&255]^B[A][2].toInt();CW=uB[I&255]^vB[(C>>8)&255]^wB[(D>>16)&255]^xB[(G>>24)&255]^B[A][3].toInt();A++ ;}C=uB[zV&255]^vB[(AW>>8)&255]^wB[(BW>>16)&255]^xB[(CW>>24)&255]^B[A][0].toInt();D=uB[AW&255]^vB[(BW>>8)&255]^wB[(CW>>16)&255]^xB[(zV>>24)&255]^B[A][1].toInt();G=uB[BW&255]^vB[(CW>>8)&255]^wB[(zV>>16)&255]^xB[(AW>>24)&255]^B[A][2].toInt();I=uB[CW&255]^vB[(zV>>8)&255]^wB[(AW>>16)&255]^xB[(BW>>24)&255]^B[A][3].toInt();A++ ;zV=(HB[C&255]&255)^((HB[(D>>8)&255]&255)<<8)^((HB[(G>>16)&255]&255)<<16)^(HB[(I>>24)&255]<<24)^B[A][0].toInt();AW=(HB[D&255]&255)^((HB[(G>>8)&255]&255)<<8)^((HB[(I>>16)&255]&255)<<16)^(HB[(C>>24)&255]<<24)^B[A][1].toInt();BW=(HB[G&255]&255)^((HB[(I>>8)&255]&255)<<8)^((HB[(C>>16)&255]&255)<<16)^(HB[(D>>24)&255]<<24)^B[A][2].toInt();CW=(HB[I&255]&255)^((HB[(C>>8)&255]&255)<<8)^((HB[(D>>16)&255]&255)<<16)^(HB[(G>>24)&255]<<24)^B[A][3].toInt();}void GW(List<List<int>> A){int B,C,D,G,I;zV^= A[yV][0].toInt();AW^= A[yV][1].toInt();BW^= A[yV][2].toInt();CW^= A[yV][3].toInt();B=yV-1;while(B>1){C=yB[zV&255]^zB[(CW>>8)&255]^AC[(BW>>16)&255]^BC[(AW>>24)&255]^A[B][0].toInt();D=yB[AW&255]^zB[(zV>>8)&255]^AC[(CW>>16)&255]^BC[(BW>>24)&255]^A[B][1].toInt();G=yB[BW&255]^zB[(AW>>8)&255]^AC[(zV>>16)&255]^BC[(CW>>24)&255]^A[B][2].toInt();I=yB[CW&255]^zB[(BW>>8)&255]^AC[(AW>>16)&255]^BC[(zV>>24)&255]^A[B][3].toInt();B-- ;zV=yB[C&255]^zB[(I>>8)&255]^AC[(G>>16)&255]^BC[(D>>24)&255]^A[B][0].toInt();AW=yB[D&255]^zB[(C>>8)&255]^AC[(I>>16)&255]^BC[(G>>24)&255]^A[B][1].toInt();BW=yB[G&255]^zB[(D>>8)&255]^AC[(C>>16)&255]^BC[(I>>24)&255]^A[B][2].toInt();CW=yB[I&255]^zB[(G>>8)&255]^AC[(D>>16)&255]^BC[(C>>24)&255]^A[B][3].toInt();B-- ;}C=yB[zV&255]^zB[(CW>>8)&255]^AC[(BW>>16)&255]^BC[(AW>>24)&255]^A[B][0].toInt();D=yB[AW&255]^zB[(zV>>8)&255]^AC[(CW>>16)&255]^BC[(BW>>24)&255]^A[B][1].toInt();G=yB[BW&255]^zB[(AW>>8)&255]^AC[(zV>>16)&255]^BC[(CW>>24)&255]^A[B][2].toInt();I=yB[CW&255]^zB[(BW>>8)&255]^AC[(AW>>16)&255]^BC[(zV>>24)&255]^A[B][3].toInt();zV=(aB[C&255]&255)^((aB[(I>>8)&255]&255)<<8)^((aB[(G>>16)&255]&255)<<16)^(aB[(D>>24)&255]<<24)^A[0][0].toInt();AW=(aB[D&255]&255)^((aB[(C>>8)&255]&255)<<8)^((aB[(I>>16)&255]&255)<<16)^(aB[(G>>24)&255]<<24)^A[0][1].toInt();BW=(aB[G&255]&255)^((aB[(D>>8)&255]&255)<<8)^((aB[(C>>16)&255]&255)<<16)^(aB[(I>>24)&255]<<24)^A[0][2].toInt();CW=(aB[I&255]&255)^((aB[(G>>8)&255]&255)<<8)^((aB[(D>>16)&255]&255)<<16)^(aB[(C>>24)&255]<<24)^A[0][3].toInt();}void DW(ByteData A,int B){zV=cE(A,B,Endianness.LITTLE_ENDIAN);AW=cE(A,B+4,Endianness.LITTLE_ENDIAN);BW=cE(A,B+8,Endianness.LITTLE_ENDIAN);CW=cE(A,B+12,Endianness.LITTLE_ENDIAN);}void FW(ByteData A,int B){ZF(zV,A,B,Endianness.LITTLE_ENDIAN);ZF(AW,A,B+4,Endianness.LITTLE_ENDIAN);ZF(BW,A,B+8,Endianness.LITTLE_ENDIAN);ZF(CW,A,B+12,Endianness.LITTLE_ENDIAN);}}int YF(int A,int B)=>cQ(A,B);const int TQ=0x80808080;const int UQ=0x7f7f7f7f;const int VQ=0x0000001b;int aH(int A){var B=bQ((A&TQ),7);return (((A&UQ)<<1)^B*VQ);}int WQ(int D){int A=aH(D);int B=aH(A);int G=aH(B);int C=D^G;return A^B^G^YF(A^C,8)^YF(B^C,16)^YF(C,24);}int hK(int A){return (HB[A&255]&255|((HB[(A>>8)&255]&255)<<8)|((HB[(A>>16)&255]&255)<<16)|HB[(A>>24)&255]<<24);}final HB=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22];final aB=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125];final XQ=[0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36,0x6c,0xd8,0xab,0x4d,0x9a,0x2f,0x5e,0xbc,0x63,0xc6,0x97,0x35,0x6a,0xd4,0xb3,0x7d,0xfa,0xef,0xc5,0x91];final uB=[0xa56363c6,0x847c7cf8,0x997777ee,0x8d7b7bf6,0x0df2f2ff,0xbd6b6bd6,0xb16f6fde,0x54c5c591,0x50303060,0x03010102,0xa96767ce,0x7d2b2b56,0x19fefee7,0x62d7d7b5,0xe6abab4d,0x9a7676ec,0x45caca8f,0x9d82821f,0x40c9c989,0x877d7dfa,0x15fafaef,0xeb5959b2,0xc947478e,0x0bf0f0fb,0xecadad41,0x67d4d4b3,0xfda2a25f,0xeaafaf45,0xbf9c9c23,0xf7a4a453,0x967272e4,0x5bc0c09b,0xc2b7b775,0x1cfdfde1,0xae93933d,0x6a26264c,0x5a36366c,0x413f3f7e,0x02f7f7f5,0x4fcccc83,0x5c343468,0xf4a5a551,0x34e5e5d1,0x08f1f1f9,0x937171e2,0x73d8d8ab,0x53313162,0x3f15152a,0x0c040408,0x52c7c795,0x65232346,0x5ec3c39d,0x28181830,0xa1969637,0x0f05050a,0xb59a9a2f,0x0907070e,0x36121224,0x9b80801b,0x3de2e2df,0x26ebebcd,0x6927274e,0xcdb2b27f,0x9f7575ea,0x1b090912,0x9e83831d,0x742c2c58,0x2e1a1a34,0x2d1b1b36,0xb26e6edc,0xee5a5ab4,0xfba0a05b,0xf65252a4,0x4d3b3b76,0x61d6d6b7,0xceb3b37d,0x7b292952,0x3ee3e3dd,0x712f2f5e,0x97848413,0xf55353a6,0x68d1d1b9,0x00000000,0x2cededc1,0x60202040,0x1ffcfce3,0xc8b1b179,0xed5b5bb6,0xbe6a6ad4,0x46cbcb8d,0xd9bebe67,0x4b393972,0xde4a4a94,0xd44c4c98,0xe85858b0,0x4acfcf85,0x6bd0d0bb,0x2aefefc5,0xe5aaaa4f,0x16fbfbed,0xc5434386,0xd74d4d9a,0x55333366,0x94858511,0xcf45458a,0x10f9f9e9,0x06020204,0x817f7ffe,0xf05050a0,0x443c3c78,0xba9f9f25,0xe3a8a84b,0xf35151a2,0xfea3a35d,0xc0404080,0x8a8f8f05,0xad92923f,0xbc9d9d21,0x48383870,0x04f5f5f1,0xdfbcbc63,0xc1b6b677,0x75dadaaf,0x63212142,0x30101020,0x1affffe5,0x0ef3f3fd,0x6dd2d2bf,0x4ccdcd81,0x140c0c18,0x35131326,0x2fececc3,0xe15f5fbe,0xa2979735,0xcc444488,0x3917172e,0x57c4c493,0xf2a7a755,0x827e7efc,0x473d3d7a,0xac6464c8,0xe75d5dba,0x2b191932,0x957373e6,0xa06060c0,0x98818119,0xd14f4f9e,0x7fdcdca3,0x66222244,0x7e2a2a54,0xab90903b,0x8388880b,0xca46468c,0x29eeeec7,0xd3b8b86b,0x3c141428,0x79dedea7,0xe25e5ebc,0x1d0b0b16,0x76dbdbad,0x3be0e0db,0x56323264,0x4e3a3a74,0x1e0a0a14,0xdb494992,0x0a06060c,0x6c242448,0xe45c5cb8,0x5dc2c29f,0x6ed3d3bd,0xefacac43,0xa66262c4,0xa8919139,0xa4959531,0x37e4e4d3,0x8b7979f2,0x32e7e7d5,0x43c8c88b,0x5937376e,0xb76d6dda,0x8c8d8d01,0x64d5d5b1,0xd24e4e9c,0xe0a9a949,0xb46c6cd8,0xfa5656ac,0x07f4f4f3,0x25eaeacf,0xaf6565ca,0x8e7a7af4,0xe9aeae47,0x18080810,0xd5baba6f,0x887878f0,0x6f25254a,0x722e2e5c,0x241c1c38,0xf1a6a657,0xc7b4b473,0x51c6c697,0x23e8e8cb,0x7cdddda1,0x9c7474e8,0x211f1f3e,0xdd4b4b96,0xdcbdbd61,0x868b8b0d,0x858a8a0f,0x907070e0,0x423e3e7c,0xc4b5b571,0xaa6666cc,0xd8484890,0x05030306,0x01f6f6f7,0x120e0e1c,0xa36161c2,0x5f35356a,0xf95757ae,0xd0b9b969,0x91868617,0x58c1c199,0x271d1d3a,0xb99e9e27,0x38e1e1d9,0x13f8f8eb,0xb398982b,0x33111122,0xbb6969d2,0x70d9d9a9,0x898e8e07,0xa7949433,0xb69b9b2d,0x221e1e3c,0x92878715,0x20e9e9c9,0x49cece87,0xff5555aa,0x78282850,0x7adfdfa5,0x8f8c8c03,0xf8a1a159,0x80898909,0x170d0d1a,0xdabfbf65,0x31e6e6d7,0xc6424284,0xb86868d0,0xc3414182,0xb0999929,0x772d2d5a,0x110f0f1e,0xcbb0b07b,0xfc5454a8,0xd6bbbb6d,0x3a16162c];final vB=[0x6363c6a5,0x7c7cf884,0x7777ee99,0x7b7bf68d,0xf2f2ff0d,0x6b6bd6bd,0x6f6fdeb1,0xc5c59154,0x30306050,0x01010203,0x6767cea9,0x2b2b567d,0xfefee719,0xd7d7b562,0xabab4de6,0x7676ec9a,0xcaca8f45,0x82821f9d,0xc9c98940,0x7d7dfa87,0xfafaef15,0x5959b2eb,0x47478ec9,0xf0f0fb0b,0xadad41ec,0xd4d4b367,0xa2a25ffd,0xafaf45ea,0x9c9c23bf,0xa4a453f7,0x7272e496,0xc0c09b5b,0xb7b775c2,0xfdfde11c,0x93933dae,0x26264c6a,0x36366c5a,0x3f3f7e41,0xf7f7f502,0xcccc834f,0x3434685c,0xa5a551f4,0xe5e5d134,0xf1f1f908,0x7171e293,0xd8d8ab73,0x31316253,0x15152a3f,0x0404080c,0xc7c79552,0x23234665,0xc3c39d5e,0x18183028,0x969637a1,0x05050a0f,0x9a9a2fb5,0x07070e09,0x12122436,0x80801b9b,0xe2e2df3d,0xebebcd26,0x27274e69,0xb2b27fcd,0x7575ea9f,0x0909121b,0x83831d9e,0x2c2c5874,0x1a1a342e,0x1b1b362d,0x6e6edcb2,0x5a5ab4ee,0xa0a05bfb,0x5252a4f6,0x3b3b764d,0xd6d6b761,0xb3b37dce,0x2929527b,0xe3e3dd3e,0x2f2f5e71,0x84841397,0x5353a6f5,0xd1d1b968,0x00000000,0xededc12c,0x20204060,0xfcfce31f,0xb1b179c8,0x5b5bb6ed,0x6a6ad4be,0xcbcb8d46,0xbebe67d9,0x3939724b,0x4a4a94de,0x4c4c98d4,0x5858b0e8,0xcfcf854a,0xd0d0bb6b,0xefefc52a,0xaaaa4fe5,0xfbfbed16,0x434386c5,0x4d4d9ad7,0x33336655,0x85851194,0x45458acf,0xf9f9e910,0x02020406,0x7f7ffe81,0x5050a0f0,0x3c3c7844,0x9f9f25ba,0xa8a84be3,0x5151a2f3,0xa3a35dfe,0x404080c0,0x8f8f058a,0x92923fad,0x9d9d21bc,0x38387048,0xf5f5f104,0xbcbc63df,0xb6b677c1,0xdadaaf75,0x21214263,0x10102030,0xffffe51a,0xf3f3fd0e,0xd2d2bf6d,0xcdcd814c,0x0c0c1814,0x13132635,0xececc32f,0x5f5fbee1,0x979735a2,0x444488cc,0x17172e39,0xc4c49357,0xa7a755f2,0x7e7efc82,0x3d3d7a47,0x6464c8ac,0x5d5dbae7,0x1919322b,0x7373e695,0x6060c0a0,0x81811998,0x4f4f9ed1,0xdcdca37f,0x22224466,0x2a2a547e,0x90903bab,0x88880b83,0x46468cca,0xeeeec729,0xb8b86bd3,0x1414283c,0xdedea779,0x5e5ebce2,0x0b0b161d,0xdbdbad76,0xe0e0db3b,0x32326456,0x3a3a744e,0x0a0a141e,0x494992db,0x06060c0a,0x2424486c,0x5c5cb8e4,0xc2c29f5d,0xd3d3bd6e,0xacac43ef,0x6262c4a6,0x919139a8,0x959531a4,0xe4e4d337,0x7979f28b,0xe7e7d532,0xc8c88b43,0x37376e59,0x6d6ddab7,0x8d8d018c,0xd5d5b164,0x4e4e9cd2,0xa9a949e0,0x6c6cd8b4,0x5656acfa,0xf4f4f307,0xeaeacf25,0x6565caaf,0x7a7af48e,0xaeae47e9,0x08081018,0xbaba6fd5,0x7878f088,0x25254a6f,0x2e2e5c72,0x1c1c3824,0xa6a657f1,0xb4b473c7,0xc6c69751,0xe8e8cb23,0xdddda17c,0x7474e89c,0x1f1f3e21,0x4b4b96dd,0xbdbd61dc,0x8b8b0d86,0x8a8a0f85,0x7070e090,0x3e3e7c42,0xb5b571c4,0x6666ccaa,0x484890d8,0x03030605,0xf6f6f701,0x0e0e1c12,0x6161c2a3,0x35356a5f,0x5757aef9,0xb9b969d0,0x86861791,0xc1c19958,0x1d1d3a27,0x9e9e27b9,0xe1e1d938,0xf8f8eb13,0x98982bb3,0x11112233,0x6969d2bb,0xd9d9a970,0x8e8e0789,0x949433a7,0x9b9b2db6,0x1e1e3c22,0x87871592,0xe9e9c920,0xcece8749,0x5555aaff,0x28285078,0xdfdfa57a,0x8c8c038f,0xa1a159f8,0x89890980,0x0d0d1a17,0xbfbf65da,0xe6e6d731,0x424284c6,0x6868d0b8,0x414182c3,0x999929b0,0x2d2d5a77,0x0f0f1e11,0xb0b07bcb,0x5454a8fc,0xbbbb6dd6,0x16162c3a];final wB=[0x63c6a563,0x7cf8847c,0x77ee9977,0x7bf68d7b,0xf2ff0df2,0x6bd6bd6b,0x6fdeb16f,0xc59154c5,0x30605030,0x01020301,0x67cea967,0x2b567d2b,0xfee719fe,0xd7b562d7,0xab4de6ab,0x76ec9a76,0xca8f45ca,0x821f9d82,0xc98940c9,0x7dfa877d,0xfaef15fa,0x59b2eb59,0x478ec947,0xf0fb0bf0,0xad41ecad,0xd4b367d4,0xa25ffda2,0xaf45eaaf,0x9c23bf9c,0xa453f7a4,0x72e49672,0xc09b5bc0,0xb775c2b7,0xfde11cfd,0x933dae93,0x264c6a26,0x366c5a36,0x3f7e413f,0xf7f502f7,0xcc834fcc,0x34685c34,0xa551f4a5,0xe5d134e5,0xf1f908f1,0x71e29371,0xd8ab73d8,0x31625331,0x152a3f15,0x04080c04,0xc79552c7,0x23466523,0xc39d5ec3,0x18302818,0x9637a196,0x050a0f05,0x9a2fb59a,0x070e0907,0x12243612,0x801b9b80,0xe2df3de2,0xebcd26eb,0x274e6927,0xb27fcdb2,0x75ea9f75,0x09121b09,0x831d9e83,0x2c58742c,0x1a342e1a,0x1b362d1b,0x6edcb26e,0x5ab4ee5a,0xa05bfba0,0x52a4f652,0x3b764d3b,0xd6b761d6,0xb37dceb3,0x29527b29,0xe3dd3ee3,0x2f5e712f,0x84139784,0x53a6f553,0xd1b968d1,0x00000000,0xedc12ced,0x20406020,0xfce31ffc,0xb179c8b1,0x5bb6ed5b,0x6ad4be6a,0xcb8d46cb,0xbe67d9be,0x39724b39,0x4a94de4a,0x4c98d44c,0x58b0e858,0xcf854acf,0xd0bb6bd0,0xefc52aef,0xaa4fe5aa,0xfbed16fb,0x4386c543,0x4d9ad74d,0x33665533,0x85119485,0x458acf45,0xf9e910f9,0x02040602,0x7ffe817f,0x50a0f050,0x3c78443c,0x9f25ba9f,0xa84be3a8,0x51a2f351,0xa35dfea3,0x4080c040,0x8f058a8f,0x923fad92,0x9d21bc9d,0x38704838,0xf5f104f5,0xbc63dfbc,0xb677c1b6,0xdaaf75da,0x21426321,0x10203010,0xffe51aff,0xf3fd0ef3,0xd2bf6dd2,0xcd814ccd,0x0c18140c,0x13263513,0xecc32fec,0x5fbee15f,0x9735a297,0x4488cc44,0x172e3917,0xc49357c4,0xa755f2a7,0x7efc827e,0x3d7a473d,0x64c8ac64,0x5dbae75d,0x19322b19,0x73e69573,0x60c0a060,0x81199881,0x4f9ed14f,0xdca37fdc,0x22446622,0x2a547e2a,0x903bab90,0x880b8388,0x468cca46,0xeec729ee,0xb86bd3b8,0x14283c14,0xdea779de,0x5ebce25e,0x0b161d0b,0xdbad76db,0xe0db3be0,0x32645632,0x3a744e3a,0x0a141e0a,0x4992db49,0x060c0a06,0x24486c24,0x5cb8e45c,0xc29f5dc2,0xd3bd6ed3,0xac43efac,0x62c4a662,0x9139a891,0x9531a495,0xe4d337e4,0x79f28b79,0xe7d532e7,0xc88b43c8,0x376e5937,0x6ddab76d,0x8d018c8d,0xd5b164d5,0x4e9cd24e,0xa949e0a9,0x6cd8b46c,0x56acfa56,0xf4f307f4,0xeacf25ea,0x65caaf65,0x7af48e7a,0xae47e9ae,0x08101808,0xba6fd5ba,0x78f08878,0x254a6f25,0x2e5c722e,0x1c38241c,0xa657f1a6,0xb473c7b4,0xc69751c6,0xe8cb23e8,0xdda17cdd,0x74e89c74,0x1f3e211f,0x4b96dd4b,0xbd61dcbd,0x8b0d868b,0x8a0f858a,0x70e09070,0x3e7c423e,0xb571c4b5,0x66ccaa66,0x4890d848,0x03060503,0xf6f701f6,0x0e1c120e,0x61c2a361,0x356a5f35,0x57aef957,0xb969d0b9,0x86179186,0xc19958c1,0x1d3a271d,0x9e27b99e,0xe1d938e1,0xf8eb13f8,0x982bb398,0x11223311,0x69d2bb69,0xd9a970d9,0x8e07898e,0x9433a794,0x9b2db69b,0x1e3c221e,0x87159287,0xe9c920e9,0xce8749ce,0x55aaff55,0x28507828,0xdfa57adf,0x8c038f8c,0xa159f8a1,0x89098089,0x0d1a170d,0xbf65dabf,0xe6d731e6,0x4284c642,0x68d0b868,0x4182c341,0x9929b099,0x2d5a772d,0x0f1e110f,0xb07bcbb0,0x54a8fc54,0xbb6dd6bb,0x162c3a16];final xB=[0xc6a56363,0xf8847c7c,0xee997777,0xf68d7b7b,0xff0df2f2,0xd6bd6b6b,0xdeb16f6f,0x9154c5c5,0x60503030,0x02030101,0xcea96767,0x567d2b2b,0xe719fefe,0xb562d7d7,0x4de6abab,0xec9a7676,0x8f45caca,0x1f9d8282,0x8940c9c9,0xfa877d7d,0xef15fafa,0xb2eb5959,0x8ec94747,0xfb0bf0f0,0x41ecadad,0xb367d4d4,0x5ffda2a2,0x45eaafaf,0x23bf9c9c,0x53f7a4a4,0xe4967272,0x9b5bc0c0,0x75c2b7b7,0xe11cfdfd,0x3dae9393,0x4c6a2626,0x6c5a3636,0x7e413f3f,0xf502f7f7,0x834fcccc,0x685c3434,0x51f4a5a5,0xd134e5e5,0xf908f1f1,0xe2937171,0xab73d8d8,0x62533131,0x2a3f1515,0x080c0404,0x9552c7c7,0x46652323,0x9d5ec3c3,0x30281818,0x37a19696,0x0a0f0505,0x2fb59a9a,0x0e090707,0x24361212,0x1b9b8080,0xdf3de2e2,0xcd26ebeb,0x4e692727,0x7fcdb2b2,0xea9f7575,0x121b0909,0x1d9e8383,0x58742c2c,0x342e1a1a,0x362d1b1b,0xdcb26e6e,0xb4ee5a5a,0x5bfba0a0,0xa4f65252,0x764d3b3b,0xb761d6d6,0x7dceb3b3,0x527b2929,0xdd3ee3e3,0x5e712f2f,0x13978484,0xa6f55353,0xb968d1d1,0x00000000,0xc12ceded,0x40602020,0xe31ffcfc,0x79c8b1b1,0xb6ed5b5b,0xd4be6a6a,0x8d46cbcb,0x67d9bebe,0x724b3939,0x94de4a4a,0x98d44c4c,0xb0e85858,0x854acfcf,0xbb6bd0d0,0xc52aefef,0x4fe5aaaa,0xed16fbfb,0x86c54343,0x9ad74d4d,0x66553333,0x11948585,0x8acf4545,0xe910f9f9,0x04060202,0xfe817f7f,0xa0f05050,0x78443c3c,0x25ba9f9f,0x4be3a8a8,0xa2f35151,0x5dfea3a3,0x80c04040,0x058a8f8f,0x3fad9292,0x21bc9d9d,0x70483838,0xf104f5f5,0x63dfbcbc,0x77c1b6b6,0xaf75dada,0x42632121,0x20301010,0xe51affff,0xfd0ef3f3,0xbf6dd2d2,0x814ccdcd,0x18140c0c,0x26351313,0xc32fecec,0xbee15f5f,0x35a29797,0x88cc4444,0x2e391717,0x9357c4c4,0x55f2a7a7,0xfc827e7e,0x7a473d3d,0xc8ac6464,0xbae75d5d,0x322b1919,0xe6957373,0xc0a06060,0x19988181,0x9ed14f4f,0xa37fdcdc,0x44662222,0x547e2a2a,0x3bab9090,0x0b838888,0x8cca4646,0xc729eeee,0x6bd3b8b8,0x283c1414,0xa779dede,0xbce25e5e,0x161d0b0b,0xad76dbdb,0xdb3be0e0,0x64563232,0x744e3a3a,0x141e0a0a,0x92db4949,0x0c0a0606,0x486c2424,0xb8e45c5c,0x9f5dc2c2,0xbd6ed3d3,0x43efacac,0xc4a66262,0x39a89191,0x31a49595,0xd337e4e4,0xf28b7979,0xd532e7e7,0x8b43c8c8,0x6e593737,0xdab76d6d,0x018c8d8d,0xb164d5d5,0x9cd24e4e,0x49e0a9a9,0xd8b46c6c,0xacfa5656,0xf307f4f4,0xcf25eaea,0xcaaf6565,0xf48e7a7a,0x47e9aeae,0x10180808,0x6fd5baba,0xf0887878,0x4a6f2525,0x5c722e2e,0x38241c1c,0x57f1a6a6,0x73c7b4b4,0x9751c6c6,0xcb23e8e8,0xa17cdddd,0xe89c7474,0x3e211f1f,0x96dd4b4b,0x61dcbdbd,0x0d868b8b,0x0f858a8a,0xe0907070,0x7c423e3e,0x71c4b5b5,0xccaa6666,0x90d84848,0x06050303,0xf701f6f6,0x1c120e0e,0xc2a36161,0x6a5f3535,0xaef95757,0x69d0b9b9,0x17918686,0x9958c1c1,0x3a271d1d,0x27b99e9e,0xd938e1e1,0xeb13f8f8,0x2bb39898,0x22331111,0xd2bb6969,0xa970d9d9,0x07898e8e,0x33a79494,0x2db69b9b,0x3c221e1e,0x15928787,0xc920e9e9,0x8749cece,0xaaff5555,0x50782828,0xa57adfdf,0x038f8c8c,0x59f8a1a1,0x09808989,0x1a170d0d,0x65dabfbf,0xd731e6e6,0x84c64242,0xd0b86868,0x82c34141,0x29b09999,0x5a772d2d,0x1e110f0f,0x7bcbb0b0,0xa8fc5454,0x6dd6bbbb,0x2c3a1616];final yB=[0x50a7f451,0x5365417e,0xc3a4171a,0x965e273a,0xcb6bab3b,0xf1459d1f,0xab58faac,0x9303e34b,0x55fa3020,0xf66d76ad,0x9176cc88,0x254c02f5,0xfcd7e54f,0xd7cb2ac5,0x80443526,0x8fa362b5,0x495ab1de,0x671bba25,0x980eea45,0xe1c0fe5d,0x02752fc3,0x12f04c81,0xa397468d,0xc6f9d36b,0xe75f8f03,0x959c9215,0xeb7a6dbf,0xda595295,0x2d83bed4,0xd3217458,0x2969e049,0x44c8c98e,0x6a89c275,0x78798ef4,0x6b3e5899,0xdd71b927,0xb64fe1be,0x17ad88f0,0x66ac20c9,0xb43ace7d,0x184adf63,0x82311ae5,0x60335197,0x457f5362,0xe07764b1,0x84ae6bbb,0x1ca081fe,0x942b08f9,0x58684870,0x19fd458f,0x876cde94,0xb7f87b52,0x23d373ab,0xe2024b72,0x578f1fe3,0x2aab5566,0x0728ebb2,0x03c2b52f,0x9a7bc586,0xa50837d3,0xf2872830,0xb2a5bf23,0xba6a0302,0x5c8216ed,0x2b1ccf8a,0x92b479a7,0xf0f207f3,0xa1e2694e,0xcdf4da65,0xd5be0506,0x1f6234d1,0x8afea6c4,0x9d532e34,0xa055f3a2,0x32e18a05,0x75ebf6a4,0x39ec830b,0xaaef6040,0x069f715e,0x51106ebd,0xf98a213e,0x3d06dd96,0xae053edd,0x46bde64d,0xb58d5491,0x055dc471,0x6fd40604,0xff155060,0x24fb9819,0x97e9bdd6,0xcc434089,0x779ed967,0xbd42e8b0,0x888b8907,0x385b19e7,0xdbeec879,0x470a7ca1,0xe90f427c,0xc91e84f8,0x00000000,0x83868009,0x48ed2b32,0xac70111e,0x4e725a6c,0xfbff0efd,0x5638850f,0x1ed5ae3d,0x27392d36,0x64d90f0a,0x21a65c68,0xd1545b9b,0x3a2e3624,0xb1670a0c,0x0fe75793,0xd296eeb4,0x9e919b1b,0x4fc5c080,0xa220dc61,0x694b775a,0x161a121c,0x0aba93e2,0xe52aa0c0,0x43e0223c,0x1d171b12,0x0b0d090e,0xadc78bf2,0xb9a8b62d,0xc8a91e14,0x8519f157,0x4c0775af,0xbbdd99ee,0xfd607fa3,0x9f2601f7,0xbcf5725c,0xc53b6644,0x347efb5b,0x7629438b,0xdcc623cb,0x68fcedb6,0x63f1e4b8,0xcadc31d7,0x10856342,0x40229713,0x2011c684,0x7d244a85,0xf83dbbd2,0x1132f9ae,0x6da129c7,0x4b2f9e1d,0xf330b2dc,0xec52860d,0xd0e3c177,0x6c16b32b,0x99b970a9,0xfa489411,0x2264e947,0xc48cfca8,0x1a3ff0a0,0xd82c7d56,0xef903322,0xc74e4987,0xc1d138d9,0xfea2ca8c,0x360bd498,0xcf81f5a6,0x28de7aa5,0x268eb7da,0xa4bfad3f,0xe49d3a2c,0x0d927850,0x9bcc5f6a,0x62467e54,0xc2138df6,0xe8b8d890,0x5ef7392e,0xf5afc382,0xbe805d9f,0x7c93d069,0xa92dd56f,0xb31225cf,0x3b99acc8,0xa77d1810,0x6e639ce8,0x7bbb3bdb,0x097826cd,0xf418596e,0x01b79aec,0xa89a4f83,0x656e95e6,0x7ee6ffaa,0x08cfbc21,0xe6e815ef,0xd99be7ba,0xce366f4a,0xd4099fea,0xd67cb029,0xafb2a431,0x31233f2a,0x3094a5c6,0xc066a235,0x37bc4e74,0xa6ca82fc,0xb0d090e0,0x15d8a733,0x4a9804f1,0xf7daec41,0x0e50cd7f,0x2ff69117,0x8dd64d76,0x4db0ef43,0x544daacc,0xdf0496e4,0xe3b5d19e,0x1b886a4c,0xb81f2cc1,0x7f516546,0x04ea5e9d,0x5d358c01,0x737487fa,0x2e410bfb,0x5a1d67b3,0x52d2db92,0x335610e9,0x1347d66d,0x8c61d79a,0x7a0ca137,0x8e14f859,0x893c13eb,0xee27a9ce,0x35c961b7,0xede51ce1,0x3cb1477a,0x59dfd29c,0x3f73f255,0x79ce1418,0xbf37c773,0xeacdf753,0x5baafd5f,0x146f3ddf,0x86db4478,0x81f3afca,0x3ec468b9,0x2c342438,0x5f40a3c2,0x72c31d16,0x0c25e2bc,0x8b493c28,0x41950dff,0x7101a839,0xdeb30c08,0x9ce4b4d8,0x90c15664,0x6184cb7b,0x70b632d5,0x745c6c48,0x4257b8d0];final zB=[0xa7f45150,0x65417e53,0xa4171ac3,0x5e273a96,0x6bab3bcb,0x459d1ff1,0x58faacab,0x03e34b93,0xfa302055,0x6d76adf6,0x76cc8891,0x4c02f525,0xd7e54ffc,0xcb2ac5d7,0x44352680,0xa362b58f,0x5ab1de49,0x1bba2567,0x0eea4598,0xc0fe5de1,0x752fc302,0xf04c8112,0x97468da3,0xf9d36bc6,0x5f8f03e7,0x9c921595,0x7a6dbfeb,0x595295da,0x83bed42d,0x217458d3,0x69e04929,0xc8c98e44,0x89c2756a,0x798ef478,0x3e58996b,0x71b927dd,0x4fe1beb6,0xad88f017,0xac20c966,0x3ace7db4,0x4adf6318,0x311ae582,0x33519760,0x7f536245,0x7764b1e0,0xae6bbb84,0xa081fe1c,0x2b08f994,0x68487058,0xfd458f19,0x6cde9487,0xf87b52b7,0xd373ab23,0x024b72e2,0x8f1fe357,0xab55662a,0x28ebb207,0xc2b52f03,0x7bc5869a,0x0837d3a5,0x872830f2,0xa5bf23b2,0x6a0302ba,0x8216ed5c,0x1ccf8a2b,0xb479a792,0xf207f3f0,0xe2694ea1,0xf4da65cd,0xbe0506d5,0x6234d11f,0xfea6c48a,0x532e349d,0x55f3a2a0,0xe18a0532,0xebf6a475,0xec830b39,0xef6040aa,0x9f715e06,0x106ebd51,0x8a213ef9,0x06dd963d,0x053eddae,0xbde64d46,0x8d5491b5,0x5dc47105,0xd406046f,0x155060ff,0xfb981924,0xe9bdd697,0x434089cc,0x9ed96777,0x42e8b0bd,0x8b890788,0x5b19e738,0xeec879db,0x0a7ca147,0x0f427ce9,0x1e84f8c9,0x00000000,0x86800983,0xed2b3248,0x70111eac,0x725a6c4e,0xff0efdfb,0x38850f56,0xd5ae3d1e,0x392d3627,0xd90f0a64,0xa65c6821,0x545b9bd1,0x2e36243a,0x670a0cb1,0xe757930f,0x96eeb4d2,0x919b1b9e,0xc5c0804f,0x20dc61a2,0x4b775a69,0x1a121c16,0xba93e20a,0x2aa0c0e5,0xe0223c43,0x171b121d,0x0d090e0b,0xc78bf2ad,0xa8b62db9,0xa91e14c8,0x19f15785,0x0775af4c,0xdd99eebb,0x607fa3fd,0x2601f79f,0xf5725cbc,0x3b6644c5,0x7efb5b34,0x29438b76,0xc623cbdc,0xfcedb668,0xf1e4b863,0xdc31d7ca,0x85634210,0x22971340,0x11c68420,0x244a857d,0x3dbbd2f8,0x32f9ae11,0xa129c76d,0x2f9e1d4b,0x30b2dcf3,0x52860dec,0xe3c177d0,0x16b32b6c,0xb970a999,0x489411fa,0x64e94722,0x8cfca8c4,0x3ff0a01a,0x2c7d56d8,0x903322ef,0x4e4987c7,0xd138d9c1,0xa2ca8cfe,0x0bd49836,0x81f5a6cf,0xde7aa528,0x8eb7da26,0xbfad3fa4,0x9d3a2ce4,0x9278500d,0xcc5f6a9b,0x467e5462,0x138df6c2,0xb8d890e8,0xf7392e5e,0xafc382f5,0x805d9fbe,0x93d0697c,0x2dd56fa9,0x1225cfb3,0x99acc83b,0x7d1810a7,0x639ce86e,0xbb3bdb7b,0x7826cd09,0x18596ef4,0xb79aec01,0x9a4f83a8,0x6e95e665,0xe6ffaa7e,0xcfbc2108,0xe815efe6,0x9be7bad9,0x366f4ace,0x099fead4,0x7cb029d6,0xb2a431af,0x233f2a31,0x94a5c630,0x66a235c0,0xbc4e7437,0xca82fca6,0xd090e0b0,0xd8a73315,0x9804f14a,0xdaec41f7,0x50cd7f0e,0xf691172f,0xd64d768d,0xb0ef434d,0x4daacc54,0x0496e4df,0xb5d19ee3,0x886a4c1b,0x1f2cc1b8,0x5165467f,0xea5e9d04,0x358c015d,0x7487fa73,0x410bfb2e,0x1d67b35a,0xd2db9252,0x5610e933,0x47d66d13,0x61d79a8c,0x0ca1377a,0x14f8598e,0x3c13eb89,0x27a9ceee,0xc961b735,0xe51ce1ed,0xb1477a3c,0xdfd29c59,0x73f2553f,0xce141879,0x37c773bf,0xcdf753ea,0xaafd5f5b,0x6f3ddf14,0xdb447886,0xf3afca81,0xc468b93e,0x3424382c,0x40a3c25f,0xc31d1672,0x25e2bc0c,0x493c288b,0x950dff41,0x01a83971,0xb30c08de,0xe4b4d89c,0xc1566490,0x84cb7b61,0xb632d570,0x5c6c4874,0x57b8d042];final AC=[0xf45150a7,0x417e5365,0x171ac3a4,0x273a965e,0xab3bcb6b,0x9d1ff145,0xfaacab58,0xe34b9303,0x302055fa,0x76adf66d,0xcc889176,0x02f5254c,0xe54ffcd7,0x2ac5d7cb,0x35268044,0x62b58fa3,0xb1de495a,0xba25671b,0xea45980e,0xfe5de1c0,0x2fc30275,0x4c8112f0,0x468da397,0xd36bc6f9,0x8f03e75f,0x9215959c,0x6dbfeb7a,0x5295da59,0xbed42d83,0x7458d321,0xe0492969,0xc98e44c8,0xc2756a89,0x8ef47879,0x58996b3e,0xb927dd71,0xe1beb64f,0x88f017ad,0x20c966ac,0xce7db43a,0xdf63184a,0x1ae58231,0x51976033,0x5362457f,0x64b1e077,0x6bbb84ae,0x81fe1ca0,0x08f9942b,0x48705868,0x458f19fd,0xde94876c,0x7b52b7f8,0x73ab23d3,0x4b72e202,0x1fe3578f,0x55662aab,0xebb20728,0xb52f03c2,0xc5869a7b,0x37d3a508,0x2830f287,0xbf23b2a5,0x0302ba6a,0x16ed5c82,0xcf8a2b1c,0x79a792b4,0x07f3f0f2,0x694ea1e2,0xda65cdf4,0x0506d5be,0x34d11f62,0xa6c48afe,0x2e349d53,0xf3a2a055,0x8a0532e1,0xf6a475eb,0x830b39ec,0x6040aaef,0x715e069f,0x6ebd5110,0x213ef98a,0xdd963d06,0x3eddae05,0xe64d46bd,0x5491b58d,0xc471055d,0x06046fd4,0x5060ff15,0x981924fb,0xbdd697e9,0x4089cc43,0xd967779e,0xe8b0bd42,0x8907888b,0x19e7385b,0xc879dbee,0x7ca1470a,0x427ce90f,0x84f8c91e,0x00000000,0x80098386,0x2b3248ed,0x111eac70,0x5a6c4e72,0x0efdfbff,0x850f5638,0xae3d1ed5,0x2d362739,0x0f0a64d9,0x5c6821a6,0x5b9bd154,0x36243a2e,0x0a0cb167,0x57930fe7,0xeeb4d296,0x9b1b9e91,0xc0804fc5,0xdc61a220,0x775a694b,0x121c161a,0x93e20aba,0xa0c0e52a,0x223c43e0,0x1b121d17,0x090e0b0d,0x8bf2adc7,0xb62db9a8,0x1e14c8a9,0xf1578519,0x75af4c07,0x99eebbdd,0x7fa3fd60,0x01f79f26,0x725cbcf5,0x6644c53b,0xfb5b347e,0x438b7629,0x23cbdcc6,0xedb668fc,0xe4b863f1,0x31d7cadc,0x63421085,0x97134022,0xc6842011,0x4a857d24,0xbbd2f83d,0xf9ae1132,0x29c76da1,0x9e1d4b2f,0xb2dcf330,0x860dec52,0xc177d0e3,0xb32b6c16,0x70a999b9,0x9411fa48,0xe9472264,0xfca8c48c,0xf0a01a3f,0x7d56d82c,0x3322ef90,0x4987c74e,0x38d9c1d1,0xca8cfea2,0xd498360b,0xf5a6cf81,0x7aa528de,0xb7da268e,0xad3fa4bf,0x3a2ce49d,0x78500d92,0x5f6a9bcc,0x7e546246,0x8df6c213,0xd890e8b8,0x392e5ef7,0xc382f5af,0x5d9fbe80,0xd0697c93,0xd56fa92d,0x25cfb312,0xacc83b99,0x1810a77d,0x9ce86e63,0x3bdb7bbb,0x26cd0978,0x596ef418,0x9aec01b7,0x4f83a89a,0x95e6656e,0xffaa7ee6,0xbc2108cf,0x15efe6e8,0xe7bad99b,0x6f4ace36,0x9fead409,0xb029d67c,0xa431afb2,0x3f2a3123,0xa5c63094,0xa235c066,0x4e7437bc,0x82fca6ca,0x90e0b0d0,0xa73315d8,0x04f14a98,0xec41f7da,0xcd7f0e50,0x91172ff6,0x4d768dd6,0xef434db0,0xaacc544d,0x96e4df04,0xd19ee3b5,0x6a4c1b88,0x2cc1b81f,0x65467f51,0x5e9d04ea,0x8c015d35,0x87fa7374,0x0bfb2e41,0x67b35a1d,0xdb9252d2,0x10e93356,0xd66d1347,0xd79a8c61,0xa1377a0c,0xf8598e14,0x13eb893c,0xa9ceee27,0x61b735c9,0x1ce1ede5,0x477a3cb1,0xd29c59df,0xf2553f73,0x141879ce,0xc773bf37,0xf753eacd,0xfd5f5baa,0x3ddf146f,0x447886db,0xafca81f3,0x68b93ec4,0x24382c34,0xa3c25f40,0x1d1672c3,0xe2bc0c25,0x3c288b49,0x0dff4195,0xa8397101,0x0c08deb3,0xb4d89ce4,0x566490c1,0xcb7b6184,0x32d570b6,0x6c48745c,0xb8d04257];final BC=[0x5150a7f4,0x7e536541,0x1ac3a417,0x3a965e27,0x3bcb6bab,0x1ff1459d,0xacab58fa,0x4b9303e3,0x2055fa30,0xadf66d76,0x889176cc,0xf5254c02,0x4ffcd7e5,0xc5d7cb2a,0x26804435,0xb58fa362,0xde495ab1,0x25671bba,0x45980eea,0x5de1c0fe,0xc302752f,0x8112f04c,0x8da39746,0x6bc6f9d3,0x03e75f8f,0x15959c92,0xbfeb7a6d,0x95da5952,0xd42d83be,0x58d32174,0x492969e0,0x8e44c8c9,0x756a89c2,0xf478798e,0x996b3e58,0x27dd71b9,0xbeb64fe1,0xf017ad88,0xc966ac20,0x7db43ace,0x63184adf,0xe582311a,0x97603351,0x62457f53,0xb1e07764,0xbb84ae6b,0xfe1ca081,0xf9942b08,0x70586848,0x8f19fd45,0x94876cde,0x52b7f87b,0xab23d373,0x72e2024b,0xe3578f1f,0x662aab55,0xb20728eb,0x2f03c2b5,0x869a7bc5,0xd3a50837,0x30f28728,0x23b2a5bf,0x02ba6a03,0xed5c8216,0x8a2b1ccf,0xa792b479,0xf3f0f207,0x4ea1e269,0x65cdf4da,0x06d5be05,0xd11f6234,0xc48afea6,0x349d532e,0xa2a055f3,0x0532e18a,0xa475ebf6,0x0b39ec83,0x40aaef60,0x5e069f71,0xbd51106e,0x3ef98a21,0x963d06dd,0xddae053e,0x4d46bde6,0x91b58d54,0x71055dc4,0x046fd406,0x60ff1550,0x1924fb98,0xd697e9bd,0x89cc4340,0x67779ed9,0xb0bd42e8,0x07888b89,0xe7385b19,0x79dbeec8,0xa1470a7c,0x7ce90f42,0xf8c91e84,0x00000000,0x09838680,0x3248ed2b,0x1eac7011,0x6c4e725a,0xfdfbff0e,0x0f563885,0x3d1ed5ae,0x3627392d,0x0a64d90f,0x6821a65c,0x9bd1545b,0x243a2e36,0x0cb1670a,0x930fe757,0xb4d296ee,0x1b9e919b,0x804fc5c0,0x61a220dc,0x5a694b77,0x1c161a12,0xe20aba93,0xc0e52aa0,0x3c43e022,0x121d171b,0x0e0b0d09,0xf2adc78b,0x2db9a8b6,0x14c8a91e,0x578519f1,0xaf4c0775,0xeebbdd99,0xa3fd607f,0xf79f2601,0x5cbcf572,0x44c53b66,0x5b347efb,0x8b762943,0xcbdcc623,0xb668fced,0xb863f1e4,0xd7cadc31,0x42108563,0x13402297,0x842011c6,0x857d244a,0xd2f83dbb,0xae1132f9,0xc76da129,0x1d4b2f9e,0xdcf330b2,0x0dec5286,0x77d0e3c1,0x2b6c16b3,0xa999b970,0x11fa4894,0x472264e9,0xa8c48cfc,0xa01a3ff0,0x56d82c7d,0x22ef9033,0x87c74e49,0xd9c1d138,0x8cfea2ca,0x98360bd4,0xa6cf81f5,0xa528de7a,0xda268eb7,0x3fa4bfad,0x2ce49d3a,0x500d9278,0x6a9bcc5f,0x5462467e,0xf6c2138d,0x90e8b8d8,0x2e5ef739,0x82f5afc3,0x9fbe805d,0x697c93d0,0x6fa92dd5,0xcfb31225,0xc83b99ac,0x10a77d18,0xe86e639c,0xdb7bbb3b,0xcd097826,0x6ef41859,0xec01b79a,0x83a89a4f,0xe6656e95,0xaa7ee6ff,0x2108cfbc,0xefe6e815,0xbad99be7,0x4ace366f,0xead4099f,0x29d67cb0,0x31afb2a4,0x2a31233f,0xc63094a5,0x35c066a2,0x7437bc4e,0xfca6ca82,0xe0b0d090,0x3315d8a7,0xf14a9804,0x41f7daec,0x7f0e50cd,0x172ff691,0x768dd64d,0x434db0ef,0xcc544daa,0xe4df0496,0x9ee3b5d1,0x4c1b886a,0xc1b81f2c,0x467f5165,0x9d04ea5e,0x015d358c,0xfa737487,0xfb2e410b,0xb35a1d67,0x9252d2db,0xe9335610,0x6d1347d6,0x9a8c61d7,0x377a0ca1,0x598e14f8,0xeb893c13,0xceee27a9,0xb735c961,0xe1ede51c,0x7a3cb147,0x9c59dfd2,0x553f73f2,0x1879ce14,0x73bf37c7,0x53eacdf7,0x5f5baafd,0xdf146f3d,0x7886db44,0xca81f3af,0xb93ec468,0x382c3424,0xc25f40a3,0x1672c31d,0xbc0c25e2,0x288b493c,0xff41950d,0x397101a8,0x08deb30c,0xd89ce4b4,0x6490c156,0x7b6184cb,0xd570b632,0x48745c6c,0xd04257b8];abstract class YQ implements SQ{}class aE extends fK{final Uint8List key;aE(this.key);}const bH=0x1F;const bE=0xFFFFFFFF;final ZQ=[0xFFFFFFFF,0x7FFFFFFF,0x3FFFFFFF,0x1FFFFFFF,0x0FFFFFFF,0x07FFFFFF,0x03FFFFFF,0x01FFFFFF,0x00FFFFFF,0x007FFFFF,0x003FFFFF,0x001FFFFF,0x000FFFFF,0x0007FFFF,0x0003FFFF,0x0001FFFF,0x0000FFFF,0x00007FFF,0x00003FFF,0x00001FFF,0x00000FFF,0x000007FF,0x000003FF,0x000001FF,0x000000FF,0x0000007F,0x0000003F,0x0000001F,0x0000000F,0x00000007,0x00000003,0x00000001,0x00000000];int aQ(int A,int B){assert((A>=0)&&(A<=bE));B&= bH;A&= ZQ[B];return ((A<<B)&bE);}int bQ(int A,int B){assert((A>=0)&&(A<=bE));B&= bH;return (A>>B);}int cQ(int A,int B){assert(B>=0);assert((A>=0)&&(A<=bE));B&= bH;return (A>>B)|aQ(A,(32-B));}void ZF(int B,dynamic A,int C,Endianness D){assert((B>=0)&&(B<=bE));if(A is!ByteData){A=new ByteData.view(A.buffer);}(A as ByteData).setUint32(C,B,D);}int cE(dynamic A,int B,Endianness C){if(A is!ByteData){A=new ByteData.view(A.buffer);}return (A as ByteData).getUint32(B,C);}const String NR='\u001b[31m';const String WL='\u001b[0m';iC yQ()=>new iC.VV();class iC{factory iC({IB style,String current}){if(current==null){if(style==null){current=qK;}else{current=".";}}if(style==null){style=IB.jH;}else if(style is!kC){throw new ArgumentError("Only styles defined by the path package are " "allowed.");}return new iC.WV(style as kC,current);}iC.VV():Q=IB.jH as kC,HW=null;iC.WV(this.Q,this.HW);final kC Q;final String HW;String get current=>HW!=null?HW:qK;String get JC=>Q.JC;String absolute(String A,[String B,String C,String D,String G,String I,String J]){yK("absolute",[A,B,C,D,G,I,J]);if(B==null&&isAbsolute(A)&&!SB(A)){return A;}return join(current,A,B,C,D,G,I,J);}String MJ(String A)=>IW(A).MJ;String VJ(String A)=>IW(A).VJ;bool isAbsolute(String A)=>Q.SC(A)>0;bool HF(String A)=>!this.isAbsolute(A);bool SB(String A)=>Q.SB(A);String join(String B,[String C,String D,String G,String I,String J,String M,String S]){var A=<String>[B,C,D,G,I,J,M,S];yK("join",A);return nU(A.where((W)=>W!=null));}String nU(Iterable<String> J){var B=new StringBuffer();var D=false;var G=false;for(var A in J.where((A)=>A!='')){if(this.SB(A)&&G){var C=IW(A);var I=B.toString();C.n=I.substring(0,Q.SC(I,withDrive:true));if(Q.PE(C.n)){C.TB[0]=Q.JC;}B.clear();B.write(C.toString());}else if(this.isAbsolute(A)){G=!this.SB(A);B.clear();B.write(A);}else{if(A.length>0&&Q.iG(A[0])){}else if(D){B.write(JC);}B.write(A);}D=Q.PE(A);}return B.toString();}List<String> split(String B){var A=IW(B);A.f=A.f.where((C)=>!C.isEmpty).toList();if(A.n!=null)A.f.insert(0,A.n);return A.f;}String WD(String A){if(!JW(A))return A;var B=IW(A);B.WD();return B.toString();}bool JW(String J){var M=0;var D=J.codeUnits;int B;int A;var G=Q.SC(J);if(G!=0){M=G;A=CC;if(Q==IB.cF){for(var C=0;C<G;C++ ){if(D[C]==CC)return true;}}}for(var C=M;C<D.length;C++ ){var I=D[C];if(Q.a(I)){if(Q==IB.cF&&I==CC)return true;if(A!=null&&Q.a(A))return true;if(A==lB&&(B==null||B==lB||Q.a(B))){return true;}}B=A;A=I;}if(A==null)return true;if(Q.a(A))return true;if(A==lB&&(B==null||Q.a(B)||B==lB)){return true;}return false;}String uO(String C,{String from}){if(from==null&&this.HF(C))return this.WD(C);from=from==null?current:absolute(from);if(this.HF(from)&&this.isAbsolute(C)){return this.WD(C);}if(this.HF(C)||this.SB(C)){C=this.absolute(C);}if(this.HF(C)&&this.isAbsolute(from)){throw new bF('Unable to find a path to "${C}" from "${from}".');}var B=IW(from)..WD();var A=IW(C)..WD();if(B.f.length>0&&B.f[0]=='.'){return A.toString();}if(B.n!=A.n&&((B.n==null||A.n==null)||!Q.jJ(B.n,A.n))){return A.toString();}while(B.f.length>0&&A.f.length>0&&Q.jJ(B.f[0],A.f[0])){B.f.removeAt(0);B.TB.removeAt(1);A.f.removeAt(0);A.TB.removeAt(1);}if(B.f.length>0&&B.f[0]=='..'){throw new bF('Unable to find a path to "${C}" from "${from}".');}A.f.insertAll(0,new List.filled(B.f.length,'..'));A.TB[0]='';A.TB.insertAll(1,new List.filled(B.f.length,Q.JC));if(A.f.length==0)return '.';if(A.f.length>1&&A.f.last=='.'){A.f.removeLast();A.TB..removeLast()..removeLast()..add('');}A.n='';A.lJ();return A.toString();}bool IC(String A,String B)=>KW(A,B)==j.aF;j KW(String A,String B){var D=isAbsolute(A);var G=isAbsolute(B);if(D&&!G){B=absolute(B);if(Q.SB(A))A=absolute(A);}else if(G&&!D){A=absolute(A);if(Q.SB(B))B=absolute(B);}else if(G&&D){var I=Q.SB(B);var J=Q.SB(A);if(I&&!J){B=absolute(B);}else if(J&&!I){A=absolute(A);}}var M=LW(A,B);if(M!=j.aD)return M;String C;try {C=this.uO(B,from:A);}on bF catch (S){return j.jC;}if(!this.HF(C))return j.jC;if(C=='.')return j.aF;if(C=='..')return j.jC;return (C.length>=3&&C.startsWith('..')&&Q.a(C.codeUnitAt(2)))?j.jC:j.zK;}j LW(String C,String D){if(C=='.')C='';var S=Q.SC(C);var GB=Q.SC(D);if(S!=GB)return j.jC;for(var e=0;e<S;e++ ){var G=C.codeUnitAt(e);var I=D.codeUnitAt(e);if(!Q.gG(G,I)){return j.jC;}}var J=CC;int M;var A=S;var B=GB;while(A<C.length&&B<D.length){var G=C.codeUnitAt(A);var I=D.codeUnitAt(B);if(Q.gG(G,I)){if(Q.a(G)){M=A;}J=G;A++ ;B++ ;continue;}if(Q.a(G)&&Q.a(J)){M=A;A++ ;continue;}else if(Q.a(I)&&Q.a(J)){B++ ;continue;}if(G==lB&&Q.a(J)){A++ ;if(A==C.length)break;G=C.codeUnitAt(A);if(Q.a(G)){M=A;A++ ;continue;}if(G==lB){A++ ;if(A==C.length||Q.a(C.codeUnitAt(A))){return j.aD;}}}if(I==lB&&Q.a(J)){B++ ;if(B==D.length)break;I=D.codeUnitAt(B);if(Q.a(I)){B++ ;continue;}if(I==lB){B++ ;if(B==D.length||Q.a(D.codeUnitAt(B))){return j.aD;}}}var ZD=MW(D,B);if(ZD!=bB.iH){return j.aD;}var QE=MW(C,A);if(QE!=bB.iH){return j.aD;}return j.jC;}if(B==D.length){if(A==C.length||Q.a(C.codeUnitAt(A))){M=A;}else{M??= uD.max(0,S-1);}var W=MW(C,M??S-1);if(W==bB.hH)return j.aF;return W==bB.gH?j.aD:j.jC;}var W=MW(D,B);if(W==bB.hH)return j.aF;if(W==bB.gH){return j.aD;}return (Q.a(D.codeUnitAt(B))||Q.a(J))?j.zK:j.jC;}bB MW(String B,int I){var C=0;var G=false;var A=I;while(A<B.length){while(A<B.length&&Q.a(B.codeUnitAt(A))){A++ ;}if(A==B.length)break;var D=A;while(A<B.length&&!Q.a(B.codeUnitAt(A))){A++ ;}if(A-D==1&&B.codeUnitAt(D)==lB){}else if(A-D==2&&B.codeUnitAt(D)==lB&&B.codeUnitAt(D+1)==lB){C-- ;if(C<0)break;if(C==0)G=true;}else{C++ ;}if(A==B.length)break;A++ ;}if(C<0)return bB.gH;if(C==0)return bB.hH;if(G)return bB.zQ;return bB.iH;}int hash(String A){A=absolute(A);var B=NW(A);if(B!=null)return B;var C=IW(A);C.WD();return NW(C.toString());}int NW(String B){var C=4603;var I=true;var D=true;for(var A=0;A<B.length;A++ ){var G=Q.ZN(B.codeUnitAt(A));if(Q.a(G)){D=true;continue;}if(G==lB&&D){if(A+1==B.length)break;var J=B.codeUnitAt(A+1);if(Q.a(J))continue;if(!I&&J==lB&&(A+2==B.length||Q.a(B.codeUnitAt(A+2)))){return null;}}C&= 0x3FFFFFF;C*= 33;C^= G;D=false;I=false;}return C;}String XU(A)=>Q.MF(xK(A));String yU(D){var A=xK(D);if(A.scheme=='file'&&Q==IB.hE){return A.toString();}else if(A.scheme!='file'&&A.scheme!=''&&Q!=IB.hE){return A.toString();}var B=WD(XU(A));var C=uO(B);return split(C).length>split(B).length?B:C;}bD IW(String A)=>new bD.XV(A,Q);}Uri xK(A){if(A is String)return Uri.parse(A);if(A is Uri)return A;throw new ArgumentError.value(A,'uri','Value must be a String or a Uri');}void yK(String I,List<String> A){for(var B=1;B<A.length;B++ ){if(A[B]==null||A[B-1]!=null)continue;int C;for(C=A.length;C>=1;C-- ){if(A[C-1]!=null)break;}var D=new StringBuffer();D.write("${I}(");D.write(A.take(C).map((G)=>G==null?"null":'"${G}"').join(", "));D.write("): part ${B-1} was null, but part ${B} was not.");throw new ArgumentError(D.toString());}}class bB{static const gH=const bB("above root");static const hH=const bB("at root");static const zQ=const bB("reaches root");static const iH=const bB("below root");final String name;const bB(this.name);String toString()=>name;}class j{static const zK=const j("within");static const aF=const j("equal");static const jC=const j("different");static const aD=const j("inconclusive");final String name;const j(this.name);String toString()=>name;}const tP=const NK.PV();class NK extends Codec<List<int>,String>{SH get encoder=>vP;QH get decoder=>uP;const NK.PV();}const uP=const QH.QV();class QH extends Converter<String,List<int>>{const QH.QV();List<int> convert(String A){if(!A.length.isEven){throw new FormatException("Invalid input length, must be even.",A,A.length);}var B=new Uint8List(A.length~/2);RH(A.codeUnits,0,A.length,B,0);return B;}StringConversionSink startChunkedConversion(Sink<List<int>> A)=>new PK(A);}class PK extends StringConversionSinkBase{final Sink<List<int>> OW;int PW;PK(this.OW);void addSlice(String D,int A,int B,bool I){RangeError.checkValidRange(A,B,D.length);if(A==B){if(I)QW(D,B);return;}var J=D.codeUnits;Uint8List C;int G;if(PW==null){C=new Uint8List((B-A)~/2);G=0;}else{var M=(B-A-1)~/2;C=new Uint8List(1+M);C[0]=PW+WE(J,A);A++ ;G=1;}PW=RH(J,A,B,C,G);OW.add(C);if(I)QW(D,B);}ByteConversionSink asUtf8Sink(bool A)=>new QK(OW);void close()=>QW();void QW([String A,int B]){if(PW!=null){throw new FormatException("Input ended with incomplete encoded byte.",A,B);}OW.close();}}class QK extends ByteConversionSinkBase{final Sink<List<int>> OW;int PW;QK(this.OW);void add(List<int> A)=>addSlice(A,0,A.length,false);void addSlice(List<int> C,int A,int B,bool I){RangeError.checkValidRange(A,B,C.length);if(A==B){if(I)QW(C,B);return;}Uint8List D;int G;if(PW==null){D=new Uint8List((B-A)~/2);G=0;}else{var J=(B-A-1)~/2;D=new Uint8List(1+J);D[0]=PW+WE(C,A);A++ ;G=1;}PW=RH(C,A,B,D,G);OW.add(D);if(I)QW(C,B);}void close()=>QW();void QW([List<int> A,int B]){if(PW!=null){throw new FormatException("Input ended with incomplete encoded byte.",A,B);}OW.close();}}int RH(List<int> B,int D,int C,List<int> G,int I){var J=I;for(var A=D;A<C-1;A+= 2){var M=WE(B,A);var S=WE(B,A+1);G[J++ ]=16*M+S;}if((C-D).isEven)return null;return 16*WE(B,C-1);}const vP=const SH.RV();class SH extends Converter<List<int>,String>{const SH.RV();String convert(List<int> A)=>TH(A,0,A.length);ByteConversionSink startChunkedConversion(Sink<String> A)=>new RK(A);}class RK extends ByteConversionSinkBase{final Sink<String> RW;RK(this.RW);void add(List<int> A){RW.add(TH(A,0,A.length));}void addSlice(List<int> A,int B,int C,bool D){RangeError.checkValidRange(B,C,A.length);RW.add(TH(A,B,C));if(D)RW.close();}void close(){RW.close();}}String TH(List<int> C,int D,int G){var I=new Uint8List((G-D)*2);var M=0;var J=0;for(var A=D;A<G;A++ ){var B=C[A];J|= B;I[M++ ]=SK((B&0xF0)>>4);I[M++ ]=SK(B&0x0F);}if(J>=0&&J<=255)return new String.fromCharCodes(I);for(var A=D;A<G;A++ ){var B=C[A];if(B>=0&&B<=0xff)continue;throw new FormatException("Invalid byte ${B<0?"-":""}0x${B.abs().toRadixString(16)}.",C,A);}throw 'unreachable';}int SK(int A)=>A<10?A+HD:A+OH-10;int WE(List<int> D,int G){var A=D[G];var B=HD^A;if(B<=9){if(B>=0)return B;}else{var C=0x20|A;if(OH<=C&&C<=FK)return C-OH+10;}throw new FormatException("Invalid hexadecimal code unit " "U+${A.toRadixString(16).padLeft(4,'0')}.",D,G);}String AQ(List<int> A){return const XK().convert(A);}List<int> BQ(String A){return const YK().convert(A);}class XK extends Converter<List<int>,String>{final bool TP;final bool LJ;const XK([bool this.TP=false,bool this.LJ=false]);static const int WH=61;static const int CQ=13;static const int DQ=10;static const int EQ=76;static const String FQ="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";static const String GQ="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";String convert(List<int> G){int J=G.length;if(J==0){return "";}final String D=TP?GQ:FQ;final int M=J.remainder(3);final int GB=J-M;int S=((J~/3)*4)+((M>0)?4:0);if(LJ){S+= ((S-1)~/EQ)<<1;}List<int> A=new List<int>(S);int B=0,I=0,W=0;while(I<GB){int C=((G[I++ ]<<16)&0xFFFFFF)|((G[I++ ]<<8)&0xFFFFFF)|G[I++ ];A[B++ ]=D.codeUnitAt(C>>18);A[B++ ]=D.codeUnitAt((C>>12)&0x3F);A[B++ ]=D.codeUnitAt((C>>6)&0x3F);A[B++ ]=D.codeUnitAt(C&0x3f);if(LJ&& ++W==19&&B<S-2){A[B++ ]=CQ;A[B++ ]=DQ;W=0;}}if(M==1){int C=G[I];A[B++ ]=D.codeUnitAt(C>>2);A[B++ ]=D.codeUnitAt((C<<4)&0x3F);A[B++ ]=WH;A[B++ ]=WH;}else if(M==2){int C=G[I];int e=G[I+1];A[B++ ]=D.codeUnitAt(C>>2);A[B++ ]=D.codeUnitAt(((C<<4)|(e>>4))&0x3F);A[B++ ]=D.codeUnitAt((e<<2)&0x3F);A[B++ ]=WH;}return new String.fromCharCodes(A);}}class YK extends Converter<String,List<int>>{const YK();static const List<int> XH=const[-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-2,-2,-1,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,62,-2,62,-2,63,52,53,54,55,56,57,58,59,60,61,-2,-2,-2,0,-2,-2,-2,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-2,-2,-2,-2,63,-2,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2];static const int HQ=61;List<int> convert(String B){int D=B.length;if(D==0){return new List<int>(0);}int S=0;for(int A=0;A<D;A++ ){int G=XH[B.codeUnitAt(A)];if(G<0){S++ ;if(G==-2){throw new FormatException('Invalid character: ${B[A]}');}}}if((D-S)%4!=0){throw new FormatException('''Size of Base 64 characters in Input
          must be a multiple of 4. Input: ${B}''');}int W=0;for(int A=D-1;A>=0;A-- ){int e=B.codeUnitAt(A);if(XH[e]>0)break;if(e==HQ)W++ ;}int J=(((D-S)*6)>>3)-W;List<int> M=new Uint8List(J);for(int A=0,C=0;C<J;){int I=0;for(int GB=4;GB>0;){int G=XH[B.codeUnitAt(A++ )];if(G>=0){I=((I<<6)&0xFFFFFF)|G;GB-- ;}}M[C++ ]=I>>16;if(C<J){M[C++ ]=(I>>8)&0xFF;if(C<J)M[C++ ]=I&0xFF;}}return M;}}class IQ{bool hN;int port;int QO;String RJ;String fG;String cN;String bN;bool sN;bool pN;bool jN;bool YN;int YP;String host;int PP;String NJ;String PJ;Map<String,String> yG;Map<String,Map<String,dynamic>> XO;Map<String,Map<String,dynamic>> QP;bool KP;String OJ;bool nJ;List<String> kN;String RP;bool sO;bool PN;void set SJ(List A){if(A!=null){var B=(List D)=>D[0]=='default';var C=A.firstWhere(B,orElse:()=>null);if(C!=null){A.removeWhere(B);A.add(C);}}SW=A;}List get SJ=>SW;List SW;bool WP;int hJ;int iJ;int dJ;int eJ;String fO;String LO;String ME;String NP;String ZO;String mN;bool UP;bool VP;String nN;bool xO;bool wN;String BP;bool uN;int bO;List<String> cO;Map<String,String> proxies;Map<String,List<String>> OO;List<String> CP;List<String> gN;List<String> VO;int XP;bool QN;bool tN;bool RN;int qO;bool WO;Map<String,String> YO;bool MP;String DO;bool qN;String UN;Map<String,List<String>> PO;bool RO;String eN;bool rN;bool vN;int iO;String TN;String eO;bool dO;int hO;int gO;bool XN;String fN;Map VN;RegExp TW=null;String IP;dynamic uG;String FP;bool BO;dynamic get(A,[B]){if(A is!List){A=[A];}for(var C in A){if(map[C]!=null){return map[C];}}if(B is Function){return B();}else{return B;}}dynamic map;void load(Map B){this.map=B;hN=get("debug",false);port=get("port",UW);QO=get(["httpsPort","httpsport"],VW);cN=get("certName","");fG=get("certPassword");WW(fG);bN=get("certKeyName","");sN=get("enableHSTS",false);pN=get("enableCSRFProtection",false);jN=get("disableFileSecurity",false);YN=get("broadcast",false);NJ=get("broadcastUrl");YP=get("workers",Platform.numberOfProcessors==1?1:2);PP=get("updateInterval",200);var A=<String,String>{"/.well-known":"${Directory.current.absolute.path}/.well-known"};yG=get("static",A);if(!yG.containsKey("/.well-known")){yG.addAll(A);}XO=get("linkConfig",{});PJ=get("brokerUrl");OJ=get("brokerName","broker-");kN=get("disabledLinks",[] );nJ=get("runBrokerInMain",Platform.numberOfProcessors==1?true:false);wN=get("enableUptimeChecker",true);RP=get("uptimeCheckUrl");QP=get("upstream",{});KP=get("strictTls",false);sO=get("quarantine",false);PN=get("allowAllLinks",true);SJ=get("defaultPermission",null);WP=get("useRuntimeManager",false);UP=get("useDartRuntimeManager",false);VP=get("useJavaRuntimeManager",false);hJ=get("passwordHasherIterations",1000);iJ=get("passwordHasherKeyLength",32);dJ=get('old_passwordHasherIterations',null);eJ=get('old_passwordHasherKeyLength',null);fO=get("loginRedirectPath","/");ME=get("authType","file");NP=get("twoFactorAuth","none");nN=get("downstreamName","conns");xO=get("runPortChecks",true);IP=get("storageDriver",'simple');uG=get("observe",false);host=get("host","0.0.0.0");cO=get("loggers",[] );proxies=get("proxies",{});OO=get("hooks",{});mN=get("distributionUrl",KQ);ZO=get("linkRepositoryUrl",JQ);CP=get("serverVmFlags",[] );gN=get("dartRuntimeManagerVmFlags",[] );VO=get("javaRuntimeManagerVmFlags",[] );XP=get("userTimeout",525600);QN=get("allowBrowserCaching",false);BP=get("serverLogLevel","INFO");uN=get("enableLogCompression",true);bO=get("logRotationInterval",0);tN=get("enableIPv6",false);LO=get("guestLoginRedirectPath",null);RN=get("allowPasswordChanges",true);qO=get("passwordExpireAfterDays",0);WO=get("keepCustomAssets",false);YO=get("linkManagerEnvironment",{});MP=get("timeHttpRequests",false);DO=get("generatedCertificateSubject","/C=US/ST=California/L=Oakland/O=Acuity Brands Inc./OU=Customers/CN=*");qN=get("enableCertificateGeneration",true);UN=get("alternativeBrokerUrl",null);PO=get("httpPathClassification",{});RO=get("isAlwaysOffline",false);eN=get("corsProxyRules","");rN=get("enableGit",false);vN=get("enableSingleSignOnServer",false);iO=get("maxQueueSize",256);FP=get("ssoProviderUrl",null);BO=get("formatDg5",false);TN=get("allowedCorsRegexString",null);eO=get("loginAuditFileName","audit.log");dO=get("loginAudit",false);hO=get("loginThrottleDuration",60);gO=get("loginThrottleAttempts",5);XN=get("blockOutsideGuests",false);fN=get("customLogo",null);VN=get("audit",null);}Future<bool> pU([String A="server"])async{if(await ZE.ZH.YJ(".docker").exists()){UW=80;VW=443;}var B=await ZK(A);if(!(await B.exists())){load({"downstreamName":"downstream","corsProxyRules":""});await oJ(A);return true;}var C=await MQ(B);load(C);var D=XD();if(const JsonEncoder().convert(C)!=const JsonEncoder().convert(D)){await oJ(A);}return false;}int VW=8443;int UW=8080;Map XD(){var A={"debug":hN,"host":host,"port":port,"httpsPort":QO,"certName":cN,"certKeyName":bN,"certPassword":fG,"enableHSTS":sN,"enableCSRFProtection":pN,"strictFileUpload":{"enabled":false,"useClamAV":false,"extensions":const["dg5","dgi","crt","key","woff","ttf","gif","svg","png","jpg","xml","json","sql","csv"]},"disableFileSecurity":jN,"isAlwaysOffline":RO,"broadcast":YN,"workers":YP,"updateInterval":PP,"static":yG,"linkConfig":XO,"disabledLinks":kN,"enableUptimeChecker":wN,"uptimeCheckUrl":RP,"upstream":QP,"strictTls":KP,"quarantine":sO,"allowAllLinks":PN,"defaultPermission":SJ,"useRuntimeManager":WP,"useDartRuntimeManager":UP,"useJavaRuntimeManager":VP,"passwordHasherIterations":hJ,"passwordHasherKeyLength":iJ,"loginRedirectPath":fO,"guestLoginRedirectPath":LO,"authType":ME,"twoFactorAuth":NP,"runPortChecks":xO,"storageDriver":IP,"downstreamName":nN,"loggers":cO,"proxies":proxies,"hooks":OO,"distributionUrl":mN,"linkRepositoryUrl":ZO,"serverVmFlags":CP,"userTimeout":XP,"allowBrowserCaching":QN,"serverLogLevel":BP,"enableLogCompression":uN,"logRotationInterval":bO,"enableIPv6":tN,"dartRuntimeManagerVmFlags":gN,"javaRuntimeManagerVmFlags":VO,"allowPasswordChanges":RN,"passwordExpireAfterDays":qO,"keepCustomAssets":WO,"linkManagerEnvironment":YO,"timeHttpRequests":MP,"generatedCertificateSubject":DO,"enableCertificateGeneration":qN,"alternativeBrokerUrl":UN,"httpPathClassification":PO,"corsProxyRules":eN,"enableGit":rN,"enableSingleSignOnServer":vN,"maxQueueSize":iO,"ssoProviderUrl":FP,"formatDg5":BO,"allowedCorsRegexString":TN,"loginAuditFileName":eO,"loginAudit":dO,"loginThrottleDuration":hO,"loginThrottleAttempts":gO,"blockOutsideGuests":XN,"customLogo":fN,"audit":VN};if(NJ!=null){A["broadcastUrl"]=NJ;}if(OJ!=null){A["brokerName"]=OJ;}if(PJ!=null){A["brokerUrl"]=PJ;}if(nJ!=null){A["runBrokerInMain"]=nJ;}if(map["ldap"]!=null){A["ldap"]=map["ldap"];}if(map["ldap2"]!=null){A["ldap2"]=map["ldap2"];}if(map["duo"]!=null){A["duo"]=map["duo"];}if(map["strictFileUpload"]!=null){A["strictFileUpload"]=map["strictFileUpload"];}if(map["externalAuth"]!=null){A["externalAuth"]=map["externalAuth"];}if(map["authServer"]!=null){A["authServer"]=map["authServer"];}if(map['openId']!=null){A['openId']=map['openId'];}if(map['proxy']!=null){A['proxy']=map['proxy'];}if(dJ!=null){A['old_passwordHasherIterations']=dJ;}if(eJ!=null){A["old_passwordHasherKeyLength"]=eJ;}if(uG==true||uG is String){A["observe"]=uG;}if(map['smtp']!=null){A['smtp']=map['smtp'];}return A;}bool XW=false;Future oJ([String A="server"])async{if(XW){return;}XW=true;var B=await ZK(A);await NQ(B,XD());XW=false;}void WW(String A){if(A==null||A.isEmpty){RJ=A;return;}var B=PQ(A);if(B==null||B.isEmpty){RJ=A;YW(A);return;}RJ=B;}void YW(String B){var A=QQ(B);if(A==null||A.isEmpty){return;}fG=A;oJ();}}const String JQ="https://dsa.s3.amazonaws.com/links/links.json";const String KQ="https://dsa.s3.amazonaws.com/dists/dists.json";AB YE;LQ(){if(YE==null){xD=true;YE=new AB("DGServer");YE.mO.listen((A){List<String> B=A.message.split("\n");for(String C in B){print("[${A.level.name}] ${C}");}if(A.error!=null){print(A.error);}if(A.stackTrace!=null&&YE.TO(V.lK)){print(A.stackTrace);}});}}Future<wD> ZK(String A)async{var B=["${A}.json","${A}.toml","${A}.yaml"];for(var D in B){var C=ZE.ZH.YJ(D);if(await C.exists()){return C;}}return ZE.ZH.YJ(B.first);}Future<dynamic> MQ(wD B)async{if(!(await B.exists())){return null;}var A=await B.readAsString();var C=sK(B.path);if(C==".toml"){var D=new dL();return vD(D.QB(A).value);}else if(C==".yaml"){return vD(VS(A));}else{if(A.trim().isEmpty||A==" "){A="{}";}return vD(bK.convert(A));}}Future NQ(wD B,dynamic D)async{if(!(await B.exists())){await B.create();}var A="";var C=sK(B.path);if(C==".toml"){var G=new TR();A=G.encode(D);}else if(C==".yaml"){A=YS(D);}else{A=aK.convert(D);}if(!A.endsWith("\n")){A=A+"\n";}final I=C!='.toml'&&C!='.yaml';await B.writeAsString(A,verifyJson:I);}JsonEncoder aK=const JsonEncoder.withIndent("  ");JsonDecoder bK=const JsonDecoder();dynamic vD(A){if(A is Map){var B={};for(var C in A.keys){B[vD(C)]=vD(A[C]);}return B;}else if(A is List){return A.map((D)=>vD(D)).toList();}else{return A;}}final OQ=new Uint8List.fromList([0x00,0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x88,0x99,0x88,0x77,0x66,0x55,0x44,0xFF,0xFF,0x44,0x55,0x66,0x77,0x88,0x99,0x88,0x77,0x66,0x55,0x44,0x33,0x22,0x11,0xAA]);final aE cK=new aE(OQ);XF TF;XF get UF{if(TF!=null)return TF;TF=new XF();return TF;}String PQ(String A){if(A==null||A.isEmpty)return null;UF..reset()..init(false,cK);String B;try {var D=BQ(A);var G=dK(UF,D);var C=UTF8.decode(G);var I=int.parse(C.substring(0,2),radix:10);B=C.substring(2,2+I);}catch (J){return null;}return B;}String QQ(String B){if(B==null||B.isEmpty)return null;String G;UF..reset()..init(true,cK);var J=B.length.toString().padLeft(2,'0');var A=J+B;var D=UTF8.encode(A);var I=16-(D.length%16);if(I!=16){var C=A.length+I;C=(C<16?16:C);A=A.padRight(C,'.');D=UTF8.encode(A);}try {var M=dK(UF,D);G=AQ(M);}catch (S){YE.IV("Error encoding password",S);return null;}return G;}Uint8List dK(XF D,Uint8List B){var C=new Uint8List(B.length);for(var A=0;A<B.lengthInBytes;){var G=D.zU(B,A,C,A);A+= G;}return C;}abstract class YH{}abstract class wD implements YH{}abstract class VF implements YH{}abstract class ZE{static ZE ZH=new RQ();VF get n;wD YJ(String A){return n.JU(A);}}class eK implements wD{final File file;eK(this.file);Future create()async{await file.create(recursive:true);}Future delete()async{await file.delete(recursive:true);}Future<bool> exists(){return file.exists();}YH get parent{return new WF(file.parent);}String get path=>file.path;Future<List<int>> readAsBytes(){return file.readAsBytes();}Future<String> readAsString(){return file.readAsString();}Future writeAsString(String A,{bool verifyJson: false})async{return fQ(file,A,verifyJson:verifyJson);}}class WF implements VF{final Directory nD;WF(this.nD);wD JU(String A){var B=wQ(nD.path,A);return new eK(new File(B));}Future create(){return nD.create(recursive:true);}Future delete(){return nD.delete(recursive:true);}Future<bool> exists(){return nD.exists();}VF get parent=>new WF(nD.parent);String get path=>nD.path;}class RQ extends ZE{VF get n=>new WF(Directory.current);}class CB{final List<int> RC;CB(this.RC);bool operator==(Object A)=>A is CB&&const PH().IC(RC,A.RC);int get hashCode=>const PH().hash(RC);String toString()=>tP.encode(RC);}class UH extends Sink<CB>{CB get value{assert(ZW!=null);return ZW;}CB ZW;void add(CB A){assert(ZW==null);ZW=A;}void close(){assert(ZW!=null);}}final dQ=uQ;Future<File> eQ(File B,dynamic G,Future<File> I(File file,dynamic content),{bool verifyJson: false})async{final C=await Directory.current.createTemp();final J=vQ(B.path);var A=new File("${C.path}${dQ}${J}");A=await I(A,G);var D=true;if(verifyJson){final M=await A.readAsString();try {JSON.decode(M);}on FormatException catch (S,W){D=false;cH.DP("Couldn't parse JSON after trying to write ${B.path}",S,W);}}if(D){A=await A.rename(B.absolute.path);C.delete();return A;}else{cH.DP("${B.path} wasn't saved, the original will be preserved");return B;}}Future<File> fQ(File B,String A,{bool verifyJson: false})async{return eQ(B,A,(File C,A)=>C.writeAsString(A,flush:true),verifyJson:verifyJson);}AB dE;const bool gQ=identical(1,1.0);bool eE(hC B,String A,[bool D=false]){if(!gQ){bool C=new bool.fromEnvironment(A,defaultValue:null);if(C!=null){return C;}}if(B.zone[A] is bool){return B.zone[A];}return D;}AB get cH{if(dE!=null){return dE;}xD=true;dE=new AB("DSA");dE.mO.listen((A){List<String> D=A.message.split("\n");bool G=eE(A,"dsa.logger.inline_errors",true);bool I=eE(A,"dsa.logger.sequence",false);if(G){if(A.error!=null){D.addAll(A.error.toString().split("\n"));}if(A.stackTrace!=null){D.addAll(A.stackTrace.toString().split("\n").where((J)=>J.isNotEmpty).toList());}}String C=A.cJ;if(A.zone["dsa.logger.name"] is String){C=A.zone["dsa.logger.name"];}bool M=eE(A,"dsa.logger.show_timestamps",false);if(!eE(A,"dsa.logger.show_name",true)){C=null;}for(String S in D){String B="";if(I){B+= "[${A.AP}]";}if(M){B+= "[${A.LP}]";}B+= "[${A.level.name}]";if(C!=null){B+= "[${C}]";}B+= " ";B+= S;if(eE(A,"dsa.logger.print",true)){print(B);}}if(!G){if(A.error!=null){print(A.error);}if(A.stackTrace!=null){print(A.stackTrace);}}});hQ(const String.fromEnvironment("dsa.logger.default_level",defaultValue:"INFO"));return dE;}void hQ(String A){A=A.trim().toUpperCase();if(A=="DEBUG"){A="ALL";}Map<String,V> C={};for(var B in V.pQ){C[B.name]=B;}var B=C[A];if(B!=null){cH.level=B;}}final ZL=new RegExp(r"\r\n?|\n");class CI extends CE{int get WB=>aW;int aW=0;int get k=>bW;int bW=0;KD get state=>new aL(this,position,WB,k);bool get cW=>X(-1)==EK&&X()==LH;set position(int A){var C=position;super.position=A;if(A>C){var B=dW(string.substring(C,A));aW+= B.length;if(B.isEmpty){bW+= A-C;}else{bW=A-B.last.end;}}else{var B=dW(string.substring(A,C));if(cW)B.removeLast();aW-= B.length;if(B.isEmpty){bW-= C-A;}else{bW=A-string.lastIndexOf(ZL,A)-1;}}}CI(String A,{sourceUrl,int position}):super(A,sourceUrl:sourceUrl,position:position);int U(){var A=super.U();eW(A);return A;}void eW(int A){if(A==LH||(A==EK&&X()!=LH)){aW+= 1;bW=0;}else{bW+= 1;}}bool FB(Pattern B){if(!super.FB(B))return false;var A=dW(NE[0]);aW+= A.length;if(A.isEmpty){bW+= NE[0].length;}else{bW=NE[0].length-A.last.end;}return true;}List<Match> dW(String B){var A=ZL.allMatches(B).toList();if(cW)A.removeLast();return A;}}class aL implements KD{final CI fW;final int position;final int WB;final int k;aL(this.fW,this.position,this.WB,this.k);}const int KC=0x7fffffff;abstract class TC<R>{}class RF<R> implements TC<R>{const RF();bool IC(R A,R B)=>A==B;int hash(R A)=>A.hashCode;bool rG(Object A)=>true;}class GK<R> implements TC<Iterable<R>>{final TC<R> gW;const GK([TC<R> A=const RF()]):gW=A;bool IC(Iterable<R> A,Iterable<R> B){if(identical(A,B))return true;if(A==null||B==null)return false;var C=A.iterator;var D=B.iterator;while(true){bool G=C.moveNext();if(G!=D.moveNext())return false;if(!G)return true;if(!gW.IC(C.current,D.current))return false;}}int hash(Iterable<R> B){int A=0;for(R C in B){int D=gW.hash(C);A=(A+D)&KC;A=(A+(A<<10))&KC;A^= (A>>6);}A=(A+(A<<3))&KC;A^= (A>>11);A=(A+(A<<15))&KC;return A;}bool rG(Object A)=>A is Iterable<R>;}class PH<R> implements TC<List<R>>{final TC<R> gW;const PH([TC<R> A=const RF()]):gW=A;bool IC(List<R> A,List<R> B){if(identical(A,B))return true;if(A==null||B==null)return false;int D=A.length;if(D!=B.length)return false;for(int C=0;C<D;C++ ){if(!gW.IC(A[C],B[C]))return false;}return true;}int hash(List<R> C){int A=0;for(int B=0;B<C.length;B++ ){int D=gW.hash(C[B]);A=(A+D)&KC;A=(A+(A<<10))&KC;A^= (A>>6);}A=(A+(A<<3))&KC;A^= (A>>11);A=(A+(A<<15))&KC;return A;}bool rG(Object A)=>A is List<R>;}abstract class HK<R,GG extends Iterable<R>> implements TC<GG>{final TC<R> gW;const HK(this.gW);bool IC(GG D,GG G){if(identical(D,G))return true;if(D==null||G==null)return false;HashMap<R,int> C=new HashMap(equals:gW.IC,hashCode:gW.hash,isValidKey:gW.rG);int I=0;for(var B in D){int A=C[B];if(A==null)A=0;C[B]=A+1;I++ ;}for(var B in G){int A=C[B];if(A==null||A==0)return false;C[B]=A-1;I-- ;}return I==0;}int hash(GG B){int A=0;for(R C in B){int D=gW.hash(C);A=(A+D)&KC;}A=(A+(A<<3))&KC;A^= (A>>11);A=(A+(A<<15))&KC;return A;}}class IK<R> extends HK<R,Iterable<R>>{const IK([TC<R> A=const RF()]):super(A);bool rG(Object A)=>A is Iterable<R>;}class fF extends AI{String get source=>super.source;Uri get d=>L.d;fF(String A,BB B,String C):super(A,B,C);}const int yH=10;const int OR=13;class eD{final Uri vJ;final hW=<int>[0];final Uint32List iW;int get length=>iW.length;int get OE=>hW.length;int jW;eD(String A,{url}):this.cV(A.runes,url:url);eD.cV(Iterable<int> D,{url}):vJ=url is String?Uri.parse(url):url,iW=new Uint32List.fromList(D.toList()){for(var A=0;A<iW.length;A++ ){var B=iW[A];if(B==OR){var C=A+1;if(C>=iW.length||iW[C]!=yH)B=yH;}if(B==yH)hW.add(A+1);}}o L(int B,[int A]){if(A==null)A=length-1;return new mC(this,B,A);}JD location(int A)=>new JD.dV(this,A);int oG(int A){if(A<0){throw new RangeError("Offset may not be negative, was ${A}.");}else if(A>length){throw new RangeError("Offset ${A} must not be greater than the number " "of characters in the file, ${length}.");}if(A<hW.first)return -1;if(A>=hW.last)return hW.length-1;if(kW(A))return jW;jW=lW(A)-1;return jW;}bool kW(int A){if(jW==null)return false;if(A<hW[jW])return false;if(jW>=hW.length-1||A<hW[jW+1]){return true;}if(jW>=hW.length-2||A<hW[jW+2]){jW++ ;return true;}return false;}int lW(int D){int A=0;int B=hW.length-1;while(A<B){var C=A+((B-A)~/2);if(hW[C]>D){B=C;}else{A=C+1;}}return B;}int XJ(int A,{int line}){if(A<0){throw new RangeError("Offset may not be negative, was ${A}.");}else if(A>length){throw new RangeError("Offset ${A} must be not be greater than the " "number of characters in the file, ${length}.");}if(line==null){line=oG(A);}else if(line<0){throw new RangeError("Line may not be negative, was ${line}.");}else if(line>=OE){throw new RangeError("Line ${line} must be less than the number of " "lines in the file, ${OE}.");}var B=hW[line];if(B>A){throw new RangeError("Line ${line} comes after offset ${A}.");}return A-B;}int HO(int A,[int B]){if(B==null)B=0;if(A<0){throw new RangeError("Line may not be negative, was ${A}.");}else if(A>=OE){throw new RangeError("Line ${A} must be less than the number of " "lines in the file, ${OE}.");}else if(B<0){throw new RangeError("Column may not be negative, was ${B}.");}var C=hW[A]+B;if(C>length||(A+1<OE&&C>=hW[A+1])){throw new RangeError("Line ${A} doesn't have ${B} columns.");}return C;}String KO(int A,[int B])=>new String.fromCharCodes(iW.sublist(A,B));}class JD extends PR implements mB{final eD file;final int offset;Uri get d=>file.vJ;int get WB=>file.oG(offset);int get k=>file.XJ(offset);JD.dV(this.file,this.offset){if(offset<0){throw new RangeError("Offset may not be negative, was ${offset}.");}else if(offset>file.length){throw new RangeError("Offset ${offset} must not be greater than the number " "of characters in the file, ${file.length}.");}}o YB()=>new mC(file,offset,offset);}abstract class o implements BI{}class mC extends YL implements o{final eD file;final int mW;final int nW;Uri get d=>file.vJ;int get length=>nW-mW;JD get start=>new JD.dV(file,mW);JD get end=>new JD.dV(file,nW);String get tD=>file.KO(mW,nW);String get context=>file.KO(file.HO(start.WB),end.WB==file.OE-1?null:file.HO(end.WB+1));mC(this.file,this.mW,this.nW){if(nW<mW){throw new ArgumentError('End ${nW} must come after start ${mW}.');}else if(nW>file.length){throw new RangeError("End ${nW} must not be greater than the number " "of characters in the file, ${file.length}.");}else if(mW<0){throw new RangeError("Start may not be negative, was ${mW}.");}}int compareTo(BB A){if(A is!mC)return super.compareTo(A);mC B=A;var C=mW.compareTo(B.mW);return C==0?nW.compareTo(B.nW):C;}bool operator==(A){if(A is!o)return super==A;if(A is!mC){return super==A&&d==A.d;}return mW==A.mW&&nW==A.nW&&d==A.d;}int get hashCode=>super.hashCode;o expand(o A){if(d!=A.d){throw new ArgumentError("Source URLs \"${d}\" and " " \"${A.d}\" don't match.");}if(A is mC){var B=uD.min(this.mW,A.mW);var C=uD.max(this.nW,A.nW);return new mC(file,B,C);}else{var B=uD.min(this.mW,A.start.offset);var C=uD.max(this.nW,A.end.offset);return new mC(file,B,C);}}}abstract class gC extends Converter<List<int>,CB>{int get blockSize;const gC();CB convert(List<int> C){var A=new UH();var B=startChunkedConversion(A);B.add(C);B.close();return A.value;}ByteConversionSink startChunkedConversion(Sink<CB> A);}abstract class TK implements Sink<List<int>>{final Sink<CB> oW;final Endianness pW;final Uint32List qW;static const wP=0x1fffffffffffffff;int rW=0;final sW=new gL();bool tW=false;Uint32List get b;TK(this.oW,int A,{Endianness endian: Endianness.BIG_ENDIAN}):pW=endian,qW=new Uint32List(A);void OP(Uint32List A);void add(List<int> A){if(tW)throw new StateError('Hash.add() called after close().');rW+= A.length;sW.addAll(A);uW();}void close(){if(tW)return;tW=true;vW();uW();assert(sW.isEmpty);oW.add(new CB(wW()));oW.close();}Uint8List wW(){if(pW==Endianness.HOST_ENDIAN)return b.buffer.asUint8List();var B=new Uint8List(b.lengthInBytes);var C=B.buffer.asByteData();for(var A=0;A<b.length;A++ ){C.setUint32(A*XE,b[A]);}return B;}void uW(){var D=sW.buffer.asByteData();var C=sW.length~/qW.lengthInBytes;for(var B=0;B<C;B++ ){for(var A=0;A<qW.length;A++ ){qW[A]=D.getUint32(B*qW.lengthInBytes+A*XE,pW);}OP(qW);}sW.removeRange(0,C*qW.lengthInBytes);}void vW(){sW.add(0x80);var C=rW+9;var M=xW(C,qW.lengthInBytes);for(var D=0;D<M-C;D++ ){sW.add(0);}if(rW>wP){throw new UnsupportedError('Hashing is unsupported for messages with more than 2^64 bits.');}var G=rW*zP;var A=sW.length;sW.addAll(new Uint8List(8));var B=sW.buffer.asByteData();var I=G>>32;var J=G&SF;if(pW==Endianness.BIG_ENDIAN){B.setUint32(A,I,pW);B.setUint32(A+XE,J,pW);}else{B.setUint32(A,J,pW);B.setUint32(A+XE,I,pW);}}int xW(int B,int A)=>(B+A-1)&-A;}class VH extends Converter<List<int>,CB>{final gC yW;final Uint8List zW;VH(gC B,List<int> A):yW=B,zW=new Uint8List(B.blockSize){if(A.length>yW.blockSize)A=yW.convert(A).RC;zW.setRange(0,A.length,A);}CB convert(List<int> C){var A=new UH();var B=startChunkedConversion(A);B.add(C);B.close();return A.value;}ByteConversionSink startChunkedConversion(Sink<CB> A)=>new UK(A,yW,zW);}class UK extends ByteConversionSink{final ByteConversionSink AX;final BX=new UH();ByteConversionSink CX;bool DX=false;UK(Sink<CB> G,gC D,List<int> C):AX=D.startChunkedConversion(G){CX=D.startChunkedConversion(BX);var B=new Uint8List(C.length);for(var A=0;A<B.length;A++ ){B[A]=0x5c^C[A];}AX.add(B);for(var A=0;A<B.length;A++ ){B[A]=0x36^C[A];}CX.add(B);}void add(List<int> A){if(DX)throw new StateError('HMAC is closed');CX.add(A);}void addSlice(List<int> A,int B,int C,bool D){if(DX)throw new StateError('HMAC is closed');CX.addSlice(A,B,C,D);}void close(){if(DX)return;DX=true;CX.close();AX.add(BX.value.RC);AX.close();}}abstract class kC extends IB{String get JC;bool iG(String A);bool a(int A);bool PE(String A);int SC(String A,{bool withDrive: false});String JO(String A){var B=SC(A);if(B>0)return A.substring(0,B);return SB(A)?A[0]:null;}bool SB(String A);String MF(Uri A);bool gG(int A,int B)=>A==B;bool jJ(String A,String B)=>A==B;int ZN(int A)=>A;String aN(String A)=>A;}class RR extends DI{}class KD{}class mB implements Comparable<mB>{}abstract class PR implements mB{String get GV{var A=d==null?'unknown source':d;return '${A}:${WB+1}:${k+1}';}int lN(mB A){if(d!=A.d){throw new ArgumentError("Source URLs \"${d}\" and " "\"${A.d}\" don't match.");}return (offset-A.offset).abs();}BB YB()=>new BB(this,this,"");int compareTo(mB A){if(d!=A.d){throw new ArgumentError("Source URLs \"${d}\" and " "\"${A.d}\" don't match.");}return offset-A.offset;}bool operator==(A)=>A is mB&&d==A.d&&offset==A.offset;int get hashCode=>d.hashCode+offset;String toString()=>'<${runtimeType}: ${offset} ${GV}>';}bool xD=false;V iQ=V.kK;V iK=V.mK;class AB{final String name;String get CO=>(parent==null||parent.name=='')?name:'${parent.CO}.${name}';final AB parent;V EX;final Map<String,AB> FX;final Map<String,AB> QD;StreamController<hC> GX;factory AB(String A){return jQ.putIfAbsent(A,()=>new AB.TV(A));}factory AB.TV(String A){if(A.startsWith('.')){throw new ArgumentError("name shouldn't start with a '.'");}int B=A.lastIndexOf('.');AB C;String D;if(B==-1){if(A!='')C=new AB('');D=A;}else{C=new AB(A.substring(0,B));D=A.substring(B+1);}return new AB.UV(D,C,new Map<String,AB>());}AB.UV(this.name,this.parent,Map<String,AB> A):this.FX=A,this.QD=new UnmodifiableMapView(A){if(parent!=null)parent.FX[name]=this;}V get level{if(xD){if(EX!=null)return EX;if(parent!=null)return parent.level;}return iK;}set level(V A){if(xD&&parent!=null){EX=A;}else{if(parent!=null){throw new UnsupportedError('Please set "hierarchicalLoggingEnabled" to true if you want to ' 'change the level on a non-root logger.');}iK=A;}}Stream<hC> get mO=>HX();bool TO(V A)=>(A>=level);void aO(V B,A,[Object J,StackTrace G,Zone I]){Object M;if(TO(B)){if(A is Function){A=A();}String C;if(A is String){C=A;}else{C=A.toString();M=A;}if(G==null&&B>=iQ){G=StackTrace.current;J??= 'autogenerated stack trace for ${B} ${C}';}if(I==null)I=Zone.current;var S=new hC(B,C,CO,J,G,I,M);if(xD){var D=this;while(D!=null){D.IX(S);D=D.parent;}}else{jK.IX(S);}}}void IV(A,[Object B,StackTrace C])=>aO(V.nK,A,B,C);void DP(A,[Object B,StackTrace C])=>aO(V.oK,A,B,C);Stream<hC> HX(){if(xD||parent==null){if(GX==null){GX=new StreamController<hC>.broadcast(sync:true);}return GX.stream;}else{return jK.HX();}}void IX(hC A){if(GX!=null){GX.add(A);}}static final AB jK=new AB('');static final Map<String,AB> jQ=<String,AB>{};}class V implements Comparable<V>{final String name;final int value;const V(this.name,this.value);static const V kQ=const V('ALL',0);static const V kK=const V('OFF',2000);static const V lQ=const V('FINEST',300);static const V mQ=const V('FINER',400);static const V lK=const V('FINE',500);static const V nQ=const V('CONFIG',700);static const V mK=const V('INFO',800);static const V nK=const V('WARNING',900);static const V oK=const V('SEVERE',1000);static const V oQ=const V('SHOUT',1200);static const List<V> pQ=const[kQ,lQ,mQ,lK,nQ,mK,nK,oK,oQ,kK];bool operator==(Object A)=>A is V&&value==A.value;bool operator<(V A)=>value<A.value;bool operator<=(V A)=>value<=A.value;bool operator>(V A)=>value>A.value;bool operator>=(V A)=>value>=A.value;int compareTo(V A)=>value-A.value;int get hashCode=>value;String toString()=>name;}class hC{final V level;final String message;final Object vU;final String cJ;final DateTime LP;final int AP;static int qQ=0;final Object error;final StackTrace stackTrace;final Zone zone;hC(this.level,this.message,this.cJ,[this.error,this.stackTrace,this.zone,this.vU]):LP=new DateTime.now(),AP=hC.qQ++ ;String toString()=>'[${level.name}] ${cJ}: ${message}';}UB eP(String A,String B,String C,String D,List<String> G,Map<String,String> I,J,Function M,jB S,{bool negatable,bool splitCommas,bool hide: false}){return new UB.NV(A,B,C,D,G,I,J,M,S,negatable:negatable,splitCommas:splitCommas,hide:hide);}class UB{final String name;final String OD;final List<String> EF;final wC;final Function callback;final String ZJ;final String wJ;final Map<String,String> LE;final jB type;final bool negatable;final bool EP;final bool hide;bool get zC=>type==jB.AK;bool get UO=>type==jB.KH;UB.NV(this.name,this.OD,this.ZJ,this.wJ,List<String> A,Map<String,String> B,this.wC,this.callback,jB C,{this.negatable,bool splitCommas,this.hide: false}):this.EF=A==null?null:new UnmodifiableListView(A),this.LE=B==null?null:new UnmodifiableMapView(B),this.type=C,this.EP=splitCommas==null?C==jB.KH:splitCommas{if(name.isEmpty){throw new ArgumentError('Name cannot be empty.');}else if(name.startsWith('-')){throw new ArgumentError('Name ${name} cannot start with "-".');}if(zJ.hasMatch(name)){throw new ArgumentError('Name "${name}" contains invalid characters.');}if(OD!=null){if(OD.length!=1){throw new ArgumentError('Abbreviation must be null or have length 1.');}else if(OD=='-'){throw new ArgumentError('Abbreviation cannot be "-".');}if(zJ.hasMatch(OD)){throw new ArgumentError('Abbreviation is an invalid character.');}}}dynamic IO(A){if(A!=null)return A;if(!UO)return wC;if(wC!=null)return [wC];return [] ;}static final zJ=new RegExp(r'''[ \t\r\n"'\\/]''');}class jB{static const AK=const jB.OV("OptionType.FLAG");static const fP=const jB.OV("OptionType.SINGLE");static const KH=const jB.OV("OptionType.MULTIPLE");final String name;const jB.OV(this.name);}class bD{kC Q;String n;bool SB;List<String> f;List<String> TB;String get VJ=>JX()[1];bool get isAbsolute=>n!=null;factory bD.XV(String A,kC D){var I=D.JO(A);var M=D.SB(A);if(I!=null)A=A.substring(I.length);var J=<String>[] ;var G=<String>[] ;var B=0;if(A.isNotEmpty&&D.a(A.codeUnitAt(0))){G.add(A[0]);B=1;}else{G.add('');}for(var C=B;C<A.length;C++ ){if(D.a(A.codeUnitAt(C))){J.add(A.substring(B,C));G.add(A[C]);B=C+1;}}if(B<A.length){J.add(A.substring(B));G.add('');}return new bD.YV(D,I,M,J,G);}bD.YV(this.Q,this.n,this.SB,this.f,this.TB);String get MJ{var A=this.KU();A.lJ();if(A.f.isEmpty)return n==null?'':n;return A.f.last;}void lJ(){while(!f.isEmpty&&f.last==''){f.removeLast();TB.removeLast();}if(TB.length>0)TB[TB.length-1]='';}void WD({bool canonicalize: false}){var C=0;var A=<String>[] ;for(var B in f){if(B=='.'||B==''){}else if(B=='..'){if(A.length>0){A.removeLast();}else{C++ ;}}else{A.add(canonicalize?Q.aN(B):B);}}if(!isAbsolute){A.insertAll(0,new List.filled(C,'..'));}if(A.length==0&&!isAbsolute){A.add('.');}var D=new List<String>.generate(A.length,(G)=>Q.JC,growable:true);D.insert(0,isAbsolute&&A.length>0&&Q.PE(n)?Q.JC:'');f=A;TB=D;if(n!=null&&Q==IB.cF){if(canonicalize)n=n.toLowerCase();n=n.replaceAll('/','\\');}lJ();}String toString(){var A=new StringBuffer();if(n!=null)A.write(n);for(var B=0;B<f.length;B++ ){A.write(TB[B]);A.write(f[B]);}A.write(TB.last);return A.toString();}List<String> JX(){var A=f.lastWhere((C)=>C!='',orElse:()=>null);if(A==null)return ['',''];if(A=='..')return ['..',''];var B=A.lastIndexOf('.');if(B<=0)return [A,''];return [A.substring(0,B),A.substring(B)];}bD KU()=>new bD.YV(Q,n,SB,new List.from(f),new List.from(TB));}final gP=new RegExp(r'^-([a-zA-Z0-9])$');final hP=new RegExp(r'^-([a-zA-Z0-9]+)(.*)$');final iP=new RegExp(r'^--([a-zA-Z\-_0-9]+)(=(.*))?$');class SE{final String dN;final SE parent;final v cC;final List<String> fB;final eC=<String>[] ;final Map<String,dynamic> ED=<String,dynamic>{};SE(this.dN,this.cC,this.fB,[this.parent,List<String> A]){if(A!=null)this.eC.addAll(A);}String get current=>fB[0];GD QB(){var I=fB.toList();var C=null;while(fB.length>0){if(current=='--'){fB.removeAt(0);break;}var D=cC.RD[current];if(D!=null){tB(eC.isEmpty,'Cannot specify arguments before a command.');var A=fB.removeAt(0);var J=new SE(A,D,fB,this,eC);try {C=J.QB();}on OF catch (G){if(A==null)rethrow;throw new OF(G.message,[A]..addAll(G.RD));}eC.clear();break;}if(pO())continue;if(nO(this))continue;if(gJ())continue;if(!cC.SN)break;eC.add(fB.removeAt(0));}cC.CD.forEach((M,B){if(B.callback==null)return;B.callback(B.IO(ED[M]));});eC.addAll(fB);fB.clear();return dP(cC,ED,dN,C,eC,I);}void tO(UB A){tB(fB.length>0,'Missing argument for "${A.name}".');setOption(ED,A,current);fB.removeAt(0);}bool pO(){var B=gP.firstMatch(current);if(B==null)return false;var A=cC.mG(B[1]);if(A==null){tB(parent!=null,'Could not find an option or flag "-${B[1]}".');return parent.pO();}fB.removeAt(0);if(A.zC){xG(ED,A,true);}else{tO(A);}return true;}bool nO(SE G){var A=hP.firstMatch(current);if(A==null)return false;var B=A[1].substring(0,1);var D=cC.mG(B);if(D==null){tB(parent!=null,'Could not find an option with short name "-${B}".');return parent.nO(G);}else if(!D.zC){var I='${A[1].substring(1)}${A[2]}';setOption(ED,D,I);}else{tB(A[2]=='','Option "-${B}" is a flag and cannot handle value ' '"${A[1].substring(1)}${A[2]}".');for(var C=0;C<A[1].length;C++ ){var B=A[1].substring(C,C+1);G.oO(B);}}fB.removeAt(0);return true;}void oO(String A){var B=cC.mG(A);if(B==null){tB(parent!=null,'Could not find an option with short name "-${A}".');parent.oO(A);return;}tB(B.zC,'Option "-${A}" must be a flag to be in a collapsed "-".');xG(ED,B,true);}bool gJ(){var C=iP.firstMatch(current);if(C==null)return false;var A=C[1];var B=cC.CD[A];if(B!=null){fB.removeAt(0);if(B.zC){tB(C[3]==null,'Flag option "${A}" should not be given a value.');xG(ED,B,true);}else if(C[3]!=null){setOption(ED,B,C[3]);}else{tO(B);}}else if(A.startsWith('no-')){A=A.substring('no-'.length);B=cC.CD[A];if(B==null){tB(parent!=null,'Could not find an option named "${A}".');return parent.gJ();}fB.removeAt(0);tB(B.zC,'Cannot negate non-flag option "${A}".');tB(B.negatable,'Cannot negate option "${A}".');xG(ED,B,false);}else{tB(parent!=null,'Could not find an option named "${A}".');return parent.gJ();}return true;}void tB(bool A,String B){if(!A)throw new OF(B);}void setOption(Map C,UB A,String B){assert(!A.zC);if(!A.UO){KX(A,B);C[A.name]=B;return;}var D=C.putIfAbsent(A.name,()=><String>[] );if(A.EP){for(var G in B.split(",")){KX(A,G);D.add(G);}}else{KX(A,B);D.add(B);}}void xG(Map B,UB A,bool C){assert(A.zC);B[A.name]=C;}void KX(UB A,String B){if(A.EF==null)return;tB(A.EF.contains(B),'"${B}" is not an allowed value for option "${A.name}".');}}abstract class dH{}class rQ implements dH{Random BV=new Random.secure();List<int> cU(int C){var A=new List<int>();for(var B=0;B<C;B++ ){A.add(BV.nextInt(256));}return A;}}class eH{dH yO;gC hash;int LX;int MX;eH({dH saltGenerator,gC hash,int iterations: 1000,int keyLength: 32}){this.yO=saltGenerator==null?new rQ():saltGenerator;this.hash=hash==null?xP:hash;this.LX=iterations;this.MX=keyLength;}String MO(String A,{List<int> salt}){if(salt==null){salt=yO.cU(32);}var B=pK.sQ(salt,A,hash,LX,MX);return pK.tQ(salt,B);}}class pK{static List<int> sQ(List<int> A,String B,gC C,int D,int G){var I=new FL(hash:C);return I.bU(B,new String.fromCharCodes(A),D,G);}static String tQ(List<int> C,List<int> D){var B=BASE64.encode(C);var G=BASE64.encode(D);var I=B.length;var A="${I}";while(A.length<3){A="0${A}";}return "${A}${B}${G}";}}final iC fE=yQ();String get qK{var B=Uri.base;if(B==rK)return gE;rK=B;if(IB.jH==IB.hE){gE=B.resolve('.').toString();return gE;}else{var A=B.toFilePath();var C=A.length-1;assert(A[C]=='/'||A[C]=='\\');gE=C==0?A:A.substring(0,C);return gE;}}Uri rK;String gE;String get uQ=>fE.JC;String vQ(String A)=>fE.MJ(A);String sK(String A)=>fE.VJ(A);String wQ(String A,[String B,String C,String D,String G,String I,String J,String M])=>fE.join(A,B,C,D,G,I,J,M);String xQ(A)=>fE.yU(A);class bF implements Exception{String message;bF(this.message);String toString()=>"PathException: ${message}";}class FL{gC hash;List<int> NX=new List<int>(4);int OX=null;FL({this.hash});List<int> bU(String I,String J,int M,int B){if(B>(2<<31-1)*kJ){throw "derived key too long";}var C=(B/kJ).ceil();var S=B-(C-1)*kJ;var D=<int>[] ;for(var A=1;A<=C; ++A){var G=PX(I,J,M,A);if(A<C){D.addAll(G);}else{D.addAll(G.sublist(0,S));}}return D;}int get kJ{if(OX!=null){return OX;}var A=hash.convert([1,2,3]);var B=A.RC.length;return B;}List<int> PX(String D,String W,int e,int GB){var A=new VH(hash,D.codeUnits);var B=new DR();var C=A.startChunkedConversion(B);C.add(W.codeUnits);QX(C,GB);C.close();B.close();var G=B.dU();var I=G;var J=new List.from(G);for(var M=1;M<e;M++ ){A=new VH(hash,D.codeUnits);var S=A.convert(I);RX(J,S.RC);I=S.RC;}return J;}void QX(ByteConversionSink B,int A){NX[0]=A>>24;NX[1]=A>>16;NX[2]=A>>8;NX[3]=A;B.add(NX);}void RX(List<int> B,List<int> C){for(var A=0;A<B.length;A++ ){B[A]=B[A]^C[A];}}}class DR extends ChunkedConversionSink<CB>{final List<CB> NN=<CB>[] ;void add(CB A){NN.add(A);}void close(){}List<int> dU()=>NN.fold([] ,(A,B)=>A..addAll(B.RC));}class lH extends LC{final Function SX;lH(A,this.SX):super(A);p h(JB B){var A=TX.h(B);if(A.AD){return A.rB(SX(A.value));}else{return A;}}bool VB(N A){return A is lH&&super.VB(A)&&SX==A.SX;}}class GL extends LC{N UX;N VX;GL(A,this.UX,this.VX):super(A);p h(JB C){var A=C;do{A=UX.h(A);}while((A as p).AD);var B=TX.h(A);if(B.oD){return B;}A=B;do{A=VX.h(A);}while((A as p).AD);return A.rB(B.value);}List<N> get QD=>[TX,UX,VX];void replace(N A,N B){super.replace(A,B);if(UX==A){UX=B;}if(VX==A){VX=B;}}}class LL extends LC{LL(A):super(A);p h(JB A){var B=TX.h(A);if(B.AD){var C=A.buffer is String?A.buffer.substring(A.position,B.position):A.buffer.sublist(A.position,B.position);return B.rB(C);}else{return B;}}}class QL extends LC{QL(A):super(A);p h(JB B){var A=TX.h(B);if(A.AD){var C=new cD(A.value,B.buffer,B.position,A.position);return A.rB(C);}else{return A;}}}class zD extends N{final lC WX;final String XX;zD(this.WX,this.XX);p h(JB A){var C=A.buffer;var B=A.position;if(B<C.length&&WX.test(C.codeUnitAt(B))){return A.rB(C[B],B+1);}return A.xC(XX);}String toString()=>'${super.toString()}[${XX}]';bool VB(N A){return A is zD&&super.VB(A)&&WX==A.WX&&XX==A.XX;}}abstract class lC{}class IL implements lC{final lC rO;IL(this.rO);bool test(int A)=>!rO.test(A);}lC GR(Iterable<AE> M){var I=new List.from(M,growable:false);I.sort((C,D){return C.start!=D.start?C.start-D.start:C.stop-D.stop;});var A=new List();for(var B in I){if(A.isEmpty){A.add(B);}else{var J=A.last;if(J.stop+1>=B.start){var S=new AE(J.start,B.stop);A[A.length-1]=S;}else{A.add(B);}}}if(A.length==1){return A[0].start==A[0].stop?new xH(A[0].start):A[0];}else{return new UL(A.length,A.map((G)=>G.start).toList(growable:false) as List<int>,A.map((G)=>G.stop).toList(growable:false) as List<int>);}}N Z(A,[String B]){return new zD(new xH(lE(A)),B!=null?B:'"${A}" expected');}class xH implements lC{final int value;const xH(this.value);bool test(int A)=>identical(this.value,A);}N dF([String A]){return new zD(HR,A!=null?A:'digit expected');}class RL implements lC{const RL();bool test(int A)=>48<=A&&A<=57;}const HR=const RL();N TL(String A,[String B]){return new zD(JR.QB(A).value,B!=null?B:'[${A}] expected');}N IR(){var B=ID().map((A)=>new AE(lE(A),lE(A)));var C=ID().sD(Z('-')).sD(ID()).map((A)=>new AE(lE(A[0]),lE(A[2])));var D=C.KF(B).vG().map((A)=>GR(A as Iterable<AE>));return Z('^').dC().sD(D).map((A)=>A[0]==null?A[1]:new IL(A[1]));}final JR=IR();class UL implements lC{final int length;final List<int> GP;final List<int> HP;UL(this.length,this.GP,this.HP);bool test(int D){var A=0;var B=length;while(A<B){var C=A+((B-A)>>1);var G=GP[C]-D;if(G==0){return true;}else if(G<0){A=C+1;}else{B=C;}}return 0<A&&D<=HP[A-1];}}class AE implements lC{final int start;final int stop;AE(this.start,this.stop);bool test(int A)=>start<=A&&A<=stop;}N KR([String A]){return new zD(LR,A!=null?A:'whitespace expected');}class VL implements lC{const VL();bool test(int A){if(A<256){return A==0x09||A==0x0A||A==0x0B||A==0x0C||A==0x0D||A==0x20||A==0x85||A==0xA0;}else{return A==0x1680||A==0x180E||A==0x2000||A==0x2001||A==0x2002||A==0x2003||A==0x2004||A==0x2005||A==0x2006||A==0x2007||A==0x2008||A==0x2009||A==0x200A||A==0x2028||A==0x2029||A==0x202F||A==0x205F||A==0x3000||A==0xFEFF;}}}const LR=const VL();int lE(A){if(A is num){return A.round();}var B=A.toString();if(B.length!=1){throw new ArgumentError('${B} is not a character');}return B.codeUnitAt(0);}class LC extends N{N TX;LC(this.TX);p h(JB A){return TX.h(A);}List<N> get QD=>[TX];void replace(N A,N B){super.replace(A,B);if(TX==A){TX=B;}}}class oH extends LC{final String XX;oH(A,this.XX):super(A);p h(JB B){var A=TX.h(B);if(A.oD||A.position==A.buffer.length){return A;}return A.xC(XX,A.position);}String toString()=>'${super.toString()}[${XX}]';bool VB(N A){return A is oH&&super.VB(A)&&XX==A.XX;}}class KL extends LC{KL(A):super(A);p h(JB B){var A=TX.h(B);if(A.AD){return B.rB(A.value);}else{return A;}}}class tH extends LC{final String XX;tH(A,this.XX):super(A);p h(JB A){var B=TX.h(A);if(B.oD){return A.rB(null);}else{return A.xC(XX);}}String toString()=>'${super.toString()}[${XX}]';bool VB(N A){return A is tH&&super.VB(A)&&XX==A.XX;}}class vH extends LC{final YX;vH(A,this.YX):super(A);p h(JB A){var B=TX.h(A);if(B.AD){return B;}else{return A.rB(YX);}}bool VB(N A){return A is vH&&super.VB(A)&&YX==A.YX;}}abstract class wH extends N{final List<N> ZX;wH(this.ZX);List<N> get QD=>ZX;void replace(N B,N C){super.replace(B,C);for(var A=0;A<ZX.length;A++ ){if(ZX[A]==B){ZX[A]=C;}}}}class kE extends wH{factory kE(Iterable<N> A){return new kE.ZV(new List.from(A,growable:false));}kE.ZV(List<N> A):super(A);p h(JB C){var A;for(var B=0;B<ZX.length;B++ ){A=ZX[B].h(C);if(A.AD){return A;}}return A;}N KF(N A){return new kE(new List()..addAll(ZX)..add(A));}}class dD extends wH{factory dD(Iterable<N> A){return new dD.aV(new List.from(A,growable:false));}dD.aV(List<N> A):super(A);p h(JB G){var C=G;var D=new List(ZX.length);for(var A=0;A<ZX.length;A++ ){var B=ZX[A].h(C);if(B.oD){return B;}D[A]=B.value;C=B;}return C.rB(D);}N sD(N A){return new dD(new List()..addAll(ZX)..add(A));}}class JB{const JB(this.buffer,this.position);final buffer;final int position;p rB(B,[int A]){return new JL(buffer,A==null?this.position:A,B);}p xC(String B,[int A]){return new qH(buffer,A==null?this.position:A,B);}String toString()=>'Context[${DH()}]';String DH()=>cD.OL(buffer,position);}abstract class p extends JB{const p(A,B):super(A,B);bool get AD=>false;bool get oD=>false;get value;String get message;}class JL extends p{const JL(A,B,this.value):super(A,B);bool get AD=>true;final value;String get message=>null;String toString()=>'Success[${DH()}]: ${value}';}class qH extends p{const qH(A,B,this.message):super(A,B);bool get oD=>true;get value=>throw new ML(this);final String message;String toString()=>'Failure[${DH()}]: ${message}';}class ML extends Error{final qH xC;ML(this.xC);String toString()=>'${xC.message} at ${xC.DH()}';}abstract class sH{const sH();N start();N O(Function A,[B,C,D,G,I,J]){var M=[B,C,D,G,I,J].takeWhile((S)=>S!=null).toList(growable:false);return new UC(A,M);}N FU({Function start: null,List arguments: const[] }){return aX(new UC(start!=null?start:this.start,arguments));}N aX(UC C){var I=new Map();N J(UC C){var A=I[C];if(A==null){var D=[C];A=C.resolve();while(A is UC){if(D.contains(A)){throw new StateError('Recursive references detected: ${D}');}D.add(A);A=A.resolve();}for(var e in D){I[e]=A;}}return A;}var G=[J(C)];var M=new Set.from(G);while(G.isNotEmpty){var S=G.removeLast();for(var B in S.QD){if(B is UC){var W=J(B);S.replace(B,W);B=W;}if(!M.contains(B)){M.add(B);G.add(B);}}}return I[C];}}class SL extends LC{SL(sH A):super(A.FU());}class UC extends N{final Function function;final List arguments;UC(this.function,this.arguments);N resolve()=>Function.apply(function,arguments);bool operator==(A){if(A is!UC||A.function!=function||A.arguments.length!=arguments.length){return false;}for(var B=0;B<arguments.length;B++ ){var C=arguments[B],D=A.arguments[B];if(C is N&&C is!UC&&D is N&&D is!UC){if(!C.SO(D)){return false;}}else{if(C!=D){return false;}}}return true;}int get hashCode=>function.hashCode;p h(JB A)=>throw new UnsupportedError('References cannot be parsed.');}abstract class N{p h(JB A);p QB(A){return h(new JB(A,0));}Iterable UD(B){var A=new List();DU().map((C)=>A.add(C)).sD(ID()).KF(ID()).fC().QB(B);return A;}Iterable qU(B){var A=new List();map((C)=>A.add(C)).KF(ID()).fC().QB(B);return A;}N dC([A])=>new vH(this,A);N fC()=>wG(0,iE);N vG()=>wG(1,iE);N wG(int A,int B){return new HL(this,A,B);}N CH(int A)=>wG(A,A);N sD(N A)=>new dD([this,A]);N operator&(N A)=>this.sD(A);N KF(N A)=>new kE([this,A]);N operator|(N A)=>this.KF(A);N DU()=>new KL(this);N uU([String A])=>new tH(this,A);N lO([String A])=>uU(A).sD(ID()).DD(1);N WJ()=>new LL(this);N sB()=>new QL(this);N trim([N A,N B]){if(A==null)A=KR();if(B==null)B=A;return new GL(this,A,B);}N end([String A='end of input expected']){return new oH(this,A);}N map(Function A)=>new lH(this,A);N DD(int A){return this.map((List B){return B[A<0?B.length+A:A];});}N xU(List<int> C){return this.map((List B){return C.map((A){return B[A<0?B.length+A:A];}).toList();});}N NF(N B,{bool includeSeparators: true,bool optionalSeparatorAtEnd: false}){var D=new dD([B,this]).fC();var I=new dD(optionalSeparatorAtEnd?[this,D,B.dC(B)]:[this,D]);return I.map((List C){var A=new List();A.add(C[0]);for(var G in C[1]){if(includeSeparators){A.add(G[0]);}A.add(G[1]);}if(includeSeparators&&optionalSeparatorAtEnd&&!identical(C[2],B)){A.add(C[2]);}return A;});}bool SO(N B,[Set<N> A]){if(A==null){A=new Set();}if(this==B||A.contains(this)){return true;}A.add(this);return runtimeType==B.runtimeType&&VB(B)&&hU(B,A);}bool VB(N A)=>true;bool hU(N D,Set<N> G){var B=QD,C=D.QD;if(B.length!=C.length){return false;}for(var A=0;A<B.length;A++ ){if(!B[A].SO(C[A],G)){return false;}}return true;}List<N> get QD=>const[] ;void replace(N A,N B){}}N ID([String A='input expected']){return new nH(A);}class nH extends N{final String XX;nH(this.XX);p h(JB A){var B=A.position;var C=A.buffer;return B<C.length?A.rB(C[B],B+1):A.xC(XX);}bool VB(N A){return A is nH&&super.VB(A)&&XX==A.XX;}}N pH(A,[String B]){return PL(1,(C)=>A.indexOf(C)>=0,B!=null?B:'any of ${A} expected');}N jE(String A,[String B]){return PL(A.length,(String C)=>A==C,B!=null?B:'${A} expected');}typedef bool NL(_0);N PL(int A,NL B,String C){return new uH(A,B,C);}class uH extends N{final int bX;final NL WX;final String XX;uH(this.bX,this.WX,this.XX);p h(JB A){final C=A.position;final B=C+bX;if(B<=A.buffer.length){var D=A.buffer is String?A.buffer.substring(C,B):A.buffer.sublist(C,B);if(WX(D)){return A.rB(D,B);}}return A.xC(XX);}String toString()=>'${super.toString()}[${XX}]';bool VB(N A){return A is uH&&super.VB(A)&&bX==A.bX&&WX==A.WX&&XX==A.XX;}}const int iE=-1;abstract class mH extends LC{final int cX;final int dX;mH(N A,this.cX,this.dX):super(A){assert(0<=cX);assert(dX==iE||cX<=dX);}String toString(){var A=dX==iE?'*':dX;return '${super.toString()}[${cX}..${A}]';}bool VB(N A){return A is mH&&super.VB(A)&&cX==A.cX&&dX==A.dX;}}class HL extends mH{HL(N A,int B,int C):super(A,B,C);p h(JB D){var B=D;var C=new List();while(C.length<cX){var A=TX.h(B);if(A.oD){return A;}C.add(A.value);B=A;}while(dX==iE||C.length<dX){var A=TX.h(B);if(A.oD){return B.rB(C);}C.add(A.value);B=A;}return B.rB(C);}}class cD{final value;final buffer;final int start;final int stop;const cD(this.value,this.buffer,this.start,this.stop);int get length=>stop-start;int get WB=>cD.rH(buffer,start)[0];int get k=>cD.rH(buffer,start)[1];String toString()=>'Token[${OL(buffer,start)}]: ${value}';bool operator==(A){return A is cD&&value==A.value&&start==A.start&&stop==A.stop;}int get hashCode=>value.hashCode+start.hashCode+stop.hashCode;static N ER()=>FR;static final N FR=Z('\n')|(Z('\r')&Z('\n').dC());static List<int> rH(String G,int A){var B=1,C=0;for(var D in ER().sB().qU(G)){if(A<D.stop){return [B,A-C+1];}B++ ;C=D.stop;}return [B,A-C+1];}static String OL(A,int B){if(A is String){var C=cD.rH(A,B);return '${C[0]}:${C[1]}';}else{return '${B}';}}}class AL extends kC{AL();final name='posix';final JC='/';final TB=const['/'];final zO=new RegExp(r'/');final kO=new RegExp(r'[^/]$');final wO=new RegExp(r'^/');final vO=null;bool iG(String A)=>A.contains('/');bool a(int A)=>A==CC;bool PE(String A)=>A.isNotEmpty&&!a(A.codeUnitAt(A.length-1));int SC(String A,{bool withDrive: false}){if(A.isNotEmpty&&a(A.codeUnitAt(0)))return 1;return 0;}bool SB(String A)=>false;String MF(Uri A){if(A.scheme==''||A.scheme=='file'){return Uri.decodeComponent(A.path);}throw new ArgumentError("Uri ${A} must have scheme 'file:'.");}}class JK<R> extends Object with ListMixin<R> implements Queue<R>{static const int KK=8;List<R> eX;int fX;int gX;JK([int A]):fX=0,gX=0{if(A==null||A<KK){A=KK;}else if(!LK(A)){A=MK(A);}assert(LK(A));eX=new List<R>(A);}void add(R A){hX(A);}void addAll(Iterable<R> G){if(G is List){var B=G;int A=B.length;int C=this.length;if(C+A>=eX.length){iX(C+A);eX.setRange(C,C+A,B,0);gX+= A;}else{int D=eX.length-gX;if(A<D){eX.setRange(gX,gX+A,B,0);gX+= A;}else{int I=A-D;eX.setRange(gX,gX+D,B,0);eX.setRange(0,I,B,D);gX=I;}}}else{for(R J in G)hX(J);}}String toString()=>IterableBase.iterableToFullString(this,"{","}");void addLast(R A){hX(A);}void addFirst(R A){fX=(fX-1)&(eX.length-1);eX[fX]=A;if(fX==gX)jX();}R removeFirst(){if(fX==gX)throw new StateError("No element");R A=eX[fX];eX[fX]=null;fX=(fX+1)&(eX.length-1);return A;}R removeLast(){if(fX==gX)throw new StateError("No element");gX=(gX-1)&(eX.length-1);R A=eX[gX];eX[gX]=null;return A;}int get length=>(gX-fX)&(eX.length-1);void set length(int A){if(A<0)throw new RangeError("Length ${A} may not be negative.");int C=A-length;if(C>=0){if(eX.length<=A){iX(A);}gX=(gX+C)&(eX.length-1);return;}int B=gX+C;if(B>=0){eX.fillRange(B,gX,null);}else{B+= eX.length;eX.fillRange(0,gX,null);eX.fillRange(B,eX.length,null);}gX=B;}R operator[](int A){if(A<0||A>=length){throw new RangeError("Index ${A} must be in the range [0..${length}).");}return eX[(fX+A)&(eX.length-1)];}void operator[]=(int A,R B){if(A<0||A>=length){throw new RangeError("Index ${A} must be in the range [0..${length}).");}eX[(fX+A)&(eX.length-1)]=B;}static bool LK(int A)=>(A&(A-1))==0;static int MK(int A){assert(A>0);A=(A<<1)-1;for(;;){int B=A&(A-1);if(B==0)return A;A=B;}}void hX(R A){eX[gX]=A;gX=(gX+1)&(eX.length-1);if(fX==gX)jX();}void jX(){List<R> A=new List<R>(eX.length*2);int B=eX.length-fX;A.setRange(0,B,eX,fX);A.setRange(B,B+fX,eX,0);fX=0;gX=eX.length;eX=A;}int kX(List<R> A){assert(A.length>=length);if(fX<=gX){int C=gX-fX;A.setRange(0,C,eX,fX);return C;}else{int B=eX.length-fX;A.setRange(0,B,eX,fX);A.setRange(B,B+gX,eX,0);return gX+B;}}void iX(int A){assert(A>=length);A+= A>>1;int C=MK(A);List<R> B=new List<R>(C);gX=kX(B);eX=B;fX=0;}}abstract class BE<OB,m> implements Map<OB,m>{factory BE()=>new eF();}class eF<OB,m> implements BE<OB,m>{final Map<OB,m> lX;final Map<m,OB> mX;BE<m,OB> nX;eF():this.bV(new HashMap(),new HashMap());eF.bV(this.lX,this.mX);m operator[](Object A)=>lX[A];void operator[]=(OB A,m B){oX(A,B,false);}void replace(OB A,m B){oX(A,B,true);}void addAll(Map<OB,m> A)=>A.forEach((B,C)=>oX(B,C,false));bool containsKey(Object A)=>lX.containsKey(A);bool containsValue(Object A)=>mX.containsKey(A);void forEach(void A(OB key,m value))=>lX.forEach(A);bool get isEmpty=>lX.isEmpty;bool get isNotEmpty=>lX.isNotEmpty;Iterable<OB> get keys=>lX.keys;int get length=>lX.length;Iterable<m> get values=>mX.keys;BE<m,OB> get lU{if(nX==null){nX=new eF.bV(mX,lX);}return nX;}m putIfAbsent(OB A,m C()){var B=lX[A];if(B!=null)return B;if(!lX.containsKey(A))return oX(A,C(),false);return null;}m remove(Object A){mX.remove(lX[A]);return lX.remove(A);}void clear(){lX.clear();mX.clear();}m oX(OB B,m A,bool D){if(B==null)throw new ArgumentError("null key");if(A==null)throw new ArgumentError("null value");var C=lX[B];if(C==A)return A;if(mX.containsKey(A)){if(!D)throw new ArgumentError("Mapping for ${A} exists");lX.remove(mX[A]);}mX.remove(C);lX[B]=A;mX[A]=B;return A;}}Iterable MR(Iterable<Iterable> A)=>A.expand((B)=>B);final xP=new VK.SV();class VK extends gC{final int blockSize=16*XE;VK.SV();ByteConversionSink startChunkedConversion(Sink<CB> A)=>new ByteConversionSink.from(new WK(A));}const List<int> yP=const[0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5,0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5,0xd807aa98,0x12835b01,0x243185be,0x550c7dc3,0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174,0xe49b69c1,0xefbe4786,0x0fc19dc6,0x240ca1cc,0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da,0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7,0xc6e00bf3,0xd5a79147,0x06ca6351,0x14292967,0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13,0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85,0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3,0xd192e819,0xd6990624,0xf40e3585,0x106aa070,0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5,0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3,0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208,0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2];class WK extends TK{final b=new Uint32List(8);final Uint32List pX;WK(Sink<CB> A):pX=new Uint32List(64),super(A,16){b[0]=0x6a09e667;b[1]=0xbb67ae85;b[2]=0x3c6ef372;b[3]=0xa54ff53a;b[4]=0x510e527f;b[5]=0x9b05688c;b[6]=0x1f83d9ab;b[7]=0x5be0cd19;}int qX(int A,int B)=>(B>>A)|((B<<(32-A))&SF);int rX(int A,int B,int C)=>(A&B)^((~A&SF)&C);int sX(int A,int B,int C)=>(A&B)^(A&C)^(B&C);int tX(int A)=>qX(2,A)^qX(13,A)^qX(22,A);int uX(int A)=>qX(6,A)^qX(11,A)^qX(25,A);int vX(int A)=>qX(7,A)^qX(18,A)^(A>>3);int wX(int A)=>qX(17,A)^qX(19,A)^(A>>10);void OP(Uint32List W){assert(W.length==16);for(var A=0;A<16;A++ ){pX[A]=W[A];}for(var A=16;A<64;A++ ){pX[A]=RB(RB(wX(pX[A-2]),pX[A-7]),RB(vX(pX[A-15]),pX[A-16]));}var B=b[0];var D=b[1];var G=b[2];var M=b[3];var C=b[4];var I=b[5];var J=b[6];var S=b[7];for(var A=0;A<64;A++ ){var e=RB(RB(S,uX(C)),RB(rX(C,I,J),RB(yP[A],pX[A])));var GB=RB(tX(B),sX(B,D,G));S=J;J=I;I=C;C=RB(M,e);M=G;G=D;D=B;B=RB(e,GB);}b[0]=RB(B,b[0]);b[1]=RB(D,b[1]);b[2]=RB(G,b[2]);b[3]=RB(M,b[3]);b[4]=RB(C,b[4]);b[5]=RB(I,b[5]);b[6]=RB(J,b[6]);b[7]=RB(S,b[7]);}}abstract class BB implements Comparable<BB>{factory BB(mB A,mB B,String C)=>new zH(A,B,C);}class zH extends YL{final mB start;final mB end;final String tD;zH(this.start,this.end,this.tD){if(end.d!=start.d){throw new ArgumentError("Source URLs \"${start.d}\" and " " \"${end.d}\" don't match.");}else if(end.offset<start.offset){throw new ArgumentError('End ${end} must come after start ${start}.');}else if(tD.length!=start.lN(end)){throw new ArgumentError('Text "${tD}" must be ${start.lN(end)} ' 'characters long.');}}}class XL implements Exception{String get message=>xX;final String xX;BB get L=>yX;final BB yX;XL(this.xX,this.yX);String toString({color}){if(L==null)return message;return "Error on "+L.message(message,color:color);}}class AI extends XL implements FormatException{dynamic get source=>zX;final zX;int get offset=>L==null?null:L.start.offset;AI(String A,BB B,[this.zX]):super(A,B);}abstract class YL implements BB{Uri get d=>start.d;int get length=>end.offset-start.offset;int compareTo(BB A){var B=start.compareTo(A.start);return B==0?end.compareTo(A.end):B;}String message(String C,{color}){var A=new StringBuffer();A.write('line ${start.WB+1}, column ${start.k+1}');if(d!=null)A.write(' of ${xQ(d)}');A.write(': ${C}');var B=this.iU(color:color);if(!B.isEmpty){A.writeln();A.write(B);}return A.toString();}String iU({color}){if(color==true)color=NR;if(color==false)color=null;var C=start.k;var A=new StringBuffer();String B;if(this is BI){var D=(this as BI).context;var G=QR(D,tD,C);if(G!=null&&G>0){A.write(D.substring(0,G));D=D.substring(G);}var M=D.indexOf('\n');B=M==-1?D:D.substring(0,M+1);C=uD.min(C,B.length);}else if(length==0){return "";}else{B=tD.split("\n").first;C=0;}var I=uD.min(C+end.offset-start.offset,B.length);if(color!=null){A.write(B.substring(0,C));A.write(color);A.write(B.substring(C,I));A.write(WL);A.write(B.substring(I));}else{A.write(B);}if(!B.endsWith('\n'))A.write('\n');for(var J=0;J<C;J++ ){if(B.codeUnitAt(J)==DK){A.writeCharCode(DK);}else{A.writeCharCode(jP);}}if(color!=null)A.write(color);A.write('^'*uD.max(I-C,1));if(color!=null)A.write(WL);return A.toString();}bool operator==(A)=>A is BB&&start==A.start&&end==A.end;int get hashCode=>start.hashCode+(31*end.hashCode);String toString()=>'<${runtimeType}: from ${start} to ${end} "${tD}">';}class CE extends DI implements RR{final eD AY;int get WB=>AY.oG(position);int get k=>AY.XJ(position);KD get state=>new bL(this,position);o BY;JD get location=>AY.location(position);o get gB=>location.YB();CE(String A,{sourceUrl,int position}):AY=new eD(A,url:sourceUrl),super(A,sourceUrl:sourceUrl,position:position);factory CE.pV(String string,{sourceUrl,int position})=CI;o ZB(KD B,[KD A]){var C=A==null?position:A.position;return AY.L(B.position,C);}bool UD(Pattern A){if(!super.UD(A)){BY=null;return false;}BY=AY.L(position,NE.end);return true;}void error(String A,{Match match,int position,int length}){cL(string,match,position,length);if(match==null&&position==null&&length==null)match=NE;if(position==null){position=match==null?this.position:match.start;}if(length==null)length=match==null?1:match.end-match.start;var B=AY.L(position,position+length);throw new fF(A,B,string);}}class bL implements KD{final CE CY;final int position;int get WB=>CY.AY.oG(position);int get k=>CY.AY.XJ(position);bL(this.CY,this.position);}class BI extends zH{}final SR=new RegExp("/").pattern=="\\/";class DI{final Uri d;final String string;int get position=>DY;set position(int A){if(A<0||A>string.length){throw new ArgumentError("Invalid position ${A}");}DY=A;}int DY=0;Match get NE=>EY;Match EY;String get eC=>string.substring(position);bool get yC=>position==string.length;DI(this.string,{sourceUrl,int position}):d=sourceUrl is String?Uri.parse(sourceUrl):sourceUrl{if(position!=null)this.position=position;}int U(){if(yC)FY("more input");return string.codeUnitAt(DY++ );}int X([int A]){if(A==null)A=0;var B=position+A;if(B<0||B>=string.length)return null;return string.codeUnitAt(B);}bool FB(Pattern B){var A=UD(B);if(A)DY=EY.end;return A;}void lG(Pattern A,{String name}){if(FB(A))return;if(name==null){if(A is RegExp){var B=A.pattern;if(!SR)B=B.replaceAll("/","\\/");name="/${B}/";}else{name=A.toString().replaceAll("\\","\\\\").replaceAll('"','\\"');name='"${name}"';}}FY(name);}bool UD(Pattern A){EY=A.matchAsPrefix(string,position);return EY!=null;}String substring(int B,[int A]){if(A==null)A=position;return string.substring(B,A);}void error(String A,{Match match,int position,int length}){cL(string,match,position,length);if(match==null&&position==null&&length==null)match=NE;if(position==null){position=match==null?this.position:match.start;}if(length==null)length=match==null?1:match.end-match.start;var B=new eD(string,url:d);var C=B.L(position,position+length);throw new fF(A,C,string);}void FY(String A){error("expected ${A}.",position:this.position,length:0);}}abstract class IB{static final IB AR=new AL();static final IB cF=new CL();static final IB hE=new BL();static final IB jH=BR();static IB BR(){if(Uri.base.scheme!='file')return IB.hE;if(!Uri.base.path.endsWith('/'))return IB.hE;if(new Uri(path:'a/b').toFilePath()=='a\\b')return IB.cF;return IB.AR;}String get name;iC get context=>new iC(style:this);String get JC;String JO(String A);String MF(Uri A);String toString()=>name;}class dL extends SL{dL():super(new XR());}class TR{String encode(Map<String,dynamic> B){var A=new VR();A.UJ(B,name:[] );return A.toString();}}abstract class UR{}typedef void EI<m>(m _0);class VR{static final RegExp WR=new RegExp(r'^[A-Za-z0-9_-]+$');final StringBuffer GY=new StringBuffer();void aJ(){if(GY.isNotEmpty)GY.writeln();}void jU(List<String> B,{bool array: false}){if(B.isNotEmpty){aJ();aJ();GY.write(array?'[[':'[');for(int A=0;A<B.length;A++ ){if(A!=0)GY.write('.');yN(B[A]);}GY.write(array?']]':']');}}uJ(A){while(A is UR)A=A.oV();return A;}void UJ(Map<String,dynamic> I,{List<String> name,bool array: false}){var C={};var D={};I.forEach((B,A){A=uJ(A);if(A is Map){D[B]=A;return;}if(A is Iterable&&A.length>0){A=A.map(uJ);if(A.every((G)=>G is Map)){D[B]=A;return;}}C[B]=A;});if(array||C.isNotEmpty){jU(name,array:array);C.forEach(kU);}D.forEach((B,A){name.add(B);if(A is Map){UJ(A,name:name);}else if(A is Iterable){A.forEach((G){UJ(G,name:name,array:true);});}name.removeLast();});}void kU(String A,B){aJ();yN(A);GY.write(' = ');zN(B);}void yN(String A){if(WR.hasMatch(A)){GY.write(A);}else{xN(A);}}void zN(A){A=uJ(A);EI B=fU(A);if(B==null)throw new HI(A);B(A);}EI fU(A){if(A is num)return UU;if(A is bool)return PU;if(A is DateTime)return QU;if(A is String)return VU;if(A is Iterable)return OU;return null;}void UU(num A){GY.write('${A}');}void PU(bool A){GY.write(A?'true':'false');}void QU(DateTime A){GY.write(A.toIso8601String());}Type HV(Iterable B){if(B.isEmpty)return null;if(identical(1,1.0)&&B.every((A)=>A is num)&&B.any((A)=>A is int)&&B.any((A)=>A is!int)){return num;}return B.map((A)=>A.runtimeType).reduce((C,D){if(C!=D)throw new II(B);return C;});}void OU(Iterable B){var D=HV(B);GY.write('[');for(var A=0;A<B.length;A++ ){var C=B.elementAt(A);if(A!=0)GY.write(', ');zN(C);if(D==num&&C is int)GY.write('.0');}GY.write(']');}EI<String> eU(String A){var C=[DC.MC['"'],DC.MC['\\']];bool B(String D)=>DC.MC.values.where((G)=>!C.contains(G)).any(D.codeUnits.contains);if(A.contains('\n')||A.contains('\r')){if(A.split(new RegExp('\n|\r')).any(B)){return SU;}return TU;}if(A.contains("'")||B(A)){return xN;}return RU;}void VU(String A){var B=eU(A);B(A);}void HY(String A,{String quotes,Iterable<int> esc: const[] ,bool multiline: false}){if(esc.isNotEmpty){A=A.codeUnits.map((int B){if(esc.contains(B)){return '\\${DC.MC.lU[B]}';}return new String.fromCharCode(B);}).join();}if(multiline){if(quotes=='"""')A=A.replaceAll('"""',r'\"\"\"');}else if(A.contains('\n')||A.contains('\r')){throw new gF('Newlines are only allowed in multi-line strings!');}if(!esc.contains(quotes.codeUnitAt(0))&&A.contains(quotes)){throw new gF('"${quotes}" are prohibited in non-basic strings.');}GY.write(quotes);if(multiline)GY.writeln();GY.write(A);GY.write(quotes);}void xN(String A)=>HY(A,quotes:'"',esc:DC.MC.values);void SU(String B)=>HY(B,quotes:'"""',esc:DC.MC.values.where((A)=>A!=DC.MC['"']&&A!=DC.MC['n']&&A!=DC.MC['r']),multiline:true);void RU(String A)=>HY(A,quotes:"'");void TU(String A)=>HY(A,quotes:"'''",multiline:true);String toString()=>GY.toString();}class FI{final String GF;FI(this.GF);bool operator==(A)=>A is FI&&A.GF==GF;int get hashCode=>GF.hashCode;String toString()=>'The escape sequence "${GF}" is invalid!';}class gF{final String IF;gF(this.IF);bool operator==(A)=>A is gF&&A.IF==IF;int get hashCode=>IF.hashCode;String toString()=>IF;}class mE{final String name;mE(this.name);bool operator==(A)=>A is mE&&A.name==name;int get hashCode=>name.hashCode;String toString()=>'Cannot redefine "${name}"!';}class GI{final String name;GI(this.name);bool operator==(A)=>A is GI&&A.name==name;int get hashCode=>name.hashCode;String toString()=>'Cannot define table "${name}"! Parent must be a table!';}class HI{final value;HI(this.value);bool operator==(A)=>A is HI&&A.value==value;int get hashCode=>value.hashCode;String toString()=>'"${value}" cannot be encoded as a TOMl value!';}class II{final Iterable PD;II(this.PD);bool operator==(A)=>A is II&&A.PD==PD;int get hashCode=>PD.hashCode;String toString()=>'The items of "${PD}" must all be of the same type!';}class DC extends sH{static final BE<String,int> MC=new BE()..addAll({'b':0x08,'t':0x09,'n':0x0A,'f':0x0C,'r':0x0D,'"':0x22,r'\':0x5C});start()=>O(TJ).end();sB(A,[bool C=false,bool B]){if(B==null)B=C;if(A is Function)A=O(A);var D=O(TD,C);var G=O(TD,B);return A.WJ().trim(D,G);}TD([bool A=false])=>A?O(TD)|O(BD):O(xJ)|O(LU);xJ()=>Z(' ')|Z('\t');BD()=>Z('\n')|Z('\r')&Z('\n');LU()=>Z('#')&O(BD).lO().fC();value()=>O(jG)|O(nG)|O(qG)|O(eG)|O(JP)|O(PD)|O(pG);N IY({N quotes,N esc,bool multiline: false}){var A=quotes;if(multiline)A=(A&O(oN).dC()).DD(0);var C=quotes;if(!multiline)C|= O(BD);var B=C.lO();if(esc!=null)B=esc|B;return (A&B.fC()&quotes).trim(O(TD)).DD(1).map((List D)=>D.join());}JP()=>O(rU)|O(WN)|O(tU)|O(oU);WN()=>IY(quotes:Z('"'),esc:O(kG));kG()=>Z('\\')&(O(tJ)|O(pJ));tJ()=>Z('u')&O(NO).CH(4).WJ()|Z('U')&O(NO).CH(8).WJ();pJ()=>ID();NO()=>TL('0-9a-fA-F');rU()=>IY(quotes:jE('"""'),esc:O(sU),multiline:true);sU()=>O(yJ)|O(kG);yJ()=>Z('\\')&O(oN).vG()&O(xJ).fC();oN()=>O(xJ).fC()&O(BD);oU()=>IY(quotes:jE("'"));tU()=>IY(quotes:jE("'''"),multiline:true);qG()=>O(sB,JY);JY()=>pH('+-').dC()&(Z('0')|O(iN));iN()=>dF().vG().NF(Z('_'));nG()=>O(sB,KY);KY()=>O(JY)&(O(WU)&O(AO).dC()|O(AO));WU()=>Z('.')&O(iN);AO()=>pH('eE')&O(JY);eG()=>O(sB,LY);LY()=>jE('true')|jE('false');jG()=>O(sB,MY);MY()=>O(YU)&Z('T')&O(ZU);YU()=>O(MU)&Z('-')&O(mD)&Z('-')&O(mD);ZU()=>O(wU)&O(FV);wU()=>O(mD)&Z(':')&O(mD)&Z(':')&O(mD)&(Z('.')&dF().wG(1,6)).dC();FV()=>Z('Z')|O(EV);EV()=>pH('+-')&O(mD)&Z(':')&O(mD);mD()=>dF().CH(2);MU()=>dF().CH(4);PD()=>vC(jG)|vC(nG)|vC(qG)|vC(eG)|vC(JP)|vC(PD)|vC(pG);vC(A)=>O(sB,Z('['),false,true)&O(A).NF(O(sB,Z(','),true),optionalSeparatorAtEnd:true,includeSeparators:false).dC([] )&O(sB,Z(']'),true,false);qJ()=>O(AH).trim(O(TD,true))&O(bJ);AH()=>Z('[')&O(DV)&Z(']');rJ()=>O(sJ).trim(O(TD,true))&O(bJ);sJ()=>Z('[')&O(AH)&Z(']');pG()=>O(sB,Z('{'))&O(sG).NF(sB(Z(',')),optionalSeparatorAtEnd:false,includeSeparators:false).dC([] )&O(sB,Z('}'));key()=>O(sB,EU)|O(AV);EU()=>TL('A-Za-z0-9_-').vG();AV()=>O(WN);DV()=>O(key).NF(Z('.'),includeSeparators:false);sG()=>O(key)&Z('=')&O(value);bJ()=>O(sG).NF(O(BD)&O(TD,true).fC(),includeSeparators:false,optionalSeparatorAtEnd:true).dC([] );TJ()=>O(TD,true).fC()&O(bJ)&(O(qJ)|O(rJ)).fC();}class XR extends DC{kG()=>super.kG().DD(1);pJ()=>super.pJ().map((String A){if(DC.MC.containsKey(A)){return new String.fromCharCode(DC.MC[A]);}throw new FI('\\${A}');});tJ()=>super.tJ().DD(1).map((A)=>new String.fromCharCode(int.parse(A,radix:16)));yJ()=>super.yJ().map((A)=>'');qG()=>super.qG().map((A)=>int.parse(A.replaceAll('_','')));nG()=>super.nG().map((A)=>double.parse(A.replaceAll('_','')));eG()=>super.eG().map((A)=>A=='true');jG()=>super.jG().map(DateTime.parse);vC(A)=>super.vC(A).DD(1);qJ()=>super.qJ().map((List A)=>{'type':'table','parent':A[0].sublist(0,A[0].length-1),'name':A[0].last,'pairs':A[1]});AH()=>super.AH().DD(1);rJ()=>super.rJ().map((List A)=>{'type':'table-array','parent':A[0].sublist(0,A[0].length-1),'name':A[0].last,'pairs':A[1]});sJ()=>super.sJ().DD(1);pG()=>super.pG().DD(1).map((List C){var A={};C.forEach((Map B){A[B['key']]=B['value'];});return A;});sG()=>super.sG().xU([0,2]).map((List A)=>{'key':A[0],'value':A[1]});TJ()=>super.TJ().map((List GB){var J={};var ZD=new Set();void M(String A){if(ZD.contains(A))throw new mE(A);ZD.add(A);}Function QE(Map GH,[String HH])=>(Map G){var A=HH==null?G['key']:'${HH}.${G['key']}';M(A);if(GH.containsKey(G['key']))throw new mE(A);GH[G['key']]=G['value'];};GB[1].forEach(QE(J));GB[2].forEach((Map C){var B=J;var A=[] ;C['parent'].forEach((String I){B=B.putIfAbsent(I,()=>{});if(B is List){I='${I}[${B.length-1}]';B=B.last;}A.add(I);if(B is!Map)throw new GI(A.join('.'));});A.add(C['name']);A=A.join('.');var S;if(C['type']=='table-array'){var W=B.putIfAbsent(C['name'],(){M(A);return [] ;});if(W is Map)throw new mE(A);var KV=W.length;W.add(S={});A='${A}[${KV}]';}else{S=B.putIfAbsent(C['name'],()=>{});}M(A);C['pairs'].forEach(QE(S,A));});e(D){if(D is Map){return new UnmodifiableMapView(new Map.fromIterables(D.keys,D.values.map(e)));}if(D is List){return new UnmodifiableListView(D.map(e));}return D;}return e(J);});}abstract class JI<R> extends ListBase<R>{static const int eL=8;List<R> NY;TypedData get OY=>NY as TypedData;int PY;JI(List<R> A):this.NY=A,this.PY=A.length;int get length=>PY;R operator[](int A){if(A>=length)throw new RangeError.index(A,this);return NY[A];}void operator[]=(int A,R B){if(A>=length)throw new RangeError.index(A,this);NY[A]=B;}void set length(int A){if(A<PY){R D=QY;for(int C=A;C<PY;C++ ){NY[C]=D;}}else if(A>NY.length){List<R> B;if(NY.length==0){B=RY(A);}else{B=SY(A);}B.setRange(0,PY,NY);NY=B;}PY=A;}void TY(R A){if(PY==NY.length)UY(PY);NY[PY++ ]=A;}void add(R A){TY(A);}void addAll(Iterable<R> C,[int A=0,int B]){RangeError.checkNotNegative(A,"start");if(B!=null&&A>B){throw new RangeError.range(B,A,null,"end");}VY(C,A,B);}void insertAll(int D,Iterable<R> G,[int B=0,int A]){RangeError.checkValidIndex(D,this,"index",PY+1);RangeError.checkNotNegative(B,"start");if(A!=null){if(B>A){throw new RangeError.range(A,B,null,"end");}if(B==A)return;}if(D==PY){VY(G,B,A);return;}if(A==null&&G is List){A=G.length;}if(A!=null){WY(D,G,B,A);return;}var C=PY;var I=B;for(var J in G){if(I>0){I-- ;continue;}if(C==NY.length){UY(C);}NY[C++ ]=J;}if(I>0){throw new StateError("Too few elements");}if(A!=null&&C<A){throw new RangeError.range(A,B,C,"end");}KI(NY,D,PY);KI(NY,PY,C);KI(NY,D,C);PY=C;return;}static void KI(List B,int C,int A){A-- ;while(C<A){var D=B[C];var G=B[A];B[A]=D;B[C]=G;C++ ;A-- ;}}void VY(Iterable<R> A,[int B=0,int C]){if(A is List)C??= A.length;if(C!=null){WY(PY,A,B,C);return;}var D=0;for(var G in A){if(D>=B)add(G);D++ ;}if(D<B)throw new StateError("Too few elements");}void WY(int B,Iterable<R> A,int G,int C){if(A is List){C??= A.length;if(G>A.length||C>A.length){throw new StateError("Too few elements");}}else{assert(C!=null);}var D=C-G;var I=PY+D;XY(I);NY.setRange(B+D,PY+D,NY,B);NY.setRange(B,B+D,A,G);PY=I;}void insert(int A,R C){if(A<0||A>PY){throw new RangeError.range(A,0,PY);}if(PY<NY.length){NY.setRange(A+1,PY+1,NY,A);NY[A]=C;PY++ ;return;}List<R> B=SY(null);B.setRange(0,A,NY);B.setRange(A+1,PY+1,NY,A);B[A]=C;PY++ ;NY=B;}void XY(int A){if(A<=NY.length)return;var B=SY(A);B.setRange(0,PY,NY);NY=B;}List<R> SY(int B){int A=NY.length*2;if(B!=null&&A<B){A=B;}else if(A<eL){A=eL;}return RY(A);}void UY(int A){NY=SY(null)..setRange(0,A,NY);}void setRange(int B,int A,Iterable<R> C,[int D=0]){if(A>PY)throw new RangeError.range(A,0,PY);YY(B,A,C,D);}void YY(int B,int C,Iterable<R> A,int D){if(A is JI<R>){NY.setRange(B,C,A.NY,D);}else{NY.setRange(B,C,A,D);}}int get elementSizeInBytes=>OY.elementSizeInBytes;int get lengthInBytes=>PY*OY.elementSizeInBytes;int get offsetInBytes=>OY.offsetInBytes;ByteBuffer get buffer=>OY.buffer;R get QY;List<R> RY(int A);}abstract class fL extends JI<int>{fL(List<int> A):super(A);int get QY=>0;}class gL extends fL{gL([int A=0]):super(new Uint8List(A));Uint8List RY(int A)=>new Uint8List(A);}abstract class sP<OB,m> implements Map<OB,m>{static VE(){throw new UnsupportedError("Cannot modify an unmodifiable Map");}void operator[]=(OB A,m B)=>VE();m putIfAbsent(OB A,m B())=>VE();void addAll(Map<OB,m> A)=>VE();m remove(Object A)=>VE();void clear()=>VE();}class BL extends kC{BL();final name='url';final JC='/';final TB=const['/'];final zO=new RegExp(r'/');final kO=new RegExp(r"(^[a-zA-Z][-+.a-zA-Z\d]*://|[^/])$");final wO=new RegExp(r"[a-zA-Z][-+.a-zA-Z\d]*://[^/]*");final vO=new RegExp(r"^/");bool iG(String A)=>A.contains('/');bool a(int A)=>A==CC;bool PE(String A){if(A.isEmpty)return false;if(!a(A.codeUnitAt(A.length-1)))return true;return A.endsWith("://")&&SC(A)==A.length;}int SC(String A,{bool withDrive: false}){if(A.isEmpty)return 0;if(a(A.codeUnitAt(0)))return 1;for(var C=0;C<A.length;C++ ){var D=A.codeUnitAt(C);if(a(D))return 0;if(D==fH){if(C==0)return 0;if(A.startsWith('//',C+1))C+= 3;var B=A.indexOf('/',C);if(B<=0)return A.length;if(!withDrive||A.length<B+3)return B;if(!A.startsWith('file://'))return B;if(!EL(A,B+1))return B;return A.length==B+3?B+3:B+4;}}return 0;}bool SB(String A)=>A.isNotEmpty&&a(A.codeUnitAt(0));String MF(Uri A)=>A.toString();}class BK{static const UE=3;final List fJ;StringBuffer buffer;int SD=0;List<int> hG;int tG=0;int JF=0;BK(this.fJ);String aU(){buffer=new StringBuffer();HU();for(var B in fJ){if(B is String){if(buffer.isNotEmpty)buffer.write("\n\n");buffer.write(B);JF=1;continue;}var A=B as UB;if(A.hide)continue;write(0,EO(A));write(1,GO(A));if(A.ZJ!=null)write(2,A.ZJ);if(A.LE!=null){var C=A.LE.keys.toList(growable:false);C.sort();BD();for(var D in C){write(1,FO(D));write(2,A.LE[D]);}BD();}else if(A.EF!=null){write(2,GU(A));}else if(A.wC!=null){if(A.zC&&A.wC==true){write(2,'(defaults to on)');}else if(!A.zC){write(2,'(defaults to "${A.wC}")');}}if(tG>1)BD();}return buffer.toString();}String EO(UB A){if(A.OD!=null){return '-${A.OD}, ';}else{return '';}}String GO(UB A){var B;if(A.negatable){B='--[no-]${A.name}';}else{B='--${A.name}';}if(A.wJ!=null)B+= "=<${A.wJ}>";return B;}String FO(String A){return '      [${A}]';}void HU(){int C=0;int A=0;for(var B in fJ){if(B is!UB)continue;if(B.hide)continue;C=uD.max(C,EO(B).length);A=uD.max(A,GO(B).length);if(B.LE!=null){for(var D in B.LE.keys){A=uD.max(A,FO(D).length);}}}A+= 4;hG=[C,A];}void BD(){JF++ ;SD=0;tG=0;}void write(int B,String C){var A=C.split('\n');while(A.length>0&&A[0].trim()==''){A.removeRange(0,1);}while(A.length>0&&A[A.length-1].trim()==''){A.removeLast();}for(var D in A){JV(B,D);}}void JV(int A,String B){while(JF>0){buffer.write('\n');JF-- ;}while(SD!=A){if(SD<UE-1){buffer.write(CK('',hG[SD]));}else{buffer.write('\n');}SD=(SD+1)%UE;}if(A<hG.length){buffer.write(CK(B,hG[A]));}else{buffer.write(B);}SD=(SD+1)%UE;if(A==UE-1)JF++ ;if(A==UE-1){tG++ ;}else{tG=0;}}String GU(UB B){var A=new StringBuffer();A.write('[');bool C=true;for(var D in B.EF){if(!C)A.write(', ');A.write(D);if(D==B.wC){A.write(' (default)');}C=false;}A.write(']');return A.toString();}}String CK(String B,int C){final A=new StringBuffer();A.write(B);while(A.length<C){A.write(' ');}return A.toString();}eH IH;main(List<String> e)async{LQ();var C=new v(allowTrailingOptions:true);C.KE("add",ZP());C.KE("remove",JH());C.KE("change-password",aP());C.KE("grant-superuser",JH());C.KE("deny-superuser",JH());C.KE("list",bP());var J=new IQ();await J.pU();IH=new eH(keyLength:J.iJ,iterations:J.hJ);G({String message,String command}){if(message!=null){print("ERROR: ${message}");}print("Usage: users ${command!=null?command:"<command>"} [options]");if(command==null){print("Commands: ${C.RD.keys.join(", ")}");if(C.FH.isNotEmpty){print(C.FH);}}else{var S=C.RD[command];if(S.FH.isNotEmpty){print(S.FH);}}exit(1);}GD A;try {A=C.QB(e);}on FormatException catch (ZD){var S;if(e.isNotEmpty&&C.RD.keys.contains(e[0])){S=e[0];}G(command:S,message:ZD.message);}if(J.ME!="file"&&J.ME!="json"&&J.ME!="proxy"){print("ERROR: Your current authentication system does not support this tool.");exit(1);}var D=new cP();await D.load();if(A.MB==null){G();}if(A.MB.name=="add"){var B=A.MB["username"];var QE=A.MB["email"];var M=A.MB["password"];var GH=A.MB["superuser"];if(B==null){G(command:"add",message:"Username not specified");}if(M==null){if(J.ME!='proxy'){G(command:"add",message:"Password not specified");}M="empty";}D.CU(B,QE,M,superuser:GH);await D.XD();print("User '${B}' was successfully created.");}else if(A.MB.name=="change-password"){var B=A.MB["username"];var M=A.MB["password"];if(B==null){G(command:"change-password",message:"Username not specified");}if(M==null){G(command:"change-password",message:"Password not specified");}D.IU(B,M);await D.XD();print("Password change for user '${B}' was sucessful.");}else if(A.MB.name=="remove"){var B=A.MB["username"];if(B==null){G(command:"remove",message:"Username not specified");}D.CV(B);await D.XD();print("User '${B}' successfully removed.");}else if(A.MB.name=="grant-superuser"){var B=A.MB["username"];if(B==null){G(command:"grant-superuser",message:"Username not specified");}D.gU(B);await D.XD();print("User '${B}' was sucessfully granted superuser.");}else if(A.MB.name=="deny-superuser"){var B=A.MB["username"];if(B==null){G(command:"deny-superuser",message:"Username not specified");}D.NU(B);await D.XD();print("User '${B}' was successfully denied superuser.");}else if(A.MB.name=="list"){var GB=A.MB["view"];List<RE> W=D.YD;if(A.MB["superusers"]){W=W.where((HH)=>HH.FD).toList();}if(GB=="simple"){for(var I in W){print("- ${I.username}");}}else if(GB=="detailed"){for(var I in W){print("- Username: ${I.username}");if(I.FF!=null)print("- Email: ${I.FF}");print("- Password Hash: ${I.password}");print("- Superuser: ${I.FD}");if(W.last!=I){print("");}}}else{G(command:"list",message:"Unknown View: ${GB}");}}else{print("Unknown Command: ${A.MB.name}");exit(1);}}v ZP(){var A=new v();A.lD("username",abbr:"u",help:"Username",valueHelp:"username");A.lD("email",abbr:"e",help:"E-Mail address",valueHelp:"email");A.lD("password",abbr:"p",help:"Password",valueHelp:"password");A.ON("superuser",abbr:"s",defaultsTo:false,help:"SuperUser");return A;}v JH(){var A=new v();A.lD("username",abbr:"u",help:"Username",valueHelp:"username");return A;}v aP(){var A=new v();A.lD("username",abbr:"u",help:"Username",valueHelp:"username");A.lD("password",abbr:"p",help:"Password",valueHelp:"password");return A;}v bP(){var A=new v();A.lD("view",abbr:"v",help:"View",valueHelp:"name",allowed:["simple","detailed"],defaultsTo:"detailed");A.ON("superusers",abbr:"s",help:"Show Superusers Only",negatable:false);return A;}class cP{List<RE> YD=[] ;load()async{var B=new File("users.json");if(!(await B.exists())){print("ERROR: users.json does not exist.");exit(1);}var C=bK.convert(await B.readAsString());YD=C.map((A){return new RE()..username=A["username"]..FF=A["email"]..password=A["password"]..FD=A.containsKey("superuser")?A["superuser"]:false..jO=A.containsKey("metadata")?A["metadata"]:{};}).toList();}CU(String A,String C,String B,{bool superuser: false}){if(YD.any((D)=>D.username==A)){print("ERROR: User '${A}' already exists.");exit(1);}B=IH.MO(B);YD.add(new RE()..username=A..FF=C..password=B..FD=superuser);}CV(String A){var B=ZY(A);YD.remove(B);}IU(String A,String B){var C=ZY(A);C.password=IH.MO(B);}RE ZY(String A){if(!YD.any((B)=>B.username==A)){print("ERROR: User '${A}' does not exist.");exit(1);}return YD.firstWhere((B)=>B.username==A);}gU(String A){var B=ZY(A);if(B.FD){print("ERROR: User '${A}' is already a superuser.");exit(1);}B.FD=true;}NU(String A){var B=ZY(A);if(!B.FD){print("ERROR: User '${A}' is not a superuser.");exit(1);}B.FD=false;}XD()async{var B=new File("users.json");if(!(await B.exists())){await B.create(recursive:true);}await B.writeAsString(aK.convert(YD.map((A){return {"username":A.username,"superuser":A.FD,"metadata":A.jO,"email":A.FF,"password":A.password};}).toList())+"\n");}}class RE{String username;String password;String FF;bool FD;Map<String,dynamic> jO;}const SF=0xFFFFFFFF;const zP=8;const XE=4;int RB(int A,int B)=>(A+B)&SF;bool DL(int A)=>(A>=tK&&A<=uK)||(A>=vK&&A<=wK);bool EL(String A,int B){if(A.length<B+2)return false;if(!DL(A.codeUnitAt(B)))return false;if(A.codeUnitAt(B+1)!=fH)return false;if(A.length==B+2)return true;return A.codeUnitAt(B+2)==CC;}int QR(String B,String C,int D){var J=C=='';var A=B.indexOf(C);while(A!=-1){var G=B.lastIndexOf('\n',A)+1;var I=A-G;if(D==I||(J&&D==I+1)){return G;}A=B.indexOf(C,A+1);}return null;}void cL(String C,Match D,int A,int B){if(D!=null&&(A!=null||B!=null)){throw new ArgumentError("Can't pass both match and position/length.");}if(A!=null){if(A<0){throw new RangeError("position must be greater than or equal to 0.");}else if(A>C.length){throw new RangeError("position must be less than or equal to the " "string length.");}}if(B!=null&&B<0){throw new RangeError("length must be greater than or equal to 0.");}if(A!=null&&B!=null&&A+B>C.length){throw new RangeError("position plus length must not go beyond the end of " "the string.");}}const kH=0x20;class CL extends kC{CL();final name='windows';final JC='\\';final TB=const['/','\\'];final zO=new RegExp(r'[/\\]');final kO=new RegExp(r'[^/\\]$');final wO=new RegExp(r'^(\\\\[^\\]+\\[^\\/]+|[a-zA-Z]:[/\\])');final vO=new RegExp(r"^[/\\](?![/\\])");bool iG(String A)=>A.contains('/');bool a(int A)=>A==CC||A==yD;bool PE(String A){if(A.isEmpty)return false;return !a(A.codeUnitAt(A.length-1));}int SC(String A,{bool withDrive: false}){if(A.isEmpty)return 0;if(A.codeUnitAt(0)==CC)return 1;if(A.codeUnitAt(0)==yD){if(A.length<2||A.codeUnitAt(1)!=yD)return 1;var B=A.indexOf('\\',2);if(B>0){B=A.indexOf('\\',B+1);if(B>0)return B;}return A.length;}if(A.length<3)return 0;if(!DL(A.codeUnitAt(0)))return 0;if(A.codeUnitAt(1)!=fH)return 0;if(!a(A.codeUnitAt(2)))return 0;return 3;}bool SB(String A)=>SC(A)==1;String MF(Uri B){if(B.scheme!=''&&B.scheme!='file'){throw new ArgumentError("Uri ${B} must have scheme 'file:'.");}var A=B.path;if(B.host==''){if(A.length>=3&&A.startsWith('/')&&EL(A,1)){A=A.replaceFirst("/","");}}else{A='\\\\${B.host}${A}';}return Uri.decodeComponent(A.replaceAll("/","\\"));}bool gG(int A,int B){if(A==B)return true;if(A==CC)return B==yD;if(A==yD)return B==CC;if(A^B!=kH)return false;var C=A|kH;return C>=vK&&C<=wK;}bool jJ(String A,String C){if(identical(A,C))return true;if(A.length!=C.length)return false;for(var B=0;B<A.length;B++ ){if(!gG(A.codeUnitAt(B),C.codeUnitAt(B))){return false;}}return true;}int ZN(int A){if(A==CC)return yD;if(A<tK)return A;if(A>uK)return A;return A|kH;}String aN(String A)=>A.toLowerCase();}VS(String A,{sourceUrl})=>WS(A,sourceUrl:sourceUrl).value;DB WS(String A,{sourceUrl})=>XS(A,sourceUrl:sourceUrl).QJ;HE XS(String D,{sourceUrl}){var A=new pL(D,sourceUrl:sourceUrl);var B=A.load();if(B==null){return new HE.iV(new KB.mV(null,A.L),A.L,null,const[] );}var C=A.load();if(C!=null){throw new Y("Only expected one document.",C.L);}return B;}Map YR()=>new HashMap(equals:ZR,hashCode:hL);bool ZR(A,B)=>new aR().IC(A,B);class aR{final aY=[] ;final bY=[] ;bool IC(A,B){if(A is KB)A=A.value;if(B is KB)B=B.value;for(var C=0;C<aY.length;C++ ){var D=identical(A,aY[C]);var G=identical(B,bY[C]);if(D&&G)return true;if(D||G)return false;}aY.add(A);bY.add(B);try {if(A is List&&B is List){return cY(A,B);}else if(A is Map&&B is Map){return dY(A,B);}else if(A is num&&B is num){return eY(A,B);}else{return A==B;}}finally {aY.removeLast();bY.removeLast();}}bool cY(List B,List C){if(B.length!=C.length)return false;for(var A=0;A<B.length;A++ ){if(!IC(B[A],C[A]))return false;}return true;}bool dY(Map A,Map B){if(A.length!=B.length)return false;for(var C in A.keys){if(!B.containsKey(C))return false;if(!IC(A[C],B[C]))return false;}return true;}bool eY(num A,num B){if(A.isNaN&&B.isNaN)return true;return A==B;}}int hL(G){var B=[] ;C(A){if(B.any((I)=>identical(I,A)))return -1;B.add(A);try {if(A is Map){var D=const IK();return D.hash(A.keys.map(C))^D.hash(A.values.map(C));}else if(A is Iterable){return const GK().hash(A.map(hL));}else if(A is KB){return A.value.hashCode;}else{return A.hashCode;}}finally {B.removeLast();}}return C(G);}class g{final c type;final o L;g(this.type,this.L);String toString()=>type.toString();}class hF implements g{get type=>c.bR;final o L;final uE versionDirective;final List<FC> BH;final bool isImplicit;hF(this.L,{this.versionDirective,List<FC> tagDirectives,this.isImplicit: true}):BH=tagDirectives==null?[] :tagDirectives;String toString()=>"DOCUMENT_START";}class iF implements g{get type=>c.kL;final o L;final bool isImplicit;iF(this.L,{this.isImplicit: true});String toString()=>"DOCUMENT_END";}class LI implements g{get type=>c.lL;final o L;final String name;LI(this.L,this.name);String toString()=>"ALIAS ${name}";}abstract class MI implements g{String get anchor;String get tag;String toString(){var A=new StringBuffer('${type}');if(anchor!=null)A.write(" &${anchor}");if(tag!=null)A.write(" ${tag}");return A.toString();}}class EC extends MI{get type=>c.mL;final o L;final String anchor;final String tag;final String value;final NB Q;EC(this.L,this.value,this.Q,{this.anchor,this.tag});String toString()=>"${super.toString()} \"${value}\"";}class nE extends MI{get type=>c.nL;final o L;final String anchor;final String tag;final nB Q;nE(this.L,this.Q,{this.anchor,this.tag});}class oE extends MI{get type=>c.oL;final o L;final String anchor;final String tag;final nB Q;oE(this.L,this.Q,{this.anchor,this.tag});}class c{static const iL=const c.eV("STREAM_START");static const jL=const c.eV("STREAM_END");static const bR=const c.eV("DOCUMENT_START");static const kL=const c.eV("DOCUMENT_END");static const lL=const c.eV("ALIAS");static const mL=const c.eV("SCALAR");static const nL=const c.eV("SEQUENCE_START");static const jF=const c.eV("SEQUENCE_END");static const oL=const c.eV("MAPPING_START");static const kF=const c.eV("MAPPING_END");final String name;const c.eV(this.name);String toString()=>name;}class Y extends AI{Y(String A,BB B):super(A,B);}class pL{final NI fY;final gY=new Map<String,DB>();o get L=>hY;o hY;pL(String B,{sourceUrl}):fY=new NI(B,sourceUrl:sourceUrl){var A=fY.QB();hY=A.L;assert(A.type==c.iL);}HE load(){if(fY.yC)return null;var A=fY.QB();if(A.type==c.jL){hY=hY.expand(A.L);return null;}var B=iY(A);hY=hY.expand(B.L);gY.clear();return B;}HE iY(hF A){var C=jY(fY.QB());var B=fY.QB() as iF;assert(B.type==c.kL);return new HE.iV(C,A.L.expand(B.L),A.versionDirective,A.BH,startImplicit:A.isImplicit,endImplicit:B.isImplicit);}DB jY(g A){switch (A.type){case c.lL:return kY(A);case c.mL:return lY(A);case c.nL:return mY(A);case c.oL:return nY(A);default:throw "Unreachable";}}void oY(String A,DB B){if(A==null)return;gY[A]=B;}DB kY(LI A){var B=gY[A.name];if(B!=null)return B;throw new Y("Undefined alias.",A.L);}DB lY(EC A){var B;if(A.tag=="!"){B=new KB.lV(A.value,A);}else if(A.tag!=null){B=pY(A);}else{B=qY(A);}oY(A.anchor,B);return B;}DB mY(nE A){if(A.tag!="!"&&A.tag!=null&&A.tag!="tag:yaml.org,2002:seq"){throw new Y("Invalid tag for sequence.",A.L);}var D=<DB>[] ;var C=new QM.kV(D,A.L,A.Q);oY(A.anchor,C);var B=fY.QB();while(B.type!=c.jF){D.add(jY(B));B=fY.QB();}RM(C,A.L.expand(B.L));return C;}DB nY(oE A){if(A.tag!="!"&&A.tag!=null&&A.tag!="tag:yaml.org,2002:map"){throw new Y("Invalid tag for mapping.",A.L);}var D=YR();var C=new PM.jV(D,A.L,A.Q);oY(A.anchor,C);var B=fY.QB();while(B.type!=c.kF){var G=jY(B);var I=jY(fY.QB());D[G]=I;B=fY.QB();}RM(C,A.L.expand(B.L));return C;}KB pY(EC A){switch (A.tag){case "tag:yaml.org,2002:null":var B=rY(A);if(B!=null)return B;throw new Y("Invalid null scalar.",A.L);case "tag:yaml.org,2002:bool":var B=sY(A);if(B!=null)return B;throw new Y("Invalid bool scalar.",A.L);case "tag:yaml.org,2002:int":var B=tY(A,allowFloat:false);if(B!=null)return B;throw new Y("Invalid int scalar.",A.L);case "tag:yaml.org,2002:float":var B=tY(A,allowInt:false);if(B!=null)return B;throw new Y("Invalid float scalar.",A.L);case "tag:yaml.org,2002:str":return new KB.lV(A.value,A);default:throw new Y('Undefined tag: ${A.tag}.',A.L);}}KB qY(EC A)=>uY(A)??new KB.lV(A.value,A);KB uY(EC A){var B=A.value.length;if(B==0)return new KB.lV(null,A);var C=A.value.codeUnitAt(0);switch (C){case PF:case MH:case NH:return tY(A);case nP:case lP:return B==4?rY(A):null;case pP:case mP:return B==4?sY(A):null;case FK:case kP:return B==5?sY(A):null;case rP:return B==1?new KB.lV(null,A):null;default:if(C>=HD&&C<=QF)return tY(A);return null;}}KB rY(EC A){switch (A.value){case "":case "null":case "Null":case "NULL":case "~":return new KB.lV(null,A);default:return null;}}KB sY(EC A){switch (A.value){case "true":case "True":case "TRUE":return new KB.lV(true,A);case "false":case "False":case "FALSE":return new KB.lV(false,A);default:return null;}}DB tY(EC A,{bool allowInt: true,bool allowFloat: true}){var B=vY(A.value,allowInt:allowInt,allowFloat:allowFloat);return B==null?null:new KB.lV(B,A);}num vY(String A,{bool allowInt: true,bool allowFloat: true}){assert(allowInt||allowFloat);var B=A.codeUnitAt(0);var G=A.length;if(allowInt&&G==1){var I=B-HD;return I>=0&&I<=9?I:null;}var C=A.codeUnitAt(1);if(allowInt&&B==HD){if(C==qP)return int.parse(A,onError:(D)=>null);if(C==oP){var M=A.substring(2);return int.parse(M,radix:8,onError:(D)=>null);}}if((B>=HD&&B<=QF)||((B==MH||B==NH)&&C>=HD&&C<=QF)){var J=null;if(allowInt){J=int.parse(A,radix:10,onError:(D)=>null);}if(allowFloat)J??= double.parse(A,(D)=>null);return J;}if(!allowFloat)return null;if((B==PF&&C>=HD&&C<=QF)||(B==NH||B==MH)&&C==PF){if(G==5){switch (A){case "+.inf":case "+.Inf":case "+.INF":return double.INFINITY;case "-.inf":case "-.Inf":case "-.INF":return -double.INFINITY;}}return double.parse(A,(D)=>null);}if(G==4&&B==PF){switch (A){case ".inf":case ".Inf":case ".INF":return double.INFINITY;case ".nan":case ".NaN":case ".NAN":return double.NAN;}}return null;}}class NI{final WI wY;final xY=new List<P>();var yY=P.qL;final zY=new Map<String,FC>();bool get yC=>yY==P.zL;NI(String A,{sourceUrl}):wY=new WI(A,sourceUrl:sourceUrl);g QB(){try {if(yC)throw new StateError("No more events.");var B=AZ();return B;}on fF catch (A){throw new Y(A.message,A.L);}}g AZ(){switch (yY){case P.qL:return BZ();case P.OI:return CZ();case P.rL:return DZ();case P.QI:return EZ();case P.sL:return FZ(block:true);case P.cR:return FZ(block:true,indentlessSequence:true);case P.dR:return FZ();case P.tL:wY.FB();return GZ();case P.RI:return GZ();case P.lF:return HZ();case P.uL:wY.FB();return IZ();case P.mF:return IZ();case P.nF:return JZ();case P.vL:return KZ(first:true);case P.SI:return KZ();case P.wL:return LZ();case P.TI:return MZ();case P.UI:return NZ();case P.xL:return OZ(first:true);case P.oF:return OZ();case P.VI:return PZ();case P.yL:return PZ(empty:true);default:throw "Unreachable";}}g BZ(){var A=wY.FB();assert(A.type==K.JM);yY=P.OI;return new g(c.iL,A.L);}g CZ(){var A=wY.XB();while(A.type==K.EG){A=wY.pB();}if(A.type!=K.BG&&A.type!=K.CG&&A.type!=K.DG&&A.type!=K.sE){QZ();xY.add(P.QI);yY=P.sL;return new hF(A.L.start.YB());}if(A.type==K.sE){yY=P.zL;wY.FB();return new g(c.jL,A.L);}var C=A.L;var B=QZ();var D=B.first;var G=B.last;A=wY.XB();if(A.type!=K.DG){throw new Y("Expected document start.",A.L);}xY.add(P.QI);yY=P.rL;wY.FB();return new hF(C.expand(A.L),versionDirective:D,tagDirectives:G,isImplicit:false);}g DZ(){var A=wY.XB();switch (A.type){case K.BG:case K.CG:case K.DG:case K.EG:case K.sE:yY=xY.removeLast();return RZ(A.L.start);default:return FZ(block:true);}}g EZ(){zY.clear();yY=P.OI;var A=wY.XB();if(A.type==K.EG){wY.FB();return new iF(A.L,isImplicit:false);}else{return new iF(A.L.start.YB(),isImplicit:true);}}g FZ({bool block: false,bool indentlessSequence: false}){var A=wY.XB();if(A is lI){wY.FB();yY=xY.removeLast();return new LI(A.L,A.name);}var D;var G;var B=A.L.start.YB();I(A){D=A.name;B=B.expand(A.L);return wY.pB();}J(A){G=A;B=B.expand(A.L);return wY.pB();}if(A is zF){A=I(A);if(A is AG)A=J(A);}else if(A is AG){A=J(A);if(A is zF)A=I(A);}var C;if(G!=null){if(G.qB==null){C=G.zG;}else{var M=zY[G.qB];if(M==null){throw new Y("Undefined tag handle.",G.L);}C=M.rD+G.zG;}}if(indentlessSequence&&A.type==K.GE){yY=P.lF;return new nE(B.expand(A.L),nB.hI,anchor:D,tag:C);}if(A is DE){if(C==null&&A.Q!=NB.yF)C="!";yY=xY.removeLast();wY.FB();return new EC(B.expand(A.L),A.value,A.Q,anchor:D,tag:C);}if(A.type==K.LM){yY=P.vL;return new nE(B.expand(A.L),nB.iI,anchor:D,tag:C);}if(A.type==K.MM){yY=P.xL;return new oE(B.expand(A.L),nB.iI,anchor:D,tag:C);}if(block&&A.type==K.KM){yY=P.tL;return new nE(B.expand(A.L),nB.hI,anchor:D,tag:C);}if(block&&A.type==K.FG){yY=P.uL;return new oE(B.expand(A.L),nB.hI,anchor:D,tag:C);}if(D!=null||C!=null){yY=xY.removeLast();return new EC(B,'',NB.yF,anchor:D,tag:C);}throw new Y("Expected node content.",B);}g GZ(){var A=wY.XB();if(A.type==K.GE){A=wY.pB();if(A.type==K.GE||A.type==K.gD){yY=P.RI;return RZ(A.L.end);}else{xY.add(P.RI);return FZ(block:true);}}if(A.type==K.gD){wY.FB();yY=xY.removeLast();return new g(c.jF,A.L);}throw new Y("While parsing a block collection, expected '-'.",A.L.start.YB());}g HZ(){var A=wY.XB();if(A.type!=K.GE){yY=xY.removeLast();return new g(c.jF,A.L.start.YB());}var B=A.L.start;A=wY.pB();if(A.type==K.GE||A.type==K.oC||A.type==K.YC||A.type==K.gD){yY=P.lF;return RZ(B);}else{xY.add(P.lF);return FZ(block:true);}}g IZ(){var A=wY.XB();if(A.type==K.oC){var B=A.L.start;A=wY.pB();if(A.type==K.oC||A.type==K.YC||A.type==K.gD){yY=P.nF;return RZ(B);}else{xY.add(P.nF);return FZ(block:true,indentlessSequence:true);}}if(A.type==K.YC){yY=P.nF;return RZ(A.L.start);}if(A.type==K.gD){wY.FB();yY=xY.removeLast();return new g(c.kF,A.L);}throw new Y("Expected a key while parsing a block mapping.",A.L.start.YB());}g JZ(){var A=wY.XB();if(A.type!=K.YC){yY=P.mF;return RZ(A.L.start);}var B=A.L.start;A=wY.pB();if(A.type==K.oC||A.type==K.YC||A.type==K.gD){yY=P.mF;return RZ(B);}else{xY.add(P.mF);return FZ(block:true,indentlessSequence:true);}}g KZ({bool first: false}){if(first)wY.FB();var A=wY.XB();if(A.type!=K.EE){if(!first){if(A.type!=K.hD){throw new Y("While parsing a flow sequence, expected ',' or ']'.",A.L.start.YB());}A=wY.pB();}if(A.type==K.oC){yY=P.wL;wY.FB();return new oE(A.L,nB.iI);}else if(A.type!=K.EE){xY.add(P.SI);return FZ();}}wY.FB();yY=xY.removeLast();return new g(c.jF,A.L);}g LZ(){var A=wY.XB();if(A.type==K.YC||A.type==K.hD||A.type==K.EE){var B=A.L.start;yY=P.TI;return RZ(B);}else{xY.add(P.TI);return FZ();}}g MZ(){var A=wY.XB();if(A.type==K.YC){A=wY.pB();if(A.type!=K.hD&&A.type!=K.EE){xY.add(P.UI);return FZ();}}yY=P.UI;return RZ(A.L.start);}g NZ(){yY=P.SI;return new g(c.kF,wY.XB().L.start.YB());}g OZ({bool first: false}){if(first)wY.FB();var A=wY.XB();if(A.type!=K.FE){if(!first){if(A.type!=K.hD){throw new Y("While parsing a flow mapping, expected ',' or '}'.",A.L.start.YB());}A=wY.pB();}if(A.type==K.oC){A=wY.pB();if(A.type!=K.YC&&A.type!=K.hD&&A.type!=K.FE){xY.add(P.VI);return FZ();}else{yY=P.VI;return RZ(A.L.start);}}else if(A.type!=K.FE){xY.add(P.yL);return FZ();}}wY.FB();yY=xY.removeLast();return new g(c.kF,A.L);}g PZ({bool empty: false}){var A=wY.XB();if(empty){yY=P.oF;return RZ(A.L.start);}if(A.type==K.YC){A=wY.pB();if(A.type!=K.hD&&A.type!=K.FE){xY.add(P.oF);return FZ();}}yY=P.oF;return RZ(A.L.start);}g RZ(mB A)=>new EC(A.YB(),'',NB.yF);tE<uE,List<FC>> QZ(){var A=wY.XB();var B;var C=<FC>[] ;while(A.type==K.BG||A.type==K.CG){if(A is jI){if(B!=null){throw new Y("Duplicate %YAML directive.",A.L);}if(A.pD!=1||A.VD==0){throw new Y("Incompatible YAML document. This parser only supports YAML 1.1 " "and 1.2.",A.L);}else if(A.VD>2){OM("Warning: this parser only supports YAML 1.1 and 1.2.",A.L);}B=new uE(A.pD,A.VD);}else if(A is kI){var D=new FC(A.qB,A.rD);SZ(D,A.L);C.add(D);}A=wY.pB();}SZ(new FC("!","!"),A.L.start.YB(),allowDuplicates:true);SZ(new FC("!!","tag:yaml.org,2002:"),A.L.start.YB(),allowDuplicates:true);return new tE(B,C);}void SZ(FC A,o B,{bool allowDuplicates: false}){if(zY.containsKey(A.qB)){if(allowDuplicates)return;throw new Y("Duplicate %TAG directive.",B);}zY[A.qB]=A;}}class P{static const qL=const P("STREAM_START");static const OI=const P("DOCUMENT_START");static const rL=const P("DOCUMENT_CONTENT");static const QI=const P("DOCUMENT_END");static const sL=const P("BLOCK_NODE");static const cR=const P("BLOCK_NODE_OR_INDENTLESS_SEQUENCE");static const dR=const P("FLOW_NODE");static const tL=const P("BLOCK_SEQUENCE_FIRST_ENTRY");static const RI=const P("BLOCK_SEQUENCE_ENTRY");static const lF=const P("INDENTLESS_SEQUENCE_ENTRY");static const uL=const P("BLOCK_MAPPING_FIRST_KEY");static const mF=const P("BLOCK_MAPPING_KEY");static const nF=const P("BLOCK_MAPPING_VALUE");static const vL=const P("FLOW_SEQUENCE_FIRST_ENTRY");static const SI=const P("FLOW_SEQUENCE_ENTRY");static const wL=const P("FLOW_SEQUENCE_ENTRY_MAPPING_KEY");static const TI=const P("FLOW_SEQUENCE_ENTRY_MAPPING_VALUE");static const UI=const P("FLOW_SEQUENCE_ENTRY_MAPPING_END");static const xL=const P("FLOW_MAPPING_FIRST_KEY");static const oF=const P("FLOW_MAPPING_KEY");static const VI=const P("FLOW_MAPPING_VALUE");static const yL=const P("FLOW_MAPPING_EMPTY_VALUE");static const zL=const P("END");final String name;const P(this.name);String toString()=>name;}class WI{static const VC=0x9;static const WC=0xA;static const XC=0xD;static const NC=0x20;static const eR=0x24;static const fR=0x28;static const gR=0x29;static const pE=0x2B;static const qE=0x2C;static const pF=0x2D;static const hR=0x2E;static const XI=0x3F;static const qF=0x3A;static const iR=0x3B;static const jR=0x3D;static const rF=0x5B;static const rE=0x5D;static const YI=0x7B;static const sF=0x7D;static const ZI=0x23;static const AM=0x26;static const BM=0x2A;static const CM=0x21;static const kR=0x7C;static const lR=0x3C;static const mR=0x3E;static const fD=0x27;static const tF=0x22;static const uF=0x25;static const aI=0x40;static const DM=0x60;static const nR=0x7E;static const oR=0x0;static const pR=0x7;static const qR=0x8;static const rR=0xB;static const sR=0xC;static const tR=0x1B;static const EM=0x2F;static const bI=0x5C;static const uR=0x5F;static const vF=0x85;static const vR=0xA0;static const wR=0x2028;static const xR=0x2029;static const cI=0xFEFF;static const nC=0x30;static const wF=0x39;static const xF=0x61;static const yR=0x62;static const zR=0x65;static const FM=0x66;static const AS=0x6E;static const BS=0x72;static const CS=0x74;static const DS=0x75;static const ES=0x76;static const FS=0x78;static const GS=0x7A;static const dI=0x41;static const GM=0x46;static const HS=0x4C;static const IS=0x4E;static const JS=0x50;static const KS=0x55;static const LS=0x5A;final CE TZ;var UZ=false;var VZ=false;final WZ=new JK<l>();var XZ=0;var YZ=false;final ZZ=<int>[-1];var aZ=true;final bZ=<eI>[null];int get cZ=>ZZ.last;bool get dZ=>bZ.length==1;bool get eZ=>TZ.yC||fZ;bool get fZ=>gZ(0);bool get hZ=>iZ(0);bool get jZ=>kZ(0);bool get lZ{var A=TZ.X();if(A==null)return false;switch (A){case pF:case iR:case EM:case qF:case aI:case AM:case jR:case pE:case eR:case hR:case nR:case XI:case BM:case fD:case fR:case gR:case uF:return true;default:return (A>=nC&&A<=wF)||(A>=xF&&A<=GS)||(A>=dI&&A<=LS);}}bool get mZ{if(!nZ)return false;switch (TZ.X()){case qE:case rF:case rE:case YI:case sF:return false;default:return true;}}bool get oZ{var A=TZ.X();return A!=null&&(A>=nC&&A<=wF);}bool get pZ{var A=TZ.X();if(A==null)return false;return (A>=nC&&A<=wF)||(A>=xF&&A<=FM)||(A>=dI&&A<=GM);}bool get qZ=>rZ(0);bool get sZ{var A=TZ.X();if(A==null)return false;switch (A){case WC:case XC:case cI:return false;case VC:case vF:return true;default:return (A>=0x00020&&A<=0x00007E)||(A>=0x000A0&&A<=0x00D7FF)||(A>=0x0E000&&A<=0x00FFFD)||(A>=0x10000&&A<=0x10FFFF);}}bool get nZ{var A=TZ.X();if(A==null)return false;switch (A){case WC:case XC:case cI:case NC:return false;case vF:return true;default:return (A>=0x00020&&A<=0x00007E)||(A>=0x000A0&&A<=0x00D7FF)||(A>=0x0E000&&A<=0x00FFFD)||(A>=0x10000&&A<=0x10FFFF);}}bool get tZ{return TZ.k==0&&iZ(3)&&(TZ.UD('---')||TZ.UD('...'));}WI(String A,{sourceUrl}):TZ=new CE.pV(A,sourceUrl:sourceUrl);l FB(){if(VZ)throw new StateError("Out of tokens.");if(!YZ)uZ();var A=WZ.removeFirst();YZ=false;XZ++ ;VZ=A is l&&A.type==K.sE;return A;}l pB(){FB();return XB();}l XB(){if(VZ)return null;if(!YZ)uZ();return WZ.first;}void uZ(){while(true){if(WZ.isNotEmpty){vZ();if(!bZ.any((A)=>A!=null&&A.EH==XZ)){break;}}wZ();}YZ=true;}void wZ(){if(!UZ){xZ();return;}yZ();vZ();zZ(TZ.k);if(TZ.yC){Aa();return;}if(TZ.k==0){if(TZ.X()==uF){Ba();return;}if(iZ(3)){if(TZ.UD('---')){Ca(K.DG);return;}if(TZ.UD('...')){Ca(K.EG);return;}}}switch (TZ.X()){case rF:Da(K.LM);return;case YI:Da(K.MM);return;case rE:Ea(K.EE);return;case sF:Ea(K.FE);return;case qE:Fa();return;case BM:Ga(anchor:false);return;case AM:Ga(anchor:true);return;case CM:Ha();return;case fD:Ia(singleQuote:true);return;case tF:Ia(singleQuote:false);return;case kR:if(!dZ)Ja();Ka(literal:true);return;case mR:if(!dZ)Ja();Ka(literal:false);return;case uF:case aI:case DM:Ja();return;case pF:if(rZ(1)){La();}else{Ma();}return;case XI:if(rZ(1)){La();}else{Na();}return;case qF:if(!dZ&&WZ.isNotEmpty){var A=WZ.last;if(A.type==K.EE||A.type==K.FE||(A.type==K.NM&&(A as DE).Q.mU)){Oa();return;}}if(rZ(1)){La();}else{Oa();}return;default:if(!sZ)Ja();La();return;}throw 'Inaccessible';}void Ja()=>TZ.error("Unexpected character.",length:1);void vZ(){for(var A=0;A<bZ.length;A++ ){var B=bZ[A];if(B==null)continue;if(!dZ)continue;if(B.WB==TZ.WB)continue;if(B.mJ){throw new Y("Expected ':'.",TZ.gB);}bZ[A]=null;}}void Pa(){var A=dZ&&cZ==TZ.k;assert(aZ||!A);if(!aZ)return;Qa();bZ[bZ.length-1]=new eI(XZ+WZ.length,TZ.WB,TZ.k,TZ.location,required:A);}void Qa(){var A=bZ.last;if(A!=null&&A.mJ){throw new Y("Could not find expected ':' for simple key.",A.location.YB());}bZ[bZ.length-1]=null;}void Ra(){bZ.add(null);}void Sa(){if(dZ)return;bZ.removeLast();}void Ta(int A,K C,mB D,{int tokenNumber}){if(!dZ)return;if(cZ!=-1&&cZ>=A)return;ZZ.add(A);var B=new l(C,D.YB());if(tokenNumber==null){WZ.add(B);}else{WZ.insert(tokenNumber-XZ,B);}}void zZ(int A){if(!dZ)return;while(cZ>A){WZ.add(new l(K.gD,TZ.gB));ZZ.removeLast();}}void Ua()=>zZ(-1);void xZ(){UZ=true;WZ.add(new l(K.JM,TZ.gB));}void Aa(){Ua();Qa();aZ=false;WZ.add(new l(K.sE,TZ.gB));}void Ba(){Ua();Qa();aZ=false;var A=Va();if(A!=null)WZ.add(A);}void Ca(K A){Ua();Qa();aZ=false;var B=TZ.state;TZ.U();TZ.U();TZ.U();WZ.add(new l(A,TZ.ZB(B)));}void Da(K A){Pa();Ra();aZ=true;Wa(A);}void Ea(K A){Qa();Sa();aZ=false;Wa(A);}void Fa(){Qa();aZ=true;Wa(K.hD);}void Ma(){if(dZ){if(!aZ){throw new Y("Block sequence entries are not allowed here.",TZ.gB);}Ta(TZ.k,K.KM,TZ.location);}else{}Qa();aZ=true;Wa(K.GE);}void Na(){if(dZ){if(!aZ){throw new Y("Mapping keys are not allowed here.",TZ.gB);}Ta(TZ.k,K.FG,TZ.location);}aZ=dZ;Wa(K.oC);}void Oa(){var A=bZ.last;if(A!=null){WZ.insert(A.EH-XZ,new l(K.oC,A.location.YB()));Ta(A.k,K.FG,A.location,tokenNumber:A.EH);bZ[bZ.length-1]=null;aZ=false;}else if(dZ){if(!aZ){throw new Y("Mapping values are not allowed here. Did you miss a colon " "earlier?",TZ.gB);}Ta(TZ.k,K.FG,TZ.location);aZ=true;}else if(aZ){aZ=false;Wa(K.oC);}Wa(K.YC);}void Wa(K A){var B=TZ.state;TZ.U();WZ.add(new l(A,TZ.ZB(B)));}void Ga({bool anchor: true}){Pa();aZ=false;WZ.add(Xa(anchor:anchor));}void Ha(){Pa();aZ=false;WZ.add(Ya());}void Ka({bool literal: false}){Qa();aZ=true;WZ.add(Za(literal:literal));}void Ia({bool singleQuote: false}){Pa();aZ=false;WZ.add(aa(singleQuote:singleQuote));}void La(){Pa();aZ=false;WZ.add(ba());}void yZ(){var A=false;while(true){if(TZ.k==0)TZ.FB("\uFEFF");while(TZ.X()==NC||((!dZ||!A)&&TZ.X()==VC)){TZ.U();}if(TZ.X()==VC){TZ.error("Tab characters are not allowed as indentation.",length:1);}ca();if(fZ){da();if(dZ)aZ=true;A=true;}else{break;}}}l Va(){var A=TZ.state;TZ.U();var B;var C=ea();if(C=="YAML"){B=fa(A);}else if(C=="TAG"){B=ga(A);}else{OM("Warning: unknown directive.",TZ.ZB(A));while(!eZ){TZ.U();}return null;}ha();ca();if(!eZ){throw new Y("Expected comment or line break after directive.",TZ.ZB(A));}da();return B;}String ea(){var B=TZ.position;while(nZ){TZ.U();}var A=TZ.substring(B);if(A.isEmpty){throw new Y("Expected directive name.",TZ.gB);}else if(!hZ){throw new Y("Unexpected character in directive name.",TZ.gB);}return A;}l fa(KD A){ha();var B=ia();TZ.lG('.');var C=ia();return new jI(TZ.ZB(A),B,C);}int ia(){var B=TZ.position;while(oZ){TZ.U();}var A=TZ.substring(B);if(A.isEmpty){throw new Y("Expected version number.",TZ.gB);}return int.parse(A);}l ga(KD A){ha();var B=ja(directive:true);if(!jZ){throw new Y("Expected whitespace.",TZ.gB);}ha();var C=ka();if(!hZ){throw new Y("Expected whitespace.",TZ.gB);}return new kI(TZ.ZB(A),B,C);}l Xa({bool anchor: true}){var C=TZ.state;TZ.U();var D=TZ.position;while(mZ){TZ.U();}var B=TZ.substring(D);var A=TZ.X();if(B.isEmpty||(!hZ&&A!=XI&&A!=qF&&A!=qE&&A!=rE&&A!=sF&&A!=uF&&A!=aI&&A!=DM)){throw new Y("Expected alphanumeric character.",TZ.gB);}if(anchor){return new zF(TZ.ZB(C),B);}else{return new lI(TZ.ZB(C),B);}}l Ya(){var A;var B;var C=TZ.state;if(TZ.X(1)==lR){TZ.U();TZ.U();A='';B=ka();TZ.lG('>');}else{A=ja();if(A.length>1&&A.startsWith('!')&&A.endsWith('!')){B=ka(flowSeparators:false);}else{B=ka(head:A,flowSeparators:false);if(B.isEmpty){A=null;B='!';}else{A='!';}}}return new AG(TZ.ZB(C),A,B);}String ja({bool directive: false}){TZ.lG('!');var A=new StringBuffer('!');var B=TZ.position;while(lZ){TZ.U();}A.write(TZ.substring(B));if(TZ.X()==CM){A.writeCharCode(TZ.U());}else{if(directive&&A.toString()!='!')TZ.lG('!');}return A.toString();}String ka({String head,bool flowSeparators: true}){var B=head==null?0:head.length;var C=new StringBuffer();if(B>1)C.write(head.substring(1));var D=TZ.position;var A=TZ.X();while(lZ||(flowSeparators&&(A==qE||A==rF||A==rE))){TZ.U();A=TZ.X();}return Uri.decodeFull(TZ.substring(D));}l Za({bool literal: false}){var S=TZ.state;TZ.U();var J=OC.MS;var D=0;var A=TZ.X();if(A==pE||A==pF){J=A==pE?OC.gI:OC.fI;TZ.U();if(oZ){if(TZ.X()==nC){throw new Y("0 may not be used as an indentation indicator.",TZ.ZB(S));}D=TZ.U()-nC;}}else if(oZ){if(TZ.X()==nC){throw new Y("0 may not be used as an indentation indicator.",TZ.ZB(S));}D=TZ.U()-nC;A=TZ.X();if(A==pE||A==pF){J=A==pE?OC.gI:OC.fI;TZ.U();}}ha();ca();if(!eZ){throw new Y("Expected comment or line break.",TZ.gB);}da();var C=0;if(D!=0){C=cZ>=0?cZ+D:D;}var G=la(C);C=G.first;var M=G.last;var B=new StringBuffer();var I='';var W=false;var e=false;var GB=TZ.state;while(TZ.k==C&&!TZ.yC){if(tZ)break;e=jZ;if(!literal&&I.isNotEmpty&&!W&&!e){if(M.isEmpty)B.writeCharCode(NC);}else{B.write(I);}I='';B.write(M);W=jZ;var ZD=TZ.position;while(!eZ){TZ.U();}B.write(TZ.substring(ZD));GB=TZ.state;if(!TZ.yC)I=ma();var G=la(C);C=G.first;M=G.last;}if(J!=OC.fI)B.write(I);if(J==OC.gI)B.write(M);return new DE(TZ.ZB(S,GB),B.toString(),literal?NB.OS:NB.PS);}tE<int,String> la(int A){var B=0;var C=new StringBuffer();while(true){while((A==0||TZ.k<A)&&TZ.X()==NC){TZ.U();}if(TZ.k>B)B=TZ.k;if(!fZ)break;C.write(ma());}if(A==0){A=B;if(A<cZ+1)A=cZ+1;}return new tE(A,C.toString());}l aa({bool singleQuote: false}){var e=TZ.state;var A=new StringBuffer();TZ.U();while(true){if(tZ){TZ.error("Unexpected document indicator.");}if(TZ.yC){throw new Y("Unexpected end of file.",TZ.gB);}var D=false;while(!hZ){var G=TZ.X();if(singleQuote&&G==fD&&TZ.X(1)==fD){TZ.U();TZ.U();A.writeCharCode(fD);}else if(G==(singleQuote?fD:tF)){break;}else if(!singleQuote&&G==bI&&gZ(1)){TZ.U();da();D=true;break;}else if(!singleQuote&&G==bI){var J=TZ.state;var B=null;switch (TZ.X(1)){case nC:A.writeCharCode(oR);break;case xF:A.writeCharCode(pR);break;case yR:A.writeCharCode(qR);break;case CS:case VC:A.writeCharCode(VC);break;case AS:A.writeCharCode(WC);break;case ES:A.writeCharCode(rR);break;case FM:A.writeCharCode(sR);break;case BS:A.writeCharCode(XC);break;case zR:A.writeCharCode(tR);break;case NC:case tF:case EM:case bI:A.writeCharCode(TZ.X(1));break;case IS:A.writeCharCode(vF);break;case uR:A.writeCharCode(vR);break;case HS:A.writeCharCode(wR);break;case JS:A.writeCharCode(xR);break;case FS:B=2;break;case DS:B=4;break;case KS:B=8;break;default:throw new Y("Unknown escape character.",TZ.ZB(J));}TZ.U();TZ.U();if(B!=null){var C=0;for(var S=0;S<B;S++ ){if(!pZ){TZ.U();throw new Y("Expected ${B}-digit hexidecimal number.",TZ.ZB(J));}C=(C<<4)+na(TZ.U());}if((C>=0xD800&&C<=0xDFFF)||C>0x10FFFF){throw new Y("Invalid Unicode character escape code.",TZ.ZB(J));}A.writeCharCode(C);}}else{A.writeCharCode(TZ.U());}}if(TZ.X()==(singleQuote?fD:tF)){break;}var I=new StringBuffer();var W='';var M=new StringBuffer();while(jZ||fZ){if(jZ){if(!D){I.writeCharCode(TZ.U());}else{TZ.U();}}else{if(!D){I.clear();W=ma();D=true;}else{M.write(ma());}}}if(D){if(W.isNotEmpty&&M.isEmpty){A.writeCharCode(NC);}else{A.write(M);}}else{A.write(I);I.clear();}}TZ.U();return new DE(TZ.ZB(e),A.toString(),singleQuote?NB.HM:NB.IM);}l ba(){var J=TZ.state;var G=TZ.state;var B=new StringBuffer();var A='';var C='';var D=new StringBuffer();var I=cZ+1;while(true){if(tZ)break;if(TZ.X()==ZI)break;if(qZ){if(A.isNotEmpty){if(C.isEmpty){B.writeCharCode(NC);}else{B.write(C);}A='';C='';}else{B.write(D);D.clear();}}var M=TZ.position;while(qZ){TZ.U();}B.write(TZ.substring(M));G=TZ.state;if(!jZ&&!fZ)break;while(jZ||fZ){if(jZ){if(A.isNotEmpty&&TZ.k<I&&TZ.X()==VC){TZ.error("Expected a space but found a tab.",length:1);}if(A.isEmpty){D.writeCharCode(TZ.U());}else{TZ.U();}}else{if(A.isEmpty){A=ma();D.clear();}else{C=ma();}}}if(dZ&&TZ.k<I)break;}if(A.isNotEmpty)aZ=true;return new DE(TZ.ZB(J,G),B.toString(),NB.yF);}void da(){var A=TZ.X();if(A!=XC&&A!=WC)return;TZ.U();if(A==XC&&TZ.X()==WC)TZ.U();}String ma(){var A=TZ.X();if(A!=XC&&A!=WC){throw new Y("Expected newline.",TZ.gB);}TZ.U();if(A==XC&&TZ.X()==WC)TZ.U();return "\n";}bool kZ(int B){var A=TZ.X(B);return A==NC||A==VC;}bool gZ(int B){var A=TZ.X(B);return A==XC||A==WC;}bool iZ(int B){var A=TZ.X(B);return A==null||A==NC||A==VC||A==XC||A==WC;}bool rZ(int A){switch (TZ.X(A)){case qF:return oa(A+1);case ZI:var B=TZ.X(A-1);return B!=NC&&B!=VC;default:return oa(A);}}bool oa(int B){var A=TZ.X(B);switch (A){case qE:case rF:case rE:case YI:case sF:return dZ;case NC:case VC:case WC:case XC:case cI:return false;case vF:return true;default:return A!=null&&((A>=0x00020&&A<=0x00007E)||(A>=0x000A0&&A<=0x00D7FF)||(A>=0x0E000&&A<=0x00FFFD)||(A>=0x10000&&A<=0x10FFFF));}}int na(int A){if(A<=wF)return A-nC;if(A<=GM)return 10+A-dI;return 10+A-xF;}void ha(){while(jZ){TZ.U();}}void ca(){if(TZ.X()!=ZI)return;while(!eZ){TZ.U();}}}class eI{final int EH;final mB location;final int WB;final int k;final bool mJ;eI(this.EH,this.WB,this.k,this.location,{bool required}):mJ=required;}class OC{static const fI=const OC("STRIP");static const MS=const OC("CLIP");static const gI=const OC("KEEP");final String name;const OC(this.name);String toString()=>name;}class NB{static const NS=const NB.fV("ANY");static const yF=const NB.fV("PLAIN");static const OS=const NB.fV("LITERAL");static const PS=const NB.fV("FOLDED");static const HM=const NB.fV("SINGLE_QUOTED");static const IM=const NB.fV("DOUBLE_QUOTED");final String name;bool get mU=>this==HM||this==IM;const NB.fV(this.name);String toString()=>name;}class nB{static const hI=const nB.gV("BLOCK");static const iI=const nB.gV("FLOW");final String name;const nB.gV(this.name);String toString()=>name;}class l{final K type;final o L;l(this.type,this.L);String toString()=>type.toString();}class jI implements l{get type=>K.BG;final o L;final int pD;final int VD;jI(this.L,this.pD,this.VD);String toString()=>"VERSION_DIRECTIVE ${pD}.${VD}";}class kI implements l{get type=>K.CG;final o L;final String qB;final String rD;kI(this.L,this.qB,this.rD);String toString()=>"TAG_DIRECTIVE ${qB} ${rD}";}class zF implements l{get type=>K.RS;final o L;final String name;zF(this.L,this.name);String toString()=>"ANCHOR ${name}";}class lI implements l{get type=>K.QS;final o L;final String name;lI(this.L,this.name);String toString()=>"ALIAS ${name}";}class AG implements l{get type=>K.SS;final o L;final String qB;final String zG;AG(this.L,this.qB,this.zG);String toString()=>"TAG ${qB} ${zG}";}class DE implements l{get type=>K.NM;final o L;final String value;final NB Q;DE(this.L,this.value,this.Q);String toString()=>"SCALAR ${Q} \"${value}\"";}class K{static const JM=const K.hV("STREAM_START");static const sE=const K.hV("STREAM_END");static const BG=const K.hV("VERSION_DIRECTIVE");static const CG=const K.hV("TAG_DIRECTIVE");static const DG=const K.hV("DOCUMENT_START");static const EG=const K.hV("DOCUMENT_END");static const KM=const K.hV("BLOCK_SEQUENCE_START");static const FG=const K.hV("BLOCK_MAPPING_START");static const gD=const K.hV("BLOCK_END");static const LM=const K.hV("FLOW_SEQUENCE_START");static const EE=const K.hV("FLOW_SEQUENCE_END");static const MM=const K.hV("FLOW_MAPPING_START");static const FE=const K.hV("FLOW_MAPPING_END");static const GE=const K.hV("BLOCK_ENTRY");static const hD=const K.hV("FLOW_ENTRY");static const oC=const K.hV("KEY");static const YC=const K.hV("VALUE");static const QS=const K.hV("ALIAS");static const RS=const K.hV("ANCHOR");static const SS=const K.hV("TAG");static const NM=const K.hV("SCALAR");final String name;const K.hV(this.name);String toString()=>name;}class tE<R,eS>{final R first;final eS last;tE(this.first,this.last);String toString()=>'(${first}, ${last})';}void OM(String A,[BB B])=>US(A,B);typedef dynamic TS(String _0,[BB _1]);TS US=(A,[B]){if(B!=null)A=B.message(A);print(A);};String YS(B){var A=new StringBuffer();ZS(B,A);return A.toString();}void ZS(A,StringSink B){mI(A,0,B,true);}void mI(A,int C,StringSink B,bool D){if(A is Map){bS(A,C,B,D);}else if(A is Iterable){dS(A,C,B,D);}else if(A is String){B..writeln('"${aS(A)}"');}else if(A is double){B.writeln("!!float ${A}");}else{B.writeln(A);}}String aS(String A)=>A.replaceAll('"',r'\"').replaceAll("\n",r"\n");void bS(Map C,int B,StringSink A,bool G){if(!G){A.writeln();B+= 2;}final I=cS(C);I.forEach((D){final J=C[D];SM(B,A);A..write(D)..write(': ');mI(J,B,A,false);});}Iterable<String> cS(Map I){final B=[] ;final C=[] ;final D=[] ;I.forEach((A,G){if(G is String){B.add(A);}else if(G is Map){C.add(A);}else{D.add(A);}});return MR([B..sort(),C..sort(),D..sort()]) as Iterable<String>;}void dS(Iterable C,int B,StringSink A,bool D){if(!D){A.writeln();B+= 2;}C.forEach((G){SM(B,A);A.write('- ');mI(G,B,A,false);});}void SM(int A,StringSink B)=>B.write(' '*A);class HE{final DB QJ;final BB L;final uE versionDirective;final List<FC> BH;final bool startImplicit;final bool endImplicit;HE.iV(this.QJ,this.L,this.versionDirective,List<FC> A,{this.startImplicit: false,this.endImplicit: false}):BH=new UnmodifiableListView(A);String toString()=>QJ.toString();}class uE{final int pD;final int VD;uE(this.pD,this.VD);String toString()=>"%YAML ${pD}.${VD}";}class FC{final String qB;final String rD;FC(this.qB,this.rD);String toString()=>"%TAG ${qB} ${rD}";}abstract class DB{BB get L=>pa;BB pa;get value;}class PM extends DB with MapMixin,sP{final Map<dynamic,DB> qD;final nB Q;Map get value=>this;Iterable get keys=>qD.keys.map((A)=>A.value);PM.jV(Map<dynamic,DB> A,BB B,this.Q):qD=new UnmodifiableMapView<dynamic,DB>(A){pa=B;}operator[](B){var A=qD[B];return A==null?null:A.value;}}class QM extends DB with ListMixin{final List<DB> qD;final nB Q;List get value=>this;int get length=>qD.length;set length(int A){throw new UnsupportedError("Cannot modify an unmodifiable List");}QM.kV(List<DB> A,BB B,this.Q):qD=new UnmodifiableListView<DB>(A){pa=B;}operator[](int A)=>qD[A].value;operator[]=(int A,B){throw new UnsupportedError("Cannot modify an unmodifiable List");}}class KB extends DB{final value;final NB Q;KB.lV(this.value,EC A):Q=A.Q{pa=A.L;}KB.mV(this.value,BB A):Q=NB.NS{pa=A;}String toString()=>value.toString();}void RM(DB A,BB B){A.pa=B;}