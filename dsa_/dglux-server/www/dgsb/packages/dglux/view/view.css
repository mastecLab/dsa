
*{
  -webkit-flex: 0 0 auto ;
  flex: 0 0 auto;
}

/*default style for all div component*/
div,img{
  z-index:0;
  pointer-events:auto;
  box-sizing:border-box;
  -moz-box-sizing:border-box; /* Firefox */
}

div:focus{
  outline:none;
}


.flexGrow, flexGroupGroup > div{
  -webkit-flex: 1 0 auto ;
  flex: 1 0 auto;
}
.flexShrink, flexShrinkGroup > div{
  -webkit-flex: 0 1 auto ;
  flex: 0 1 auto;
}
.flexGrowShrink, .flexGrowShrinkGroup > div{
  -webkit-flex: 1 1 auto ;
  flex: 1 1 auto;
}
.flexWrap{
  -webkit-flex-wrap:wrap;
  flex-wrap:wrap;
}

.fullSize{
  width:100%;
  height:100%;
}

.spaceBetween
{
  justify-content:space-between;
  -webkit-justify-content:space-between;
}

.spaceAround
{
  justify-content:space-around;
  -webkit-justify-content:space-around;
}

.justifyContentCenter
{
  justify-content:center;
  -webkit-justify-content:center;
}

.alignItemsCenter
{
  align-items:center;
  -webkit-align-items:center;
}

.alignItemsLeft
{
  align-items:left;
  -webkit-align-items:left;
}

.alignItemsBaseLine
{
  align-items: baseline;
  -webkit-align-items: baseline;
}

.flexEnd
{
  justify-content:flex-end;
  -webkit-justify-content:flex-end;
}

.displayFlex
{
  display: flex;
  display: -webkit-flex;
}

.dgDisabled {
  pointer-events:none;
  opacity:0.6;
}

/*svg need special rules, and they need to be put before dgDisableMouse*/
svg.dgSvgSvg{
  pointer-events:none;
  overflow:visible;
  min-width:1px;
  min-height:1px;
}
svg.dgSvgSvg > *{
  pointer-events:visible;
}

.dgDisableMouseSelf{
  pointer-events:none;
}
.dgDisableMouseSelf > *{
  pointer-events:visible;
}
.dgDisableMouseSelf > .dgDisableMouseSelf{
  pointer-events:none;
}

div.dgDisableMouse {
  pointer-events:none ;
}

div.dgDisableMouse * {
  pointer-events:none ;
}

.dgDisableMouseChildren * {
  pointer-events:none ;
}

div.dgDiv{

}

div.noSelect{
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}


div.absolute{

}
div.absolute > div, div.absolute > svg{
  position:absolute;
}

div.vertical{
  /* old style or deprecated style */
  display: -ms-flexbox;
  -ms-flex-direction: column;

  display: -webkit-flexbox;
  display: -webkit-box;
  -webkit-box-orient: vertical;

  display: -webkit-flex;
  -webkit-flex-direction: column;

  display: flex;
  flex-direction: column;

  align-content:flex-start;
  -webkit-align-content:flex-start;
}

div.vertical > div, div.vertical > svg{
  position:relative;
}

div.horizontal{
  /* old style or deprecated style */
  display: -ms-flexbox;
  -ms-flex-direction: row;

  display: -webkit-flexbox;
  display: -webkit-box;
  -webkit-box-orient: horizontal;


  display: -webkit-flex;
  -webkit-flex-direction: row;

  display: flex;
  flex-direction: row;

  align-content:flex-start;
  -webkit-align-content:flex-start;
}
div.horizontal > div, div.horizontal > svg{
  position:relative;
}

div.flexToolBar{
  justify-content: flex-end;
  align-items: center;
  flex-wrap: wrap;
  align-content: flex-end;

  -webkit-justify-content: flex-end;
  -webkit-align-items: center;
  -webkit-flex-wrap: wrap;
  -webkit-align-content: flex-end;
}
div.dgResizeSensor{
  visibility:hidden !important;
  position:absolute !important;
  width:100% !important;
  height:100% !important;
  overflow:hidden !important;
  z-index:-9999 !important;
}

.resize-triggers {
  visibility: hidden !important;
  -webkit-overflow-scrolling:auto; /* fix scrolling issue on iphone */
  min-width: 20px;   /* Fix for resize sensor disfunction, when width < scrollbar width */
  min-height: 20px;  /* Fix for resize sensor disfunction, when height < scrollbar width */
}

.resize-triggers, .resize-triggers > div {
  content: " ";
  display: block !important;
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  height: 100% !important;
  width: 100% !important;
  overflow: hidden !important;
}

.resize-triggers > div {
  overflow: auto;
}
.expand-trigger {
  pointer-events:none;
}
.contract-trigger {
  pointer-events:none;
}
.contract-trigger > div {
  width: 200% !important;
  height: 200% !important;
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
}

.resize-trigger-target
{
  position: absolute;
}



div.dgPopupGreyOut{
  width:100%;
  height:100%;
  background-color: #888888;
  opacity: 0.3;
}

.dgVirtualVScroller{
  position:absolute;
  width:100%;
  height:100%;
  overflow:auto;
}
.dgVirtualVScroller > div{
  position:absolute;
}
.dgVirtualVScrollerHolder{
  min-width:100%;
  -webkit-transform: translate3d(0, 0, 0);/* force gpu to fix Dennis' scrolling bug*/
}
div.dgFormRow{
  padding:1px;

  display: -webkit-flex;
  -webkit-flex-direction: row;

  display: flex;
  flex-direction: row;

  align-content:flex-start;
  -webkit-align-content:flex-start;

  align-items: center;
}
div.dgFormRow > * {
  position:relative;
}
div.dgFormRow > div:first-child {
  width:30%;
  text-align:right;
}
div.dgFormRow > input, div.dgFormRow > #dsaLicenseType {
  width:50%;
}

.dgDraggingWireSvg{
  width:100%;
  height:100%;
  z-index:9999;
  position:absolute;
  pointer-events:none;
  transform:translate3d(0,0,0);
  -webkie-transform:translate3d(0,0,0);
}

div.widgetsBasicColorHolder {
  color: #ffffff;
}

.sectionContentDiv {
  padding-top: 6px;
  padding-bottom: 6px;
}

.dgMapbox {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dgMapboxWrapper {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 100;
}

.dgMapboxApikeyHelper {
  z-index: 101;

  padding: 20px;
  border: 1px solid #424244;

  background-color: #323232;
  border-radius: 2px;
  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);

  color: rgba(255,255,255,0.7);
  font-family: 'Open Sans', 'Helvetica', sans-serif;
}

.dgMapboxApikeyHelper.hide {
  display: none;
}

.dgMapboxCalloutHelper {
  position: absolute;
  height: 1px;
  width: 1px;
  
  opacity: 0;
  z-index: -999;
}

/*
 * styles for tree component
 * ===========================
 */

.dgTopology {
  transform-origin: 0 0 0;
  overflow: hidden;
  -webkit-text-select: none;
}

.dgTopology > div {
  width: 100%;
  height: 100%;

  transform-origin: 0 0;
}

.dgTopology svg {
  min-height: 100%;
  min-width: 100%;
}

.dgTopology * {
  position: absolute;
}

.dgTopology .node,
.dgTopology .value {
  transform-origin: 50% 50%;
}

.dgTopology .defaultNode {
  top: -4px;
  left: -4px;
  
  width: 8px;
  height: 8px;
  
  border: 2px solid;
  border-radius: 4px;
}

.dgTopology .text {
  top: -6px;
  left: 8px;

  height: 10px;
  width: 130px;

  font-size: 10px;
  font-family: sans-serif;
  white-space: nowrap;
}

.dgTopology .value {
  top: 1px;
  left: 1px;

  width: 2px;
  height: 2px;

  border-radius: 1px;
}

.dgTopology .link {
  stroke-width: 1.5px;
  fill: none;
}